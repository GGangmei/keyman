#/usr/bin/env bash

_km-package-get_completions()
{
    local cur prev opts cache
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    opts="-h --help -v --verbose -vv --veryverbose --version"

    cache=${XDG_CACHE_HOME:-~/.cache}/keyman/kmpdirlist

    if [[ ${cur} == -* ]] ; then
        COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
        return 0
    fi

    words=""
    if [[ ! -e $cache ]] ; then
        # NOTE: identical code in `km-package-install.bash-completion`.
        # Unfortunately with bash completion scripts it's not possible to factor out
        # common code.
        if [[ -e ./km-package-install ]]; then
            python3 -c "from importlib.machinery import SourceFileLoader;from importlib.util import module_from_spec, spec_from_loader;loader = SourceFileLoader('km_package_install', './km-package-install');spec = spec_from_loader(loader.name, loader);mod = module_from_spec(spec);loader.exec_module(mod);mod.list_keyboards()"
        else
            python3 -c "from importlib.machinery import SourceFileLoader;from importlib.util import module_from_spec, spec_from_loader;loader = SourceFileLoader('km_package_install', '/usr/bin/km-package-install');spec = spec_from_loader(loader.name, loader);mod = module_from_spec(spec);loader.exec_module(mod);mod.list_keyboards()"
        fi
    fi

    if [[ -r $cache ]] ; then
        for file in `cat $cache`; do words="${words} ${file}"; done
        COMPREPLY=($(compgen -W "${words}" -- ${cur}))
        return 0
    fi
}

complete -F _km-package-get_completions km-package-get
