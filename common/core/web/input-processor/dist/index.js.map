{"version":3,"file":"index.js","sourceRoot":"/keyman/","sources":["node_modules/eventemitter3/index.js","node_modules/@keymanapp/lexical-model-layer/build/intermediate/embedded_worker.js","node_modules/@keymanapp/lexical-model-layer/virtualizedWorker.ts","node_modules/@keymanapp/lexical-model-layer/node-defaultWorker.ts","src/includes/events.ts","node_modules/@keymanapp/keyboard-processor/src/text/kmwstring.ts","node_modules/@keymanapp/keyboard-processor/src/text/codes.ts","node_modules/@keymanapp/keyboard-processor/src/text/engineDeviceSpec.ts","node_modules/@keymanapp/keyboard-processor/src/text/deadkeys.ts","node_modules/@keymanapp/keyboard-processor/src/text/outputTarget.ts","node_modules/@keymanapp/keyboard-processor/src/text/keyEvent.ts","node_modules/@keymanapp/keyboard-processor/src/text/ruleBehavior.ts","node_modules/@keymanapp/keyboard-processor/src/text/defaultOutput.ts","node_modules/@keymanapp/keyboard-processor/src/environment.inc.ts","node_modules/@keymanapp/keyboard-processor/src/utils/version.ts","node_modules/@keymanapp/keyboard-processor/src/utils/deepCopy.ts","node_modules/@keymanapp/keyboard-processor/src/keyboards/defaultLayouts.ts","node_modules/@keymanapp/keyboard-processor/src/keyboards/activeLayout.ts","node_modules/@keymanapp/keyboard-processor/src/text/systemStores.ts","node_modules/@keymanapp/keyboard-processor/src/text/kbdInterface.ts","node_modules/@keymanapp/keyboard-processor/src/keyboards/keyboard.ts","node_modules/@keymanapp/keyboard-processor/src/text/keyMapping.ts","node_modules/@keymanapp/keyboard-processor/src/utils/globalObject.ts","node_modules/@keymanapp/keyboard-processor/src/text/keyboardProcessor.ts","node_modules/@keymanapp/lexical-model-layer/node_modules/es6-shim/es6-shim.min.js","node_modules/@keymanapp/lexical-model-layer/promise-store.ts","node_modules/@keymanapp/lexical-model-layer/index.ts","src/text/prediction/languageProcessor.ts","src/text/inputProcessor.ts"],"names":[],"mappings":"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,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,YAAY,CAAC;gBAChD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,eAAe,CAAC;gBACpD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,YAAY,CAAC;gBAChD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,mBAAmB,CAAC;gBACxD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,mBAAmB,CAAC;gBACxD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,eAAe,CAAC;gBACpD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,YAAY,CAAC;gBAChD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,YAAY,CAAC;gBAChD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,YAAY,CAAC;gBAChD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,aAAa,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,aAAa,CAAC;gBAClD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,YAAY,CAAC;gBACjD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,eAAe,CAAC;gBACrD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,E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,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM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C;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC;gBACnD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,aAAa,CAAC;gBACpD,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,MAAM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AO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,cAAc,CAAC;gBACvD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,cAAc,CAAC;gBACvD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,YAAY,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC,CAAC,aAAa,CAAC;gBACrD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;gBACtD,CAAC,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,aAAa,CAAC;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AC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAEhB,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;gBACjB,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;gBACjB,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;gBACjB,EAAE,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC;gBACjB,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;gBACf,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAChB,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;gBAEhB,UAAU,CAAC,YAAY,GAAG,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC;YACpC,CAAC;YAED;;;;;;eAMG;YACI,+BAAoB,GAA3B,UAA4B,MAAgC;gBAC1D,OAAO,UAAU,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACpF,CAAC;YAAA,CAAC;YAEF,sBAAkB,yBAAW;qBAA7B;oBACE,IAAG,CAAC,UAAU,CAAC,YAAY,EAAE;wBAC3B,UAAU,CAAC,WAAW,EAAE,CAAC;qBAC1B;oBAED,OAAO,UAAU,CAAC,YAAY,CAAC;gBACjC,CAAC;;;eAAA;YAhIe,qBAAU,GAAmB,IAAI,cAAc,EAAE,CAAC;YAClD,sBAAW,GAAoB,IAAI,eAAe,EAAE,CAAC;YAgIvE,iBAAC;SAAA,AAlID,IAkIC;QAlIY,iBAAU,aAkItB,CAAA;IACH,CAAC,EAnLa,MAAM,GAAN,UAAM,KAAN,UAAM,QAmLnB;AAAD,CAAC,EAnLS,GAAG,KAAH,GAAG,QAmLZ;ACvLD,IAAU,GAAG,CA+BZ;AA/BD,WAAU,GAAG;IAAC,IAAA,MAAM,CA+BnB;IA/Ba,WAAA,MAAM;QAAC,IAAA,KAAK,CA+BzB;QA/BoB,WAAA,KAAK;YACxB;;;;;eAKG;YACH,SAAgB,eAAe;gBAC7B,2DAA2D;gBAC3D,6GAA6G;gBAC7G,sGAAsG;gBACtG,IAAG,OAAO,UAAU,IAAI,WAAW,EAAE;oBACnC,OAAO,UAAU,CAAC,CAAE,6CAA6C;oBACjE,mFAAmF;iBACpF;qBAAM,IAAG,OAAO,MAAM,IAAI,WAAW,EAAE;oBACtC,aAAa;oBACb,OAAO,MAAM,CAAC,CAAC,4BAA4B;oBAC3C,aAAa;iBACd;qBAAM,IAAG,OAAO,IAAI,IAAI,WAAW,EAAE;oBACpC,aAAa;oBACb,OAAO,IAAI,CAAC,CAAC,mBAAmB;iBACjC;qBAAM;oBACL,+EAA+E;oBAC/E,+EAA+E;oBAC/E,+CAA+C;oBAC/C,EAAE;oBACF,wFAAwF;oBACxF,aAAa;oBACb,OAAQ,MAAmC,CAAC;iBAC7C;YACH,CAAC;YAvBe,qBAAe,kBAuB9B,CAAA;QACH,CAAC,EA/BoB,KAAK,GAAL,YAAK,KAAL,YAAK,QA+BzB;IAAD,CAAC,EA/Ba,MAAM,GAAN,UAAM,KAAN,UAAM,QA+BnB;AAAD,CAAC,EA/BS,GAAG,KAAH,GAAG,QA+BZ;AC/BD,8CAA8C;AAC9C,qCAAqC;AACrC,oCAAoC;AACpC,iCAAiC;AACjC,4CAA4C;AAC5C,oCAAoC;AACpC,8DAA8D;AAC9D,wCAAwC;AACxC,0CAA0C;AAC1C,yCAAyC;AACzC,uCAAuC;AACvC,iDAAiD;AACjD,+BAA+B;AAC/B,sCAAsC;AACtC,6EAA6E;AAC7E,4CAA4C;AAC5C,gDAAgD;AAChD,iDAAiD;AAEjD,IAAU,GAAG,CAspBZ;AAtpBD,WAAU,GAAG;IAAC,IAAA,MAAM,CAspBnB;IAtpBa,WAAA,MAAM;QAAC,IAAA,IAAI,CAspBxB;QAtpBoB,WAAA,IAAI;YAcvB;gBA2BE,2BAAY,OAA8B;oBAtB1C,gHAAgH;oBAChH,sHAAsH;oBACtH,cAAS,GAAG;wBACV,QAAQ,EAAC,KAAK;wBACd,WAAW,EAAC,KAAK;wBACjB,UAAU,EAAC,KAAK;qBACjB,CAAC;oBAEF,uFAAuF;oBACvF,+EAA+E;oBAC/E,+BAA+B;oBAC/B,kBAAa,GAAW,CAAC,CAAC;oBAYxB,IAAG,CAAC,OAAO,EAAE;wBACX,OAAO,GAAG,iBAAiB,CAAC,eAAe,CAAC;qBAC7C;oBAED,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,IAAI,iBAAiB,CAAC,eAAe,CAAC,UAAU,CAAC;oBACrF,IAAI,CAAC,iBAAiB,GAAG,IAAI,KAAA,iBAAiB,CAAC,OAAO,CAAC,uBAAuB,CAAC,CAAC;oBAChF,IAAI,CAAC,gBAAgB,EAAE,CAAC;gBAC1B,CAAC;gBAEO,4CAAgB,GAAxB;oBACE,oFAAoF;oBACpF,+DAA+D;oBAC/D,EAAE;oBACF,4FAA4F;oBAC5F,IAAI,UAAU,GAAG,OAAA,KAAK,CAAC,eAAe,EAAE,CAAC;oBACzC,UAAU,CAAC,KAAA,iBAAiB,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;oBAEnE,2EAA2E;oBAC3E,IAAG,IAAI,CAAC,cAAc,EAAE;wBACtB,IAAI,CAAC,iBAAiB,CAAC,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;qBAC7D;gBACH,CAAC;gBAED,sBAAW,6CAAc;yBAAzB;wBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;oBAC/C,CAAC;yBAED,UAA0B,QAA4B;wBACpD,IAAI,CAAC,iBAAiB,CAAC,cAAc,GAAG,QAAQ,CAAC;wBAEjD,iFAAiF;wBACjF,wBAAwB;wBACxB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACtB,CAAC;;;mBARA;gBAUD,sBAAI,yCAAU;yBAAd;wBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAA,iBAAiB,CAAC,SAAS,CAAuB,CAAC;oBAChG,CAAC;;;mBAAA;gBAED,sBAAW,sCAAO;yBAAlB;wBACE,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;oBAC/B,CAAC;oBAED,uFAAuF;yBACvF,UAAmB,KAAa;wBAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;oBAC7B,CAAC;;;mBALA;gBAOD;;;;;;;mBAOG;gBACH,+CAAmB,GAAnB,UAAoB,GAAa;oBAC/B,IAAI,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC;oBAC7B,IAAI,QAAQ,GAAG,KAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBACvC,IAAI,YAAY,GAAG,IAAI,KAAA,YAAY,EAAE,CAAC;oBAEtC,IAAI,OAAO,GAAG,KAAK,CAAC;oBACpB,IAAI,IAAI,GAAG,EAAE,CAAC;oBACd,IAAI,OAA4B,CAAC;oBACjC,IAAG,GAAG,CAAC,WAAW,IAAI,YAAY,CAAC,WAAW,EAAE;wBAC9C,OAAO,GAAG,IAAI,CAAC,CAAE,uGAAuG;wBACvG,sBAAsB;wBAEvC,IAAG,KAAA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE;4BAC/B,0FAA0F;4BAC1F,YAAY,CAAC,sBAAsB,GAAG,IAAI,CAAC;4BAE3C,kGAAkG;4BAClG,oCAAoC;yBACrC;6BAAM,IAAG,CAAC,OAAO,GAAG,KAAA,aAAa,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,EAAE;4BACpE,QAAO,OAAO,EAAE;gCACd,KAAK,KAAA,mBAAmB,CAAC,SAAS;oCAChC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;oCACtD,MAAM;gCACR,KAAK,KAAA,mBAAmB,CAAC,KAAK;oCAC5B,YAAY,CAAC,oBAAoB,EAAE,CAAC;oCACpC,MAAM;gCACR,KAAK,KAAA,mBAAmB,CAAC,KAAK;oCAC5B,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,EAAE,GAAG,CAAC,CAAC;oCACpD,MAAM;gCACR,0BAA0B;gCACxB,2CAA2C;gCAC3C,qHAAqH;gCACvH;oCACE,sFAAsF;oCACtF,YAAY,CAAC,QAAQ,GAAG,+CAA+C,GAAI,OAAkB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,mBAAmB,CAAC;6BACrJ;yBACF;6BAAM;4BACL,yDAAyD;4BACzD,OAAO,GAAG,KAAK,CAAC;yBACjB;qBACF;oBAED,IAAI,UAAU,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;oBAEvE,IAAG,CAAC,OAAO,EAAE;wBACX,IAAG,CAAC,IAAI,GAAG,KAAA,aAAa,CAAC,MAAM,CAAC,GAAG,EAAE,UAAU,CAAC,CAAC,IAAI,IAAI,EAAE;4BACzD,OAAO,GAAG,KAAA,aAAa,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAA;4BAChD,IAAG,OAAO,IAAI,KAAA,mBAAmB,CAAC,SAAS,EAAE;gCAC3C,mFAAmF;gCACnF,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;6BACpD;iCAAM,IAAG,OAAO,IAAI,KAAA,aAAa,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,EAAE,mCAAmC;gCACtF,iGAAiG;gCACjG,gCAAgC;gCAChC,OAAO,IAAI,CAAC;6BACb;iCAAM;gCACL,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,EAAE,IAAI,CAAC,CAAC;6BACtD;yBACF;6BAAM;4BACL,qCAAqC;4BACrC,OAAO,IAAI,CAAC;yBACb;qBACF;oBAED,kFAAkF;oBAClF,IAAG,YAAY,CAAC,QAAQ,EAAE;wBACxB,OAAO,YAAY,CAAC;qBACrB;oBAED,IAAI,aAAa,GAAG,YAAY,CAAC,sBAAsB,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;oBACvE,YAAY,CAAC,aAAa,GAAG,aAAa,CAAC;oBAE3C,OAAO,YAAY,CAAC;gBACtB,CAAC;gBAED,qDAAyB,GAAzB,UAA0B,GAAkB;oBAC1C,oCAAoC;oBACpC,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAI,CAAC,CAAC,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAA,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;oBAC1G,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAA,KAAK,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAA,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC;oBAClH,GAAG,CAAC,OAAO,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAE,CAAC,CAAC,KAAA,KAAK,CAAC,aAAa,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,KAAA,KAAK,CAAC,aAAa,CAAC,gBAAgB,CAAC,CAAC;oBAExH,mFAAmF;oBACnF,IAAG,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,IAAI,IAAI,EAAE;wBAChC,GAAG,CAAC,aAAa,GAAC,KAAK,CAAC;qBACzB;oBAED,uDAAuD;oBACvD,IAAG,OAAO,GAAG,CAAC,KAAK,IAAI,WAAW,EAAE;wBAClC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,mBAAmB,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAA,wBAAwB;wBACxE,IAAG,CAAC,GAAG,CAAC,KAAK,EAAE;4BACb,gEAAgE;4BAChE,oEAAoE;4BACpE,sBAAsB;4BACtB,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;yBACf;qBACF;oBAED,iGAAiG;oBACjG,IAAG,CAAC,GAAG,CAAC,UAAU,GAAG,KAAA,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,IAAI,KAAA,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,EAAE;wBACvI,GAAG,CAAC,UAAU,IAAI,CAAC,KAAA,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;wBACxD,GAAG,CAAC,UAAU,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;qBAC/C;gBACH,CAAC;gBAED,4CAAgB,GAAhB,UAAiB,QAAkB,EAAE,YAA0B;oBAC7D,IAAI,aAA2B,CAAC;oBAEhC,uDAAuD;oBACvD,IAAG,IAAI,CAAC,cAAc,IAAI,QAAQ,CAAC,KAAK,IAAI,CAAC,EAAE;wBAC7C;;;;;;;2BAOG;wBACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;wBACxB,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;qBACjF;oBAED,IAAG,CAAC,aAAa,EAAE;wBACjB,oEAAoE;wBACpE,oEAAoE;wBACpE,QAAQ,CAAC,KAAK,GAAC,QAAQ,CAAC,MAAM,IAAI,QAAQ,CAAC,KAAK,CAAC;wBAEjD,+CAA+C;wBAC/C,4GAA4G;wBAC5G,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,YAAY,CAAC;wBAEzD,4GAA4G;wBAC5G,kDAAkD;wBAClD,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;wBAEnD,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,GAAG,IAAI,CAAC;qBAClD;oBAED,OAAO,aAAa,CAAC;gBACvB,CAAC;gBAED,sCAAsC;gBAC/B,iCAAe,GAAtB,UAAuB,GAAa,EAAE,OAAgB,EAAE,UAAmB;oBACzE,0GAA0G;oBAC1G,0GAA0G;oBAC1G,IAAG,GAAG,CAAC,KAAK,IAAI,KAAA,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;wBACzC,0GAA0G;wBAC1G,wGAAwG;wBACxG,IAAI,YAAY,GAAa,IAAI,KAAA,QAAQ,EAAE,CAAC;wBAC5C,KAAI,IAAI,GAAG,IAAI,GAAG,EAAE;4BAClB,YAAY,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC;yBAC9B;wBAED,6EAA6E;wBAC7E,8BAA8B;wBAC9B,YAAY,CAAC,KAAK,GAAG,QAAQ,CAAC;wBAC9B,YAAY,CAAC,KAAK,GAAG,IAAI,KAAA,IAAI,EAAE,CAAC,CAAC,wCAAwC;wBACzE,YAAY,CAAC,UAAU,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE,0DAA0D;wBAC3G,IAAI,UAAU,GAAW,KAAA,aAAa,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;wBAElE;;;2BAGG;wBACH,GAAG,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC;wBACvB,IAAG,UAAU,EAAE;4BACb,sGAAsG;4BACtG,2FAA2F;4BAC3F,GAAG,CAAC,KAAK,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;yBACtC;6BAAM;4BACL,6EAA6E;4BAC7E,0BAA0B;4BAC1B,OAAO,GAAG,CAAC,KAAK,CAAC;yBAClB;qBACF;oBAED,IAAG,UAAU,EAAE;wBACb,wGAAwG;wBACxG,wEAAwE;wBACxE,IAAG,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,GAAG,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,eAAe,IAAI,CAAC,GAAG,CAAC,KAAK,IAAI,EAAE,IAAI,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,CAAC,eAAe,EAAE;4BAChH,GAAG,CAAC,UAAU,IAAI,IAAI,CAAC,CAAE,4DAA4D;4BACrF,GAAG,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,2EAA2E;yBAC/F;qBACF;gBACH,CAAC;gBAED;;;;;mBAKG;gBACI,kCAAgB,GAAvB,UAAwB,OAAe;oBACrC,IAAI,QAAQ,GAAC,CAAC,CAAC;oBACf,IAAG,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;wBAChC,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;qBAC1C;oBAED,0FAA0F;oBAC1F,IAAI,WAAW,GAAC,KAAK,CAAC;oBACtB,IAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;wBACnC,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;wBACzC,WAAW,GAAC,IAAI,CAAC;qBAClB;oBACD,IAAG,OAAO,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE;wBACpC,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;wBACzC,WAAW,GAAC,IAAI,CAAC;qBAClB;oBACD,IAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAK,CAAC,IAAI,CAAC,WAAW,EAAE;wBAChD,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;qBACzC;oBAED,IAAI,UAAU,GAAC,KAAK,CAAC;oBACrB,IAAG,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE;wBAClC,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;wBACxC,UAAU,GAAC,IAAI,CAAC;qBACjB;oBACD,IAAG,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE;wBACnC,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;wBACxC,UAAU,GAAC,IAAI,CAAC;qBACjB;oBACD,IAAG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,IAAK,CAAC,IAAI,CAAC,UAAU,EAAE;wBAC9C,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;qBACxC;oBAED,OAAO,QAAQ,CAAC;gBAClB,CAAC;gBAED;;;;;;;;;;;;;;;mBAeG;gBACH,+CAAmB,GAAnB,UAAoB,OAAe;oBACjC,IAAI,cAAc,GAAG,IAAI,CAAC,cAAc,CAAC;oBACzC,IAAG,CAAC,cAAc,CAAC,YAAY,CAAC,cAAc,CAAC,EAAE;wBAC/C,IAAI,CAAC,GAAC,EAAE,CAAC;wBACT,IAAG,OAAO,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,QAAQ,EAAE;4BACzD,0BAA0B;4BAC1B,uGAAuG;4BACvG,6CAA6C;4BAC7C,iDAAiD;4BACjD,IAAI,CAAC,GAAC,cAAc,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BACrD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCAC5B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,GAAC,CAAC,GAAC,GAAG,CAAC,CAAC,qEAAqE;6BACnG;yBACF;wBACD,cAAc,CAAC,YAAY,CAAC,cAAc,CAAC,GAAC,CAAC,CAAC;qBAC/C;oBAED,IAAI,GAAG,GAAC,cAAc,CAAC,YAAY,CAAC,cAAc,CAAC,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC;oBAC3E,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBACvB,CAAC;gBAED;;;;;;;;mBAQG;gBACH,0CAAc,GAAd,UAAe,CAAW,EAAE,CAAS,EAAE,CAAiB;oBACtD,IAAI,aAAa,GAAC,CAAC,EAAE,UAAU,GAAC,CAAC,EAAE,CAAC,CAAC;oBAErC,IAAI,SAAS,GAAI,CAAC,MAAM,EAAE,UAAU,EAAE,aAAa,CAAC,CAAC;oBACrD,IAAI,QAAQ,GAAK,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC;oBAErD,IAAG,CAAC,IAAI,CAAC,cAAc,EAAE;wBACvB,OAAO,IAAI,CAAC;qBACb;oBAED,IAAG,CAAC,EAAE;wBACJ,gCAAgC;wBAChC,aAAa,GAAG,CAAC,CAAC,UAAU,CAAC;wBAC7B,UAAU,GAAG,CAAC,CAAC,OAAO,CAAC;wBAEvB,gGAAgG;wBAChG,IAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC;4BAClE,CAAC,IAAI,CAAC,aAAa,GAAG,KAAA,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC,IAAI,KAAA,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,EAAE;4BACvG,aAAa,IAAI,KAAA,KAAK,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;4BACtD,aAAa,IAAI,CAAC,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;yBAC/C;wBAED,KAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAClC,IAAG,UAAU,GAAG,KAAA,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gCACjD,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,UAAU,GAAG,KAAA,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;6BAC9E;yBACF;qBACF;yBAAM,IAAG,CAAC,EAAE;wBACX,aAAa,IAAI,CAAC,CAAC;wBAEnB,KAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAClC,IAAG,CAAC,GAAG,KAAA,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gCACxC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;6BACpC;yBACF;qBACF;yBAAM;wBACL,aAAa,IAAI,CAAC,CAAC,CAAC;wBAEpB,KAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BAClC,IAAG,CAAC,GAAG,KAAA,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;gCACxC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC;6BACrC;yBACF;qBACF;oBAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;oBAC9C,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED,sCAAU,GAAV,UAAW,QAAgB;oBACzB,OAAO,OAAA,SAAS,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAChD,CAAC;gBAED;;;;;;;mBAOG;gBACH,uCAAW,GAAX,UAAY,QAAkB,EAAE,YAA6B;oBAA7B,6BAAA,EAAA,oBAA6B;oBAC3D,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAC7B,IAAI,SAAS,GAAG,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC;oBAC1D,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBAEnE,4DAA4D;oBAC5D,IAAG,OAAO,SAAS,IAAI,QAAQ,EAAE;wBAC/B,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC;qBAC/C;oBAED,0CAA0C;oBAC1C,IAAG,CAAC,SAAS,EAAE;wBACb,QAAO,OAAO,EAAE;4BACd,KAAK,UAAU,CAAC;4BAChB,KAAK,UAAU,CAAC;4BAChB,KAAK,SAAS;gCACZ,SAAS,GAAG,OAAO,CAAC;gCACpB,MAAM;4BACR,KAAK,YAAY,CAAC;4BAClB,KAAK,SAAS;gCACZ,IAAG,QAAQ,EAAE;oCACX,SAAS,GAAG,UAAU,CAAC;oCACvB,MAAM;iCACP;4BACH,KAAK,YAAY,CAAC;4BAClB,KAAK,SAAS;gCACZ,IAAG,QAAQ,EAAE;oCACX,SAAS,GAAG,WAAW,CAAC;oCACxB,MAAM;iCACP;4BACH,KAAK,QAAQ;gCACX,SAAS,GAAG,MAAM,CAAC;gCACnB,MAAM;4BACR,KAAK,SAAS,CAAC;4BACf,KAAK,QAAQ;gCACX,IAAG,QAAQ,EAAE;oCACX,SAAS,GAAG,SAAS,CAAC;oCACtB,MAAM;iCACP;4BACH,KAAK,SAAS,CAAC;4BACf,KAAK,QAAQ;gCACX,IAAG,QAAQ,EAAE;oCACX,SAAS,GAAG,UAAU,CAAC;oCACvB,MAAM;iCACP;4BACH,KAAK,OAAO;gCACV,SAAS,GAAG,KAAK,CAAC;gCAClB,MAAM;4BACR,KAAK,SAAS;gCACZ,IAAG,QAAQ,EAAE;oCACX,SAAS,GAAG,mBAAmB,CAAC;iCACjC;qCAAM;oCACL,SAAS,GAAG,UAAU,CAAC;iCACxB;gCACD,MAAM;4BACR,KAAK,cAAc,CAAC;4BACpB,KAAK,YAAY,CAAC;4BAClB,KAAK,WAAW,CAAC;4BACjB,KAAK,SAAS,CAAC;4BACf,KAAK,SAAS,CAAC;4BACf,KAAK,WAAW;gCACd,SAAS,GAAG,SAAS,CAAC;gCACtB,MAAM;yBACT;qBACF;oBAED,wFAAwF;oBACxF,IAAG,CAAC,SAAS,EAAE;wBACb,OAAO,KAAK,CAAC;qBACd;oBAED,+BAA+B;oBAC/B,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,SAAS,CAAC,CAAC;oBAEtC,OAAO,IAAI,CAAC;gBACd,CAAC;gBAED;;;;;mBAKG;gBACH,uCAAW,GAAX,UAAY,QAAkB,EAAE,EAAU;oBACxC,IAAI,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC;oBAC/B,IAAI,CAAC,GAAG,WAAW,CAAC;oBAEpB,iDAAiD;oBACjD,IAAG,EAAE,IAAI,WAAW,IAAI,QAAQ,CAAC,MAAM,CAAC,UAAU,IAAI,KAAA,UAAU,CAAC,OAAO,EAAE;wBACxE,OAAO,KAAK,CAAC;qBACd;oBAED,IAAI,GAAG,GAAC,EAAE,CAAC;oBACX,IAAI,CAAC,CAAC;oBAEN,IAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,IAAI,KAAA,UAAU,CAAC,OAAO,EAAE;wBACnD,kFAAkF;wBAClF,IAAI,YAAY,GAAE,CAAC,UAAU,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;wBAE3F,KAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;4BACrC,iDAAiD;4BACjD,GAAG,GAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;4BAC3C,GAAG,GAAC,GAAG,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;yBACrC;wBAED,oGAAoG;wBACpG,gGAAgG;wBAChG,IAAG,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,SAAS,IAAI,WAAW,IAAI,QAAQ,IAAI,WAAW,IAAI,UAAU,IAAI,GAAG,IAAI,EAAE,EAAE;4BAC5H,CAAC,GAAG,EAAE,CAAC;yBACR;wBACD,yEAAyE;wBACzE,mEAAmE;wBACnE,EAAE;wBACF,gGAAgG;wBAChG,4FAA4F;6BACvF;4BACH,mCAAmC;4BACnC,IAAI,QAAQ,GAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC;4BAEnD,2CAA2C;4BAC3C,KAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gCACrC,iDAAiD;gCACjD,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,CAAC;gCACvC,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;6BACjC;4BAED,yDAAyD;4BACzD,QAAO,EAAE,EAAE;gCACT,KAAK,OAAO;oCACV,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;oCACzC,MAAM;gCACR,KAAK,UAAU;oCACb,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;oCACzC,MAAM;gCACR,KAAK,WAAW;oCACd,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;oCACzC,MAAM;gCACR,KAAK,MAAM;oCACT,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oCACxC,MAAM;gCACR,KAAK,SAAS;oCACZ,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oCACxC,MAAM;gCACR,KAAK,UAAU;oCACb,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;oCACxC,MAAM;gCACR,KAAK,KAAK;oCACR,QAAQ,IAAI,KAAA,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oCACvC,MAAM;gCACR;oCACE,CAAC,GAAG,EAAE,CAAC;6BACV;4BAED,gHAAgH;4BAChH,IAAG,CAAC,IAAI,SAAS,EAAE;gCACjB,IAAG,CAAC,IAAI,EAAE,EAAE;oCACV,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;iCAC/B;qCAAM;oCACL,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC;iCACzC;6BACF;yBACF;wBAED,IAAG,CAAC,IAAI,EAAE,EAAE;4BACV,CAAC,GAAG,SAAS,CAAC;yBACf;qBACF;yBAAM;wBACL,gHAAgH;wBAChH,+GAA+G;wBAC/G,CAAC,GAAG,EAAE,CAAC;qBACR;oBAED,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBACpE,IAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE;wBACrB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC;qBAClB;yBAAM;wBACL,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;qBAC1B;gBACH,CAAC;gBAED,6FAA6F;gBAC7F,kBAAkB;gBAClB,2CAAe,GAAf,UAAgB,MAAgB,EAAE,SAAkB;oBAClD,IAAI,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;oBAEhC,IAAG,CAAC,IAAI,CAAC,cAAc,EAAE;wBACvB,OAAO,KAAK,CAAC;qBACd;oBAED,QAAO,MAAM,CAAC,KAAK,EAAE;wBACnB,KAAK,CAAC;4BACJ,YAAY,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,CAAC;4BAChC,MAAM,CAAC,iDAAiD;wBAC1D,KAAK,EAAE,CAAC,CAAC,wCAAwC;wBACjD,KAAK,EAAE,CAAC;wBACR,KAAK,EAAE,CAAC;wBACR,KAAK,EAAE,CAAC,CAAC,6CAA6C;wBACtD,KAAK,GAAG,CAAC;wBACT,KAAK,GAAG;4BACN,iGAAiG;4BACjG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,YAAY,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC1E,IAAG,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE;gCAC3B,OAAO,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,MAAM,CAAC,KAAK,GAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,QAAQ;6BACjE;iCAAM;gCACL,OAAO,IAAI,CAAC;6BACb;qBACJ;oBAED,IAAG,MAAM,CAAC,eAAe,EAAE;wBACzB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;wBAC/C,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;qBACnC;oBAED,mCAAmC;oBACnC,OAAO,KAAK,CAAC;gBACf,CAAC;gBAED,wCAAY,GAAZ;oBACE,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;oBAEzB,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;oBAC3C,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACnC,CAAC;gBAAA,CAAC;gBAEF,2CAAe,GAAf,UAAgB,MAAwB;oBACtC,IAAI,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;oBAC3D,IAAG,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE;wBAC7B,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;qBAC1B;gBACH,CAAC;gBAAA,CAAC;gBAroBqB,iCAAe,GAAyB;oBAC7D,UAAU,EAAE,IAAI;iBACjB,CAAA;gBAooBH,wBAAC;aAAA,AAvoBD,IAuoBC;YAvoBY,sBAAiB,oBAuoB7B,CAAA;QACH,CAAC,EAtpBoB,IAAI,GAAJ,WAAI,KAAJ,WAAI,QAspBxB;IAAD,CAAC,EAtpBa,MAAM,GAAN,UAAM,KAAN,UAAM,QAspBnB;AAAD,CAAC,EAtpBS,GAAG,KAAH,GAAG,QAspBZ;AAED,CAAC;IACC,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC;IAEzB,4DAA4D;IAC5D,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,WAAW,EAAE;QAC1E,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,iBAAiB,CAAC;QACtC,YAAY;QACZ,EAAE,CAAC,iBAAiB,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,+DAA+D;KAChG;AACH,CAAC,EAAE,CAAC,CAAC;ACprBL;;;;;;;;GAQG;AACH,CAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,OAAO,MAAM,KAAG,UAAU,IAAE,MAAM,CAAC,GAAG,EAAC;IAAC,MAAM,CAAC,CAAC,CAAC,CAAA;CAAC;KAAK,IAAG,OAAO,OAAO,KAAG,QAAQ,EAAC;IAAC,MAAM,CAAC,OAAO,GAAC,CAAC,EAAE,CAAA;CAAC;KAAI;IAAC,CAAC,CAAC,aAAa,GAAC,CAAC,EAAE,CAAA;CAAC,CAAA,CAAC,CAAC,CAAC,IAAI,EAAC;IAAW,YAAY,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,KAAK,CAAC,OAAO,CAAC;IAAA,IAAI,CAAC,GAAC,MAAM,CAAC,IAAI,CAAC;IAAA,IAAI,CAAC,GAAC,SAAS,UAAU,CAAC,CAAC,IAAE,OAAO,SAAS,QAAQ,KAAG,OAAM,CAAC,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,IAAG;QAAC,CAAC,EAAE,CAAC;QAAA,OAAO,KAAK,CAAA;KAAC;IAAA,OAAM,CAAC,EAAC;QAAC,OAAO,IAAI,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,SAAS,oBAAoB,CAAC,CAAC,IAAE,IAAG;QAAC,OAAO,CAAC,EAAE,CAAA;KAAC;IAAA,OAAM,CAAC,EAAC;QAAC,OAAO,KAAK,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,cAAW,OAAM,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,cAAc,CAAC,EAAE,EAAC,GAAG,EAAC,EAAC,GAAG,EAAC,cAAW,CAAC,EAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,cAAc,IAAE,CAAC,EAAE,CAAC;IAAA,IAAI,CAAC,GAAC,SAAS,GAAG,KAAG,CAAC,CAAC,IAAI,KAAG,KAAK,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,CAAC,IAAE,CAAC,IAAI,CAAC,EAAC;QAAC,OAAM;KAAC,CAAA,IAAG,CAAC,EAAC;QAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,EAAC,YAAY,EAAC,IAAI,EAAC,UAAU,EAAC,KAAK,EAAC,QAAQ,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAA;KAAC;SAAI;QAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,OAAM,KAAK,KAAG,UAAU,CAAA,CAAC,CAAA,SAAS,cAAc,CAAC,CAAC,IAAE,OAAO,OAAO,CAAC,KAAG,UAAU,IAAE,CAAC,CAAC,CAAC,CAAC,KAAG,mBAAmB,CAAA,CAAA,CAAC,CAAA,CAAC,CAAA,SAAS,cAAc,CAAC,CAAC,IAAE,OAAO,OAAO,CAAC,KAAG,UAAU,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,EAAC,MAAM,EAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAA;SAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,EAAC,YAAY,EAAC,IAAI,EAAC,UAAU,EAAC,KAAK,EAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,kCAAkC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,EAAC,YAAY,EAAC,CAAC,CAAC,YAAY,EAAC,UAAU,EAAC,CAAC,CAAC,UAAU,EAAC,GAAG,EAAC,SAAS,MAAM,KAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC;YAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;aAAI;YAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,CAAC,EAAC,kBAAkB,EAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAC;YAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;aAAK,IAAG,OAAO,IAAG,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAA;SAAC,CAAA,CAAC,EAAC,gBAAgB,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,EAAC,UAAU,EAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAA;SAAC,CAAA,CAAC,EAAC,CAAC;IAAA,IAAI,CAAC,GAAC,MAAM,CAAC,MAAM,IAAE,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,SAAS,SAAS,KAAG,CAAC,CAAC,CAAA,CAAC,CAAC,SAAS,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;QAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAS,CAAC,IAAE,CAAC,CAAC,kBAAkB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;KAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,MAAM,CAAC,cAAc,EAAC;QAAC,OAAO,KAAK,CAAA;KAAC,CAAA,OAAO,CAAC,CAAC,cAAW,IAAI,CAAC,GAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,SAAS,GAAC,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,EAAC,WAAW,EAAC,EAAC,KAAK,EAAC,CAAC,EAAC,EAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,cAAW,IAAG,OAAO,IAAI,KAAG,WAAW,EAAC;QAAC,OAAO,IAAI,CAAA;KAAC,CAAA,IAAG,OAAO,MAAM,KAAG,WAAW,EAAC;QAAC,OAAO,MAAM,CAAA;KAAC,CAAA,IAAG,OAAO,MAAM,KAAG,WAAW,EAAC;QAAC,OAAO,MAAM,CAAA;KAAC,CAAA,MAAM,IAAI,KAAK,CAAC,gCAAgC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC;IAAA,IAAI,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,IAAI,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC;IAAA,IAAI,CAAC,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;IAAA,IAAI,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,cAAW,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,IAAE,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,IAAE,EAAE,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,IAAE,WAAW,CAAC;IAAA,IAAI,CAAC,GAAC,MAAM,CAAC,KAAK,IAAE,SAAS,KAAK,CAAC,CAAC,IAAE,OAAO,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,MAAM,CAAC,QAAQ,IAAE,SAAS,QAAQ,CAAC,CAAC,IAAE,OAAO,OAAO,CAAC,KAAG,QAAQ,IAAE,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,IAAI,CAAA,CAAC,CAAA,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;QAAC,OAAO,CAAC,CAAA;KAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,EAAC;QAAC,OAAO,CAAC,CAAA;KAAC,CAAA,OAAO,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,EAAC;QAAC,OAAO,GAAG,CAAA;KAAC,CAAA,IAAG,CAAC,KAAG,CAAC,IAAE,CAAC,KAAG,QAAQ,EAAC;QAAC,OAAO,CAAC,CAAA;KAAC,CAAA,IAAG,CAAC,KAAG,CAAC,CAAC,EAAC;QAAC,OAAM,CAAC,QAAQ,CAAA;KAAC,CAAA,OAAO,CAAC,GAAC,CAAC,GAAC,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,CAAC,GAAC,SAAS,WAAW,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAG,oBAAoB,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,WAAW,CAAC,CAAC,IAAE,OAAO,CAAC,KAAG,IAAI,IAAE,OAAO,CAAC,KAAG,QAAQ,IAAE,OAAO,CAAC,CAAC,MAAM,KAAG,QAAQ,IAAE,CAAC,CAAC,MAAM,IAAE,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,KAAG,gBAAgB,IAAE,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAG,mBAAmB,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,SAAS,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC;IAAA,IAAI,EAAE,GAAC,EAAC,SAAS,EAAC,UAAS,CAAC,IAAE,OAAO,CAAC,KAAG,IAAI,IAAE,OAAO,CAAC,KAAG,UAAU,IAAE,OAAO,CAAC,KAAG,QAAQ,CAAA,CAAA,CAAC,EAAC,MAAM,EAAC,UAAS,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAG,iBAAiB,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,UAAS,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAG,iBAAiB,CAAA,CAAA,CAAC,EAAC,MAAM,EAAC,UAAS,CAAC,IAAE,OAAO,OAAO,CAAC,CAAC,MAAM,KAAG,UAAU,IAAE,OAAO,CAAC,KAAG,QAAQ,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAA,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,OAAO,CAAC,KAAG,UAAU,IAAE,OAAO,CAAC,CAAC,KAAK,CAAC,KAAG,UAAU,IAAE,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,QAAQ,CAAA,CAAC,CAAA,qBAAqB,CAAC;IAAA,IAAG,CAAC,CAAC,GAAG,IAAE,OAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,KAAG,UAAU,EAAC;QAAC,EAAE,GAAC,YAAY,CAAA;KAAC;IAAA,IAAG,CAAC,CAAC,CAAC,OAAO,EAAC;QAAC,CAAC,CAAC,CAAC,EAAC,SAAS,EAAC,EAAE,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,OAAO,CAAC;IAAA,IAAI,EAAE,GAAC,MAAM,CAAC;IAAA,IAAI,EAAE,GAAC,OAAO,QAAQ,KAAG,WAAW,IAAE,CAAC,QAAQ,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,QAAQ,CAAC,GAAG,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,IAAE,IAAI,CAAA,CAAC,CAAA,SAAS,iBAAiB,CAAC,CAAC,IAAE,OAAO,CAAC,IAAE,IAAI,CAAA,CAAA,CAAC,CAAA,CAAC,CAAA,SAAS,kCAAkC,CAAC,CAAC,IAAE,OAAO,CAAC,IAAE,IAAI,IAAE,CAAC,KAAG,EAAE,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,CAAC,GAAC,oBAAoB,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,sBAAsB,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,EAAE,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,CAAC,IAAE,wBAAwB,GAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,YAAY,EAAC,UAAS,CAAC,IAAE,IAAG,CAAC,KAAG,KAAK,CAAC,IAAE,CAAC,KAAG,IAAI,IAAE,CAAC,KAAG,IAAI,IAAE,CAAC,KAAG,KAAK,EAAC;YAAC,OAAO,KAAK,CAAA;SAAC,CAAA,OAAO,OAAO,CAAC,KAAG,UAAU,IAAE,OAAO,CAAC,KAAG,QAAQ,IAAE,CAAC,KAAG,EAAE,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,OAAO,MAAM,CAAC,EAAE,CAAC,sBAAsB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,UAAU,EAAC,CAAC,EAAC,aAAa,EAAC,UAAS,CAAC,IAAE,OAAO,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,UAAS,CAAC,IAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAE,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,UAAS,CAAC,IAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,UAAS,CAAC,IAAE,IAAG,CAAC,CAAC,CAAC,CAAC,KAAG,iBAAiB,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,2CAA2C,CAAC,CAAA;SAAC,CAAA,OAAM,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,SAAS,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,OAAM,CAAC,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,IAAE,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,GAAC,MAAM,CAAC,gBAAgB,EAAC;YAAC,OAAO,MAAM,CAAC,gBAAgB,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,SAAS,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,IAAG,CAAC,KAAG,CAAC,EAAC;gBAAC,OAAO,CAAC,GAAC,CAAC,KAAG,CAAC,GAAC,CAAC,CAAA;aAAC;YAAA,OAAO,IAAI,CAAA;SAAC,CAAA,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,aAAa,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,OAAO,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,UAAU,EAAC,UAAS,CAAC,IAAE,OAAO,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAE,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,KAAG,WAAW,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,WAAW,EAAC,UAAS,CAAC,IAAE,IAAG,EAAE,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,IAAI,CAAC,CAAC,CAAC,EAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,SAAS,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,KAAK,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,uBAAuB,GAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,gBAAgB,EAAC,UAAS,CAAC,IAAE,OAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAA,CAAA,CAAC,EAAC,aAAa,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,QAAQ,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,KAAK,CAAC,EAAC;YAAC,OAAM;SAAC,CAAA,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG;YAAC,CAAC,GAAC,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;QAAA,OAAM,CAAC,EAAC;YAAC,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,EAAC;YAAC,OAAM;SAAC,CAAA,IAAG,CAAC,EAAC;YAAC,MAAM,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,iDAAiD,CAAC,CAAA;SAAC,CAAA,CAAC,EAAC,YAAY,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,YAAY,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,gBAAgkBAAkB,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC,CAAA,IAAG,CAAC,KAAG,KAAK,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,eAAe,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,UAAU,EAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,EAAE,EAAC;YAAC,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAA,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC;YAAA,CAAC,IAAE,GAAG,GAAC,CAAC,GAAC,IAAI,GAAC,CAAC,GAAC,GAAG,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,GAAG,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAA,OAAO,CAAC,GAAC,IAAI,GAAC,CAAC,GAAC,GAAG,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,KAAK,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;YAAC,OAAM,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,IAAG,CAAC,IAAE,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,SAAS,qBAAqB,CAAC,CAAC,IAAE,IAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC,CAAC,SAAS,GAAC,CAAC,CAAC,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,EAAC,YAAY,EAAC,KAAK,EAAC,UAAU,EAAC,KAAK,EAAC,QAAQ,EAAC,KAAK,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,EAAC;YAAC,IAAI,EAAE,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC;YAAA,CAAC,CAAC,MAAM,CAAC,SAAS,EAAC,EAAE,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,SAAS,MAAM,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;gBAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;oBAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC;aAAC,CAAA,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;YAAA,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,QAAQ,EAAC,EAAE,CAAC,CAAA;SAAC;QAAA,IAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC;YAAC,IAAI,EAAE,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC;YAAA,CAAC,CAAC,MAAM,CAAC,SAAS,EAAC,EAAE,EAAC,SAAS,OAAO,CAAC,CAAC,EAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,SAAS,OAAO,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;gBAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;oBAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA;iBAAC;aAAC,CAAA,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;YAAA,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,SAAS,EAAC,EAAE,CAAC,CAAA;SAAC;QAAA,IAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,EAAC;YAAC,IAAI,EAAE,GAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;YAAA,CAAC,CAAC,MAAM,CAAC,SAAS,EAAC,EAAE,EAAC,SAAS,KAAK,CAAC,CAAC,EAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,SAAS,KAAK,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;gBAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;oBAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA;iBAAC;aAAC,CAAA,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;YAAA,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,OAAO,EAAC,EAAE,CAAC,CAAA;SAAC;QAAA,IAAI,EAAE,GAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,EAAE,IAAE,cAAW,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAC,cAAW,OAAO,EAAE,CAAA,CAAA,CAAC,CAAC,CAAA,OAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,KAAG,EAAE,CAAA,CAAA,CAAC,EAAE,CAAC;QAAA,IAAG,CAAC,EAAE,IAAE,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,EAAE,CAAC,OAAO,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC;YAAA,CAAC,CAAC,MAAM,CAAC,SAAS,EAAC,EAAE,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,IAAI,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;gBAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;oBAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC;aAAC,CAAA,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;YAAA,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,OAAO,EAAC,EAAE,CAAC,CAAA;SAAC;KAAC;IAAA,IAAI,EAAE,GAAC,SAAS,eAAe,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,gBAAgB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAG,MAAM,CAAC,cAAc,EAAC;QAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC,CAAA,IAAG,CAAC,EAAC;QAAC,CAAC,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAC,UAAS,CAAC,IAAE,IAAG,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAM;SAAC,CAAA,CAAC,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;KAAC;SAAI;QAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAC,UAAS,CAAC,IAAE,IAAG,CAAC,IAAI,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAM;SAAC,CAAA,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC,SAAS,GAAC,CAAC,CAAC,SAAS,CAAC,CAAA,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,SAAS,EAAC,aAAa,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,cAAW,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,IAAE,IAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;QAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,EAAC,EAAE,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,IAAE,SAAS,QAAQ,KAAG,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC,EAAC;QAAC,CAAC,CAAC,EAAE,CAAC,GAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,kBAAkB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAC;QAAC,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,EAAC,YAAY,EAAC,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,QAAQ,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAA;KAAC;SAAI;QAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,yBAAyB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,8BAA8B,GAAC,CAAC,CAAC,IAAI,CAAC,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;QAAC,CAAC,GAAC,CAAC,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,KAAI,IAAI,CAAC,IAAI,CAAC,EAAC;QAAC,IAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,IAAI,CAAC,CAAA;SAAC;KAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAG,MAAM,CAAC,aAAa,IAAE,MAAM,CAAC,aAAa,CAAC,MAAM,KAAG,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,MAAM,CAAC,aAAa,CAAC;QAAA,EAAE,CAAC,MAAM,EAAC,eAAe,EAAC,SAAS,aAAa,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,EAAC,aAAa,EAAC,SAAS,aAAa,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC;YAAC,CAAC,GAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAAC,CAAC,IAAE,CAAC,GAAC,OAAO,EAAC;gBAAC,MAAM,IAAI,UAAU,CAAC,qBAAqB,GAAC,CAAC,CAAC,CAAA;aAAC;YAAA,IAAG,CAAC,GAAC,KAAK,EAAC;gBAAC,CAAC,CAAC,CAAC,EAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC;iBAAI;gBAAC,CAAC,IAAE,KAAK,CAAC;gBAAA,CAAC,CAAC,CAAC,EAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,IAAE,EAAE,CAAC,GAAC,KAAK,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,EAAC,MAAM,CAAC,YAAY,CAAC,CAAC,GAAC,IAAI,GAAC,KAAK,CAAC,CAAC,CAAA;aAAC;SAAC,CAAA,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAC,cAAc,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAG,EAAC,eAAe,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,IAAE,CAAC,EAAC;YAAC,OAAM,EAAE,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,OAAM,CAAC,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,GAAC,CAAC,IAAE,CAAC,EAAC;gBAAC,MAAK;aAAC;YAAA,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,SAAS,CAAC,MAAM,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC;YAAA,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAAA,CAAC,IAAE,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,IAAG,MAAM,CAAC,GAAG,IAAE,MAAM,CAAC,GAAG,CAAC,EAAC,GAAG,EAAC,EAAC,CAAC,EAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,MAAM,EAAC,CAAC,EAAC,EAAC,CAAC,KAAG,IAAI,EAAC;QAAC,EAAE,CAAC,MAAM,EAAC,KAAK,EAAC,EAAE,CAAC,GAAG,CAAC,CAAA;KAAC;IAAA,CAAC,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,MAAM,CAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,GAAC,CAAC,EAAC;QAAC,OAAM,EAAE,CAAA;KAAC,CAAA,IAAG,CAAC,GAAC,CAAC,EAAC;QAAC,OAAO,MAAM,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,QAAQ,CAAC;IAAA,IAAI,EAAE,GAAC,EAAC,MAAM,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,IAAE,CAAC,IAAE,EAAE,EAAC;YAAC,MAAM,IAAI,UAAU,CAAC,8EAA8E,CAAC,CAAA;SAAC,CAAA,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,UAAU,EAAC,SAAS,UAAU,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,8CAA8C,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,4CAA4C,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,MAAM,EAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,IAAG,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,qCAAqC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,KAAG,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,WAAW,EAAC,SAAS,WAAW,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAA,IAAG,CAAC,IAAE,CAAC,IAAE,CAAC,GAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,KAAG,CAAC,CAAC;YAAA,IAAG,CAAC,GAAC,KAAK,IAAE,CAAC,GAAC,KAAK,IAAE,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC;YAAA,IAAI,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,GAAC,KAAK,IAAE,CAAC,GAAC,KAAK,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC;YAAA,OAAM,CAAC,CAAC,GAAC,KAAK,CAAC,GAAC,IAAI,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,GAAC,KAAK,CAAA;SAAC,CAAA,CAAC,EAAC,CAAC;IAAA,IAAG,MAAM,CAAC,SAAS,CAAC,QAAQ,IAAE,GAAG,CAAC,QAAQ,CAAC,GAAG,EAAC,QAAQ,CAAC,KAAG,KAAK,EAAC;QAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,UAAU,EAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;KAAC;IAAA,IAAG,MAAM,CAAC,SAAS,CAAC,UAAU,IAAE,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,OAAM,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,OAAM,KAAK,CAAC,UAAU,CAAC,GAAG,EAAC,QAAQ,CAAC,KAAG,KAAK,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,IAAE,CAAC,EAAE,EAAC;YAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,YAAY,EAAC,EAAE,CAAC,UAAU,CAAC,CAAC;YAAA,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,UAAU,EAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,IAAI,CAAC,GAAC,GAAG,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAC,KAAK,CAAC,CAAA,OAAM,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,YAAY,EAAC,EAAE,CAAC,UAAU,CAAC,CAAA;SAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,IAAI,CAAC,GAAC,GAAG,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAC,KAAK,CAAC,CAAA,OAAM,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,UAAU,EAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;SAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,IAAI,CAAC,GAAC,GAAG,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAC,KAAK,CAAC,CAAA,OAAM,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,UAAU,EAAC,EAAE,CAAC,QAAQ,CAAC,CAAA;SAAC;KAAC;IAAA,CAAC,CAAC,MAAM,CAAC,SAAS,EAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,uDAAuD,EAAC,oEAAoE,EAAC,cAAc,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,MAAM,CAAC,KAAK,GAAC,EAAE,GAAC,QAAQ,GAAC,EAAE,GAAC,MAAM,EAAC,GAAG,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,IAAI,KAAG,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,MAAM,EAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,MAAM,CAAC,GAAG,GAAC,EAAE,GAAC,GAAG,EAAC,GAAG,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,oBAAoB,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,CAAC,IAAI,EAAE,CAAC,MAAM,KAAG,EAAE,CAAC,MAAM,CAAC;IAAA,CAAC,CAAC,MAAM,CAAC,SAAS,EAAC,MAAM,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,IAAE,OAAM,EAAC,KAAK,EAAC,CAAC,EAAC,IAAI,EAAC,SAAS,CAAC,MAAM,KAAG,CAAC,EAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,IAAE,EAAE,CAAC,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,EAAE,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,EAAE,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,EAAE,CAAC,SAAS,CAAC,IAAI,GAAC,cAAW,IAAI,CAAC,GAAC,IAAI,CAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,EAAE,CAAC,CAAA,IAAG,OAAO,CAAC,KAAG,WAAW,IAAE,CAAC,IAAE,CAAC,CAAC,MAAM,EAAC;QAAC,IAAI,CAAC,EAAE,GAAC,KAAK,CAAC,CAAC;QAAA,OAAO,EAAE,EAAE,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,KAAK,IAAE,CAAC,GAAC,KAAK,IAAE,CAAC,GAAC,CAAC,KAAG,CAAC,CAAC,MAAM,EAAC;QAAC,CAAC,GAAC,CAAC,CAAA;KAAC;SAAI;QAAC,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;QAAA,CAAC,GAAC,CAAC,GAAC,KAAK,IAAE,CAAC,GAAC,KAAK,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA;KAAC,CAAA,IAAI,CAAC,EAAE,GAAC,CAAC,GAAC,CAAC,CAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;IAAA,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,cAAW,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;YAAC,CAAC,GAAC,KAAK,CAAA;SAAC;aAAI;YAAC,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,mEAAmE,CAAC,CAAA;aAAC;YAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;gBAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;aAAC;YAAA,CAAC,GAAC,IAAI,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,OAAM,CAAC,EAAE,CAAC,CAAC,CAAC,IAAE,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,KAAG,WAAW,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG,CAAC,EAAC;YAAC,CAAC,GAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC;YAAA,IAAI,CAAC,GAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAAA,IAAI,CAAC,EAAC,CAAC,CAAC;YAAA,CAAC,GAAC,CAAC,CAAC;YAAA,OAAM,IAAI,EAAC;gBAAC,CAAC,GAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;gBAAA,IAAG,CAAC,KAAG,KAAK,EAAC;oBAAC,MAAK;iBAAC;gBAAA,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC;gBAAA,IAAG;oBAAC,IAAG,CAAC,EAAC;wBAAC,CAAC,GAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;qBAAC;oBAAA,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;iBAAC;gBAAA,OAAM,CAAC,EAAC;oBAAC,EAAE,CAAC,aAAa,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC;oBAAA,MAAM,CAAC,CAAA;iBAAC;gBAAA,CAAC,IAAE,CAAC,CAAA;aAAC;YAAA,CAAC,GAAC,CAAC,CAAA;SAAC;aAAI;YAAC,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAAA,CAAC,GAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YAAA,IAAI,CAAC,CAAC;YAAA,KAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,EAAE,CAAC,EAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAAA,IAAG,CAAC,EAAC;oBAAC,CAAC,GAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;iBAAC;gBAAA,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;aAAC;SAAC,CAAA,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,EAAE,EAAC,SAAS,EAAE,KAAG,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,IAAI,KAAK,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,EAAE,CAAC,EAAC;YAAC,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,CAAC,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC;IAAA,EAAE,CAAC,KAAK,CAAC,CAAC;IAAA,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,IAAI,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,EAAC,IAAI,EAAC,cAAW,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAA,IAAG,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,sBAAsB,CAAC,CAAA;SAAC,CAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;YAAC,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC;YAAA,OAAK,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC;gBAAC,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC;gBAAA,IAAI,CAAC,CAAC;gBAAA,IAAG,CAAC,KAAG,KAAK,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAA;iBAAC;qBAAK,IAAG,CAAC,KAAG,OAAO,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC;qBAAK,IAAG,CAAC,KAAG,OAAO,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC;gBAAA,IAAI,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC;gBAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;aAAC;SAAC,CAAA,IAAI,CAAC,KAAK,GAAC,KAAK,CAAC,CAAC,CAAA,OAAO,EAAE,EAAE,CAAA,CAAA,CAAC,EAAC,CAAC,CAAC;IAAA,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,KAAK,CAAC,EAAE,KAAG,EAAE,CAAC,EAAE,IAAE,cAAW,IAAI,CAAC,GAAC,SAAS,GAAG,CAAC,CAAC,IAAE,IAAI,CAAC,MAAM,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,SAAS,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,YAAY,CAAC,IAAE,CAAC,CAAC,MAAM,KAAG,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAG,CAAC,EAAE,EAAC;QAAC,EAAE,CAAC,KAAK,EAAC,IAAI,EAAC,EAAE,CAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,EAAC,UAAU,EAAC,SAAS,UAAU,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,IAAE,CAAC,GAAC,CAAC,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,CAAC;YAAA,CAAC,IAAE,CAAC,GAAC,CAAC,CAAC;YAAA,CAAC,IAAE,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,OAAM,CAAC,GAAC,CAAC,EAAC;YAAC,IAAG,CAAC,IAAI,CAAC,EAAC;gBAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC;iBAAI;gBAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC;YAAA,CAAC,IAAE,CAAC,CAAC;YAAA,CAAC,IAAE,CAAC,CAAC;YAAA,CAAC,IAAE,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,CAAA,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,IAAE,CAAC,GAAC,CAAC,EAAC,EAAE,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,0CAA0C,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,EAAC;gBAAC,IAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC;oBAAC,OAAO,CAAC,CAAA;iBAAC;aAAC;iBAAK,IAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC;SAAC,CAAA,CAAC,EAAC,SAAS,EAAC,SAAS,SAAS,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,+CAA+C,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC;YAAC,IAAG,CAAC,EAAC;gBAAC,IAAG,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC;oBAAC,OAAO,CAAC,CAAA;iBAAC;aAAC;iBAAK,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC;SAAC,CAAA,OAAM,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,KAAG,OAAO,IAAI,CAAC,CAAC,IAAI,EAAC,KAAK,CAAC,CAAA,CAAA,CAAC,EAAC,MAAM,EAAC,SAAS,MAAM,KAAG,OAAO,IAAI,CAAC,CAAC,IAAI,EAAC,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,SAAS,OAAO,KAAG,OAAO,IAAI,CAAC,CAAC,IAAI,EAAC,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,IAAG,KAAK,CAAC,SAAS,CAAC,IAAI,IAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,EAAC;QAAC,OAAO,KAAK,CAAC,SAAS,CAAC,IAAI,CAAA;KAAC;IAAA,IAAG,KAAK,CAAC,SAAS,CAAC,OAAO,IAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAC;QAAC,OAAO,KAAK,CAAC,SAAS,CAAC,OAAO,CAAA;KAAC;IAAA,IAAG,KAAK,CAAC,SAAS,CAAC,IAAI,IAAE,KAAK,CAAC,SAAS,CAAC,OAAO,IAAE,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,IAAE,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC;QAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAC,EAAC,MAAM,EAAC,KAAK,CAAC,SAAS,CAAC,EAAE,CAAC,EAAC,CAAC,CAAC;QAAA,IAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,WAAW,CAAC,EAAC;YAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,MAAM,GAAC,IAAI,CAAA;SAAC;KAAC;IAAA,IAAG,CAAC,IAAE,KAAK,CAAC,SAAS,CAAC,MAAM,IAAE,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,KAAG,QAAQ,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,QAAQ,EAAC,SAAS,MAAM,KAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC,KAAK,CAAC,SAAS,EAAC,EAAE,EAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,CAAC,CAAC,KAAK,CAAC,SAAS,EAAC,EAAE,CAAC,CAAC;IAAA,IAAG,CAAC,GAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,GAAC,CAAC,EAAC;QAAC,CAAC,CAAC,KAAK,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,OAAO,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,EAAC,SAAS,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,IAAE,CAAC,GAAC,CAAC,GAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,cAAW,OAAO,IAAI,CAAC,MAAM,EAAE,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAG,MAAM,CAAC,cAAc,EAAC;QAAC,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,cAAW,OAAO,CAAC,CAAC,cAAW,OAAO,KAAK,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,MAAM,KAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAI,EAAE,GAAC,cAAW,IAAI,CAAC,GAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,MAAM,KAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAG,CAAC,EAAE,IAAE,CAAC,EAAE,EAAC;QAAC,EAAE,CAAC,KAAK,EAAC,MAAM,EAAC,EAAE,CAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,cAAW,OAAO,CAAC,CAAC,cAAW,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAG,CAAC,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,IAAI,CAAC;QAAA,EAAE,CAAC,KAAK,EAAC,MAAM,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,IAAE,OAAO,SAAS,CAAC,CAAC,CAAC,KAAG,WAAW,EAAC;YAAC,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA;SAAC;aAAI;YAAC,OAAO,CAAC,CAAC,EAAE,EAAC,IAAI,EAAC,CAAC,CAAC,CAAA;SAAC,CAAA,CAAC,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,CAAC,GAAC,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAC,MAAM,EAAC,EAAE,EAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,MAAM,KAAG,CAAC,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,GAAC,IAAI,CAAC,CAAA,OAAO,CAAC,CAAC,cAAW,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,cAAW,MAAM,IAAI,UAAU,CAAC,uBAAuB,CAAC,CAAA,CAAA,CAAC,EAAC,EAAE,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAG,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,SAAS,EAAC,SAAS,OAAO,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,KAAK,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,QAAQ,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,MAAM,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,OAAO,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,MAAM,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,QAAQ,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,EAAC,IAAI,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;QAAA,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,aAAa,EAAC,SAAS,WAAW,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,MAAM,IAAE,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,EAAE,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,MAAM,CAAC,MAAM,CAAC,KAAG,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,MAAM,CAAC,MAAM,CAAC,KAAG,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,EAAE,EAAC,UAAS,CAAC,IAAE,OAAO,MAAM,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAG,EAAE,IAAE,EAAE,IAAE,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,MAAM,CAAC;QAAA,IAAI,EAAE,GAAC,YAAY,CAAC;QAAA,IAAI,EAAE,GAAC,aAAa,CAAC;QAAA,IAAI,EAAE,GAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,CAAC,CAAA,IAAG,OAAO,CAAC,CAAC,OAAO,KAAG,UAAU,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,OAAO,EAAE,CAAC;YAAA,IAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC;SAAC,CAAA,IAAG,OAAO,CAAC,CAAC,QAAQ,KAAG,UAAU,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YAAA,IAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC;SAAC,CAAA,MAAM,IAAI,SAAS,CAAC,kBAAkB,CAAC,CAAA,CAAA,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,cAAW,IAAI,CAAC,GAAC,SAAS,MAAM,CAAC,CAAC,IAAE,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC,CAAC,EAAC,QAAQ,CAAC,CAAA;SAAC;aAAI;YAAC,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,IAAG,OAAO,CAAC,KAAG,QAAQ,EAAC;YAAC,CAAC,GAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;YAAA,IAAG,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,CAAC,GAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;aAAC;iBAAK,IAAG,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,CAAC,GAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;aAAC;iBAAK,IAAG,EAAE,CAAC,CAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,CAAC,GAAC,GAAG,CAAA;aAAC;SAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,cAAW,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,YAAY,CAAC,IAAE,CAAC,CAAC,EAAC;YAAC,OAAO,IAAI,EAAE,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;QAAA,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAAA,CAAC,CAAC,EAAE,EAAC,EAAC,GAAG,EAAC,EAAE,CAAC,GAAG,EAAC,SAAS,EAAC,EAAE,CAAC,SAAS,EAAC,SAAS,EAAC,EAAE,CAAC,SAAS,EAAC,iBAAiB,EAAC,EAAE,CAAC,iBAAiB,EAAC,iBAAiB,EAAC,EAAE,CAAC,iBAAiB,EAAC,CAAC,CAAC;QAAA,MAAM,GAAC,EAAE,CAAC;QAAA,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,QAAQ,EAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,EAAE,CAAC,GAAC,CAAC,CAAC;IAAA,CAAC,CAAC,MAAM,EAAC,EAAC,gBAAgB,EAAC,EAAE,EAAC,gBAAgB,EAAC,CAAC,EAAE,EAAC,OAAO,EAAC,qBAAqB,EAAC,QAAQ,EAAC,CAAC,CAAC,QAAQ,EAAC,UAAU,EAAC,CAAC,CAAC,UAAU,EAAC,QAAQ,EAAC,CAAC,EAAC,SAAS,EAAC,SAAS,SAAS,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,IAAE,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,EAAC,aAAa,EAAC,SAAS,aAAa,CAAC,CAAC,IAAE,OAAO,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,IAAE,MAAM,CAAC,gBAAgB,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC;IAAA,CAAC,CAAC,MAAM,EAAC,UAAU,EAAC,CAAC,CAAC,QAAQ,EAAC,MAAM,CAAC,QAAQ,KAAG,CAAC,CAAC,QAAQ,CAAC,CAAC;IAAA,IAAG,CAAC,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,cAAW,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,KAAG,CAAC,EAAC;QAAC,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,MAAM,EAAC,EAAE,CAAC,IAAI,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAC,CAAC,CAAC,CAAC,SAAS,CAAC,cAAW,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,KAAG,CAAC,EAAC;QAAC,EAAE,CAAC,KAAK,CAAC,SAAS,EAAC,WAAW,EAAC,EAAE,CAAC,SAAS,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAC,MAAM,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,gBAAgB,CAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,IAAE,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;QAAC,MAAM,CAAC,cAAccAAc,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAC;QAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;KAAC,CAAA,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAC,MAAM,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAC,4CAA4C,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,EAAC,SAAS,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,EAAE,EAAC,SAAS,EAAE,CAAC,CAAC,EAAC,CAAC,IAAE,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,IAAI,EAAE,GAAC,MAAM,CAAC,MAAM,IAAE,MAAM,CAAC,iBAAiB,IAAE,cAAW,IAAI,CAAC,GAAC,MAAM,CAAC,iBAAiB,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG;QAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAC,IAAI,CAAC,CAAA;KAAC;IAAA,OAAM,CAAC,EAAC;QAAC,OAAO,CAAC,CAAC,CAAC,CAAC,KAAG,GAAG,CAAA;KAAC,CAAA,CAAC,EAAE,CAAC;IAAA,IAAG,EAAE,EAAC;QAAC,EAAE,CAAC,MAAM,EAAC,QAAQ,EAAC,EAAE,CAAC,MAAM,CAAC,CAAA;KAAC;IAAA,CAAC,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC;IAAA,IAAG,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,EAAC,cAAc,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,sCAAsC,CAAC,CAAA;aAAC,CAAA,IAAG,CAAC,CAAC,CAAC,KAAG,IAAI,IAAE,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,6CAA6C,GAAC,CAAC,CAAC,CAAA;aAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAG;gBAAC,CAAC,GAAC,CAAC,CAAC,wBAAwB,CAAC,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,CAAC,GAAG,CAAC;gBAAA,CAAC,CAAC,CAAC,EAAC,EAAE,EAAC,IAAI,CAAC,CAAA;aAAC;YAAA,OAAM,CAAC,EAAC;gBAAC,IAAG,CAAC,CAAC,SAAS,KAAG,EAAE,CAAC,CAAC,CAAC,EAAC;oBAAC,OAAM;iBAAC;gBAAA,CAAC,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC;gBAAA,CAAC,CAAC,QAAQ,GAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAC,IAAI,CAAC,EAAC,CAAC,CAAC,SAAS,CAAC,YAAW,CAAC,CAAA;aAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,MAAM,EAAC,WAAW,CAAC,EAAC,CAAC;QAAA,CAAC,CAAC,MAAM,EAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAG,MAAM,CAAC,cAAc,IAAE,MAAM,CAAC,cAAc,IAAE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,EAAC,IAAI,CAAC,CAAC,KAAG,IAAI,IAAE,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,KAAG,IAAI,EAAC;QAAC,CAAC,cAAW,IAAI,CAAC,GAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,MAAM,CAAC,cAAc,CAAC,CAAA,IAAI,CAAC,GAAC,MAAM,CAAC,cAAc,CAAC,CAAA,MAAM,CAAC,cAAc,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,IAAI,CAAA,CAAC,CAAA,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,MAAM,CAAC,cAAc,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,KAAG,IAAI,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,QAAQ,GAAC,KAAK,CAAA,CAAA,CAAC,CAAC,EAAE,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAG,CAAC,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,MAAM,CAAC,IAAI,CAAC;QAAA,EAAE,CAAC,MAAM,EAAC,MAAM,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,CAAC,GAAC,MAAM,CAAC,IAAI,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAG,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,MAAM,CAAC,IAAI,CAAC;QAAA,EAAE,CAAC,MAAM,EAAC,MAAM,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,EAAE,CAAC;YAAA,KAAI,IAAI,CAAC,IAAI,CAAC,EAAC;gBAAC,IAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;oBAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;iBAAC;aAAC;YAAA,OAAO,CAAC,CAAA;SAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,CAAC,GAAC,MAAM,CAAC,IAAI,CAAA;KAAC;IAAA,IAAG,MAAM,CAAC,mBAAmB,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,OAAO,MAAM,KAAG,QAAQ,CAAA,CAAC,CAAA,MAAM,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC;YAAA,IAAI,EAAE,GAAC,MAAM,CAAC,mBAAmB,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,qBAAqB,EAAC,SAAS,mBAAmB,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,KAAG,iBAAiB,EAAC;gBAAC,IAAG;oBAAC,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;iBAAC;gBAAA,OAAM,CAAC,EAAC;oBAAC,OAAO,CAAC,CAAC,EAAE,EAAC,EAAE,CAAC,CAAA;iBAAC;aAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,wBAAwB,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,wBAAwB,CAAC,KAAK,EAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,wBAAwB,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,0BAA0B,EAAC,SAAS,wBAAwB,CAAC,CAAC,EAAC,CAAC,IAAE,OAAO,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,IAAI,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,IAAI,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,MAAM,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,QAAQ,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,QAAQ,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,UAAU,EAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,IAAI,CAAA;aAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,MAAM,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,MAAM,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,QAAQ,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,QAAQ,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,QAAQ,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,UAAU,EAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,IAAI,CAAA;aAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,iBAAiB,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,iBAAiB,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,mBAAmB,EAAC,SAAS,iBAAiB,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,YAAY,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,YAAY,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,cAAc,EAAC,SAAS,YAAY,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,KAAK,CAAA;aAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,cAAc,EAAC;QAAC,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,EAAC;YAAC,IAAI,EAAE,GAAC,MAAM,CAAC,cAAc,CAAC;YAAA,EAAE,CAAC,MAAM,EAAC,gBAAgB,EAAC,SAAS,cAAc,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;KAAC;IAAA,IAAI,EAAE,GAAC,CAAC,IAAE,cAAW,IAAI,CAAC,GAAC,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC,CAAA,OAAO,CAAC,IAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAG,CAAC,IAAE,CAAC,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,SAAS,KAAK,KAAG,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,wDAAwD,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,IAAG,IAAI,CAAC,MAAM,EAAC;YAAC,CAAC,IAAE,GAAG,CAAA;SAAC,CAAA,IAAG,IAAI,CAAC,UAAU,EAAC;YAAC,CAAC,IAAE,GAAG,CAAA;SAAC,CAAA,IAAG,IAAI,CAAC,SAAS,EAAC;YAAC,CAAC,IAAE,GAAG,CAAA;SAAC,CAAA,IAAG,IAAI,CAAC,OAAO,EAAC;YAAC,CAAC,IAAE,GAAG,CAAA;SAAC,CAAA,IAAG,IAAI,CAAC,MAAM,EAAC;YAAC,CAAC,IAAE,GAAG,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC;QAAA,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,EAAC,OAAO,EAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,CAAC,IAAE,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,EAAC,GAAG,CAAC,CAAC,KAAG,MAAM,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,IAAE,CAAC,IAAE,cAAW,IAAI,CAAC,GAAC,GAAG,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAC,KAAK,CAAC,CAAA,OAAO,MAAM,CAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,KAAK,EAAC,CAAC,KAAG,OAAO,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,IAAE,CAAC,CAAC,cAAW,OAAO,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAC,MAAM,EAAC,GAAG,EAAC,KAAK,EAAC,GAAG,EAAC,CAAC,KAAG,MAAM,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAG,CAAC,EAAE,IAAE,CAAC,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC;QAAA,CAAC,CAAC,MAAM,CAAC,SAAS,EAAC,UAAU,EAAC,SAAS,QAAQ,KAAG,IAAI,CAAC,GAAC,EAAE,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAA,OAAM,GAAG,GAAC,CAAC,GAAC,GAAG,GAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,CAAC,CAAC;QAAA,CAAC,CAAC,gBAAgB,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,EAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,IAAE,CAAC,CAAC,EAAE,IAAE,EAAE,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,SAAS,EAAC,OAAO,CAAC,CAAC,GAAG,CAAC;QAAA,IAAI,EAAE,GAAC,MAAM,CAAC,wBAAwB,CAAC,MAAM,CAAC,SAAS,EAAC,QAAQ,CAAC,IAAE,EAAE,CAAC;QAAA,IAAI,EAAE,GAAC,cAAW,OAAO,IAAI,CAAC,MAAM,CAAA,CAAA,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,EAAE,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,CAAA,CAAC,CAAA,EAAE,CAAC,GAAG,CAAA,CAAC,CAAA,EAAE,CAAC;QAAA,IAAI,EAAE,GAAC,MAAM,CAAC;QAAA,IAAI,EAAE,GAAC,cAAW,OAAO,SAAS,MAAM,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,YAAY,MAAM,CAAC,CAAA,IAAG,CAAC,CAAC,IAAE,CAAC,IAAE,OAAO,CAAC,KAAG,WAAW,IAAE,CAAC,CAAC,WAAW,KAAG,MAAM,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC;YAAC,CAAC,GAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,CAAC;YAAA,CAAC,GAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC;YAAA,OAAO,IAAI,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;aAAK,IAAG,CAAC,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;YAAA,CAAC,GAAC,OAAO,CAAC,KAAG,WAAW,CAAA,CAAC,CAAA,CAAC,CAAC,KAAK,CAAA,CAAC,CAAA,CAAC,CAAA;SAAC,CAAA,OAAO,IAAI,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;QAAA,EAAE,CAAC,EAAE,EAAC,EAAE,EAAC,EAAC,MAAM,EAAC,IAAI,EAAC,CAAC,CAAC;QAAA,MAAM,GAAC,EAAE,CAAC;QAAA,CAAC,CAAC,QAAQ,CAAC,CAAC,EAAC,QAAQ,EAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,EAAC,KAAK,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,SAAS,EAAC,IAAI,EAAC,WAAW,EAAC,IAAI,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC;QAAA,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAC,UAAS,CAAC,IAAE,IAAG,CAAC,IAAI,MAAM,IAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAG,MAAM,CAAC,EAAC;YAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAC,EAAE,CAAC,CAAC,CAAC,EAAC,SAAS,GAAG,KAAG,OAAO,MAAM,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC,CAAA,CAAC,CAAC,CAAA;KAAC;IAAA,EAAE,CAAC,MAAM,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,GAAC,MAAM,CAAC,OAAO,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,eAAe,CAAC,CAAC,IAAE,OAAO,CAAC,GAAC,EAAE,GAAC,EAAE,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,GAAG,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,GAAG,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,KAAK,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,MAAM,CAAC;IAAA,IAAI,EAAE,GAAC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;IAAA,OAAO,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC;IAAA,IAAI,EAAE,GAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAAC,CAAC,EAAC;YAAC,OAAO,GAAG,CAAA;SAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,KAAG,QAAQ,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,EAAE,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,EAAC;YAAC,OAAO,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,KAAG,CAAC,CAAC,EAAC;YAAC,OAAM,CAAC,QAAQ,CAAA;SAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,QAAQ,CAAA;SAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,GAAC,CAAC,CAAC,IAAE,CAAC,GAAC,CAAC,EAAC;YAAC,OAAO,GAAG,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,KAAG,QAAQ,EAAC;YAAC,CAAC,GAAC,QAAQ,CAAA;SAAC;aAAI;YAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;YAAA,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,EAAE,CAAA;SAAC,CAAA,OAAO,EAAE,CAAA,CAAC,CAAA,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAC,GAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,GAAG,CAAA;SAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,QAAQ,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA,OAAM,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE,GAAC,EAAE,CAAC,CAAC,GAAC,CAAC,EAAE,GAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,QAAQ,EAAC;YAAC,OAAM,CAAC,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,EAAC;YAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,OAAM,CAAC,GAAC,CAAC,KAAG,CAAC,EAAC;YAAC,CAAC,IAAE,CAAC,CAAC;YAAA,CAAC,IAAE,CAAC,CAAC;YAAA,CAAC,IAAE,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,SAAS,CAAC,MAAM,EAAC,EAAE,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,GAAC,CAAC,EAAC;gBAAC,CAAC,IAAE,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;gBAAA,CAAC,IAAE,CAAC,CAAC;gBAAA,CAAC,GAAC,CAAC,CAAA;aAAC;iBAAI;gBAAC,CAAC,IAAE,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA;aAAC;SAAC,CAAA,OAAO,CAAC,KAAG,QAAQ,CAAA,CAAC,CAAA,QAAQ,CAAA,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAE,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAAA,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE,GAAC,EAAE,CAAC,CAAC,GAAC,CAAC,EAAE,GAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,IAAE,CAAC,KAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,IAAE,EAAE,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAG,CAAC,IAAE,CAAC,EAAE,EAAC;YAAC,OAAM,CAAC,CAAC,CAAA;SAAC,CAAA,OAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,KAAG,EAAE,GAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,KAAG,EAAE,GAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,KAAK,CAAC,CAAA,OAAO,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,GAAC,CAAC,IAAE,EAAE,KAAG,CAAC,CAAC,GAAC,CAAC,CAAA,CAAA,CAAC,EAAC,MAAM,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,IAAE,CAAC,KAAG,QAAQ,IAAE,CAAC,KAAG,CAAC,QAAQ,IAAE,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,EAAE,EAAC;YAAC,OAAO,CAAC,GAAC,EAAE,CAAC,CAAC,GAAC,EAAE,GAAC,EAAE,CAAC,GAAC,EAAE,GAAC,EAAE,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,GAAC,EAAE,GAAC,MAAM,CAAC,OAAO,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,GAAC,EAAE,IAAE,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,OAAO,CAAC,GAAC,QAAQ,CAAA;SAAC,CAAA,OAAO,CAAC,GAAC,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,IAAI,EAAE,GAAC,SAAS,iBAAiB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,GAAC,MAAM,CAAC,OAAO,GAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,EAAE,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,MAAM,EAAC,EAAE,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,QAAQ,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,MAAM,EAAC,EAAE,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,QAAQ,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,KAAG,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,KAAG,QAAQ,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAG,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,MAAM,EAAC,EAAE,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;IACjx+B,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,CAAC,KAAK,EAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,KAAG,QAAQ,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,CAAC,KAAK,EAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,GAAC,MAAM,CAAC,OAAO,CAAC,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,MAAM,EAAC,EAAE,CAAC,IAAI,EAAC,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAC,MAAM,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,MAAM,EAAC,EAAE,CAAC,IAAI,EAAC,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,KAAG,CAAC,KAAK,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,CAAC,KAAK,EAAC,EAAE,GAAC,kBAAkB,IAAE,EAAE,GAAC,kBAAkB,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,KAAK,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAC,MAAM,CAAC,OAAO,GAAC,CAAC,CAAC,KAAG,CAAC,IAAE,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE,GAAC,MAAM,CAAC,OAAO,GAAC,IAAI,CAAC,KAAG,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,GAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,GAAC,EAAE,GAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC,KAAK,CAAC,UAAS,CAAC,IAAE,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,CAAC,CAAC,IAAI,EAAC,OAAO,EAAC,SAAS,KAAK,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,KAAG,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,CAAA,OAAO,CAAC,GAAC,CAAC,GAAC,EAAE,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC,EAAE,IAAE,CAAC,EAAE,CAAC,CAAC;IAAA,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAC,EAAE,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,IAAI,CAAC,IAAI,CAAC;IAAA,IAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAC,CAAC,CAAC,KAAG,CAAC,CAAC,EAAC;QAAC,IAAI,CAAC,IAAI,GAAC,EAAE,CAAC,IAAI,CAAC;QAAA,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,EAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAG,IAAI,CAAC,IAAI,CAAC,MAAM,KAAG,CAAC,EAAC;QAAC,EAAE,CAAC,IAAI,EAAC,MAAM,EAAC,SAAS,IAAI,CAAC,CAAC,EAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,cAAW,IAAI,CAAC,GAAC,CAAC,CAAC,UAAU,CAAC,CAAA,IAAG,OAAO,CAAC,KAAG,UAAU,IAAE,OAAO,CAAC,KAAG,QAAQ,EAAC;QAAC,OAAM;KAAC,CAAA,EAAE,CAAC,SAAS,GAAC,UAAS,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;QAAC,OAAO,KAAK,CAAA;KAAC,CAAA,IAAG,OAAO,CAAC,CAAC,QAAQ,KAAG,WAAW,EAAC;QAAC,OAAO,KAAK,CAAA;KAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,CAAC,OAAO,KAAG,KAAK,CAAC,IAAE,CAAC,CAAC,MAAM,KAAG,KAAK,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,6BAA6B,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC,OAAO,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,MAAM,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,OAAO,GAAC,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC,MAAM,GAAC,KAAK,CAAC,CAAC,CAAA,CAAC,CAAC,OAAO,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,IAAE,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,OAAO,MAAM,KAAG,WAAW,IAAE,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,EAAC;QAAC,CAAC,GAAC,cAAW,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,sBAAsB,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,MAAM,CAAC,WAAW,CAAC,CAAC,EAAC,GAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,IAAG,CAAC,CAAC,MAAM,KAAG,MAAM,IAAE,CAAC,CAAC,IAAI,KAAG,CAAC,EAAC;YAAC,CAAC,CAAC,eAAe,EAAE,CAAC;YAAA,IAAG,CAAC,CAAC,MAAM,KAAG,CAAC,EAAC;gBAAC,OAAM;aAAC;YAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,EAAE,CAAA;SAAC,CAAA,CAAC,CAAC,CAAA,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,cAAW,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,IAAE,CAAC,CAAC,OAAO,IAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA,OAAO,CAAC,IAAE,UAAS,CAAC,IAAE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,YAAY,CAAA,CAAC,CAAA,OAAO,OAAO,KAAG,QAAQ,IAAE,OAAO,CAAC,QAAQ,CAAA,CAAC,CAAA,OAAO,CAAC,QAAQ,CAAA,CAAC,CAAA,CAAC,EAAE,IAAE,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,EAAE,CAAA,CAAC,CAAA,UAAS,CAAC,IAAE,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,MAAM,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,cAAW,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;QAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA;KAAC,CAAA,IAAG;QAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAAA,CAAC,GAAC,CAAC,CAAC,OAAO,CAAA;KAAC;IAAA,OAAM,CAAC,EAAC;QAAC,CAAC,GAAC,CAAC,CAAC;QAAA,CAAC,GAAC,CAAC,CAAC,MAAM,CAAA;KAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,cAAc,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,EAAC;QAAC,CAAC,CAAC,CAAC,CAAC,uBAAuB,EAAC,CAAC,CAAC,mBAAmB,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC,uBAAuB,GAAC,KAAK,CAAC,CAAC;QAAA,CAAC,CAAC,gBAAgB,GAAC,KAAK,CAAC,CAAC;QAAA,CAAC,CAAC,mBAAmB,GAAC,KAAK,CAAC,CAAC;QAAA,IAAG,CAAC,GAAC,CAAC,EAAC;YAAC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,IAAE,CAAC,EAAC;gBAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAA;aAAC;SAAC;KAAC,CAAA,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,cAAc,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,cAAc,CAAC,CAAA,IAAG,CAAC,GAAC,CAAC,EAAC;QAAC,CAAC,CAAC,CAAC,CAAC,sBAAsB,EAAC,CAAC,CAAC,mBAAmB,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC,uBAAuB,GAAC,KAAK,CAAC,CAAC;QAAA,CAAC,CAAC,gBAAgB,GAAC,KAAK,CAAC,CAAC;QAAA,CAAC,CAAC,mBAAmB,GAAC,KAAK,CAAC,CAAC;QAAA,IAAG,CAAC,GAAC,CAAC,EAAC;YAAC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,IAAE,CAAC,EAAC;gBAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAA;aAAC;SAAC;KAAC,CAAA,CAAC,CAAC,MAAM,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,cAAc,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,EAAC;QAAC,OAAM;KAAC,CAAA,CAAC,GAAC,IAAI,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;QAAC,OAAO,CAAC,CAAC,CAAC,EAAC,IAAI,SAAS,CAAC,iBAAiB,CAAC,CAAC,CAAA;KAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;QAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC,CAAA,IAAG;QAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAA;KAAC;IAAA,OAAM,CAAC,EAAC;QAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC,CAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;QAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC,cAAW,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,IAAG,CAAC,EAAC;QAAC,OAAM;KAAC,CAAA,CAAC,GAAC,IAAI,CAAC,CAAA,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,OAAM,EAAC,OAAO,EAAC,CAAC,EAAC,MAAM,EAAC,CAAC,EAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,KAAG,CAAC,EAAC;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC;SAAI;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAA,IAAG;QAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC;IAAA,OAAM,CAAC,EAAC;QAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,cAAW,IAAI,CAAC,GAAC,SAAS,OAAO,CAAC,CAAC,IAAE,IAAG,CAAC,CAAC,IAAI,YAAY,CAAC,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,oCAAoC,CAAC,CAAA;KAAC,CAAA,IAAG,IAAI,IAAE,IAAI,CAAC,QAAQ,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,kBAAkB,CAAC,CAAA;KAAC,CAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,sBAAsB,CAAC,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,EAAC,QAAQ,EAAC,EAAC,MAAM,EAAC,KAAK,CAAC,EAAC,KAAK,EAAC,CAAC,EAAC,cAAc,EAAC,CAAC,EAAC,uBAAuB,EAAC,KAAK,CAAC,EAAC,sBAAsB,EAAC,KAAK,CAAC,EAAC,mBAAmB,EAAC,KAAK,CAAC,EAAC,EAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAA,IAAG;QAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,CAAA;KAAC;IAAA,OAAM,CAAC,EAAC;QAAC,CAAC,CAAC,CAAC,CAAC,CAAA;KAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,KAAK,CAAC,CAAA,OAAO,UAAS,CAAC,IAAE,IAAG,CAAC,EAAC;QAAC,OAAM;KAAC,CAAA,CAAC,GAAC,IAAI,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,CAAC,KAAK,KAAG,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC;QAAA,CAAC,CAAC,CAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,OAAM,IAAI,EAAC;QAAC,IAAG;YAAC,CAAC,GAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,KAAG,KAAK,EAAC;gBAAC,CAAC,CAAC,IAAI,GAAC,IAAI,CAAC;gBAAA,MAAK;aAAC;YAAA,CAAC,GAAC,CAAC,CAAC,KAAK,CAAA;SAAC;QAAA,OAAM,CAAC,EAAC;YAAC,CAAC,CAAC,IAAI,GAAC,IAAI,CAAC;YAAA,MAAM,CAAC,CAAA;SAAC;QAAA,CAAC,CAAC,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC;QAAA,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC,KAAK,IAAE,CAAC,CAAC;QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,MAAM,CAAC,CAAC;QAAA,CAAC,IAAE,CAAC,CAAA;KAAC,CAAA,IAAG,EAAE,CAAC,CAAC,KAAK,KAAG,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC;QAAA,CAAC,CAAC,CAAC,CAAC,CAAA;KAAC,CAAA,OAAO,CAAC,CAAC,OAAO,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,OAAM,IAAI,EAAC;QAAC,IAAG;YAAC,CAAC,GAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,KAAG,KAAK,EAAC;gBAAC,CAAC,CAAC,IAAI,GAAC,IAAI,CAAC;gBAAA,MAAK;aAAC;YAAA,CAAC,GAAC,CAAC,CAAC,KAAK,CAAA;SAAC;QAAA,OAAM,CAAC,EAAC;YAAC,CAAC,CAAC,IAAI,GAAC,IAAI,CAAC;YAAA,MAAM,CAAC,CAAA;SAAC;QAAA,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;QAAA,CAAC,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,MAAM,CAAC,CAAA;KAAC,CAAA,OAAO,CAAC,CAAC,OAAO,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG;YAAC,CAAC,GAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,GAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC;YAAA,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;QAAA,OAAM,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC;YAAA,IAAG,CAAC,IAAE,CAAC,CAAC,CAAC,IAAI,EAAC;gBAAC,IAAG;oBAAC,EAAE,CAAC,aAAa,CAAC,CAAC,EAAC,IAAI,CAAC,CAAA;iBAAC;gBAAA,OAAM,CAAC,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAA;iBAAC;aAAC;YAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;YAAA,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,OAAO,CAAC,CAAC,OAAO,CAAA;SAAC,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,uBAAuB,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,EAAC,CAAC,CAAC,CAAA,IAAG;YAAC,CAAC,GAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YAAA,CAAC,GAAC,EAAC,QAAQ,EAAC,CAAC,EAAC,IAAI,EAAC,KAAK,EAAC,CAAC;YAAA,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;QAAA,OAAM,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC;YAAA,IAAG,CAAC,IAAE,CAAC,CAAC,CAAC,IAAI,EAAC;gBAAC,IAAG;oBAAC,EAAE,CAAC,aAAa,CAAC,CAAC,EAAC,IAAI,CAAC,CAAA;iBAAC;gBAAA,OAAM,CAAC,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAA;iBAAC;aAAC;YAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;YAAA,CAAC,CAAC,CAAC,CAAC,CAAC;YAAA,OAAO,CAAC,CAAC,OAAO,CAAA;SAAC,CAAA,CAAC,EAAC,MAAM,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,OAAO,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,SAAS,OAAO,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,yBAAyB,CAAC,CAAA;SAAC,CAAA,IAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,CAAC,CAAC,WAAW,CAAC;YAAA,IAAG,CAAC,KAAG,CAAC,EAAC;gBAAC,OAAO,CAAC,CAAA;aAAC;SAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,OAAO,CAAA,CAAA,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,EAAC,OAAO,EAAC,UAAS,CAAC,IAAE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,eAAe,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,IAAE,SAAS,CAAC,CAAC,CAAC,KAAG,CAAC,CAAC,CAAA,IAAG,CAAC,IAAE,CAAC,KAAG,CAAC,EAAC;YAAC,CAAC,GAAC,CAAC,CAAA;SAAC;aAAI;YAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,QAAQ,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,KAAK,KAAG,CAAC,EAAC;YAAC,IAAG,CAAC,CAAC,cAAc,KAAG,CAAC,EAAC;gBAAC,CAAC,CAAC,uBAAuB,GAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,sBAAsB,GAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,mBAAmB,GAAC,CAAC,CAAA;aAAC;iBAAI;gBAAC,IAAI,CAAC,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC,cAAc,GAAC,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,CAAA;aAAC;YAAA,CAAC,CAAC,cAAc,IAAE,CAAC,CAAA;SAAC;aAAK,IAAG,CAAC,CAAC,KAAK,KAAG,CAAC,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;YAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;aAAK,IAAG,CAAC,CAAC,KAAK,KAAG,CAAC,EAAC;YAAC,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;YAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;aAAI;YAAC,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAA;SAAC,CAAA,OAAO,CAAC,CAAC,OAAO,CAAA,CAAA,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAG,CAAC,CAAC,OAAO,EAAC;QAAC,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC;QAAA,OAAO,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;QAAA,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,KAAK,CAAA;KAAC;IAAA,IAAG,OAAO,EAAE,KAAG,UAAU,EAAC;QAAC,CAAC,CAAC,CAAC,EAAC,EAAC,OAAO,EAAC,EAAE,EAAC,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAC,UAAS,CAAC,IAAE,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAW,CAAC,CAAC,YAAW,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,OAAO,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,WAAW,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG;YAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAA;SAAC;QAAA,OAAM,CAAC,EAAC;YAAC,OAAO,IAAI,CAAA;SAAC,CAAA,OAAO,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,CAAC,IAAE,cAAW,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,MAAM,CAAC,cAAc,CAAC,EAAE,EAAC,MAAM,EAAC,EAAC,GAAG,EAAC,cAAW,CAAC,IAAE,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC,CAAC,CAAA,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;QAAA,IAAI,EAAE,GAAC,SAAS,kBAAkB,CAAC,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,cAAW,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC,IAAI,CAAC,CAAA,IAAI,CAAC,WAAW,GAAC,oBAAkB,CAAA,CAAA,CAAC,CAAC;QAAA,EAAE,CAAC,SAAS,GAAC,OAAO,CAAC,SAAS,CAAC;QAAA,EAAE,CAAC,GAAG,GAAC,OAAO,CAAC,GAAG,CAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,OAAM,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAE,IAAE,CAAC,EAAE,IAAE,CAAC,EAAE,IAAE,EAAE,IAAE,CAAC,EAAE,IAAE,EAAE,EAAC;YAAC,OAAO,GAAC,EAAE,CAAC;YAAA,EAAE,CAAC,CAAC,EAAC,SAAS,EAAC,EAAE,CAAC,CAAA;SAAC;QAAA,IAAG,OAAO,CAAC,GAAG,CAAC,MAAM,KAAG,CAAC,EAAC;YAAC,IAAI,EAAE,GAAC,OAAO,CAAC,GAAG,CAAC;YAAA,EAAE,CAAC,OAAO,EAAC,KAAK,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;QAAA,IAAG,OAAO,CAAC,IAAI,CAAC,MAAM,KAAG,CAAC,EAAC;YAAC,IAAI,EAAE,GAAC,OAAO,CAAC,IAAI,CAAC;YAAA,EAAE,CAAC,OAAO,EAAC,MAAM,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;QAAA,IAAG,OAAO,CAAC,OAAO,CAAC,MAAM,KAAG,CAAC,EAAC;YAAC,IAAI,EAAE,GAAC,OAAO,CAAC,OAAO,CAAC;YAAA,EAAE,CAAC,OAAO,EAAC,SAAS,EAAC,SAAS,OAAO,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;QAAA,IAAG,OAAO,CAAC,MAAM,CAAC,MAAM,KAAG,CAAC,EAAC;YAAC,IAAI,EAAE,GAAC,OAAO,CAAC,MAAM,CAAC;YAAA,EAAE,CAAC,OAAO,EAAC,QAAQ,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;QAAA,EAAE,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;QAAA,EAAE,CAAC,OAAO,EAAC,MAAM,CAAC,CAAC;QAAA,EAAE,CAAC,OAAO,EAAC,SAAS,CAAC,CAAC;QAAA,EAAE,CAAC,OAAO,EAAC,QAAQ,CAAC,CAAC;QAAA,EAAE,CAAC,OAAO,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,KAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,CAAC,CAAC,GAAG,EAAC,GAAG,EAAC,IAAI,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAE,CAAC,CAAC,GAAG,EAAC,CAAC,EAAC,GAAG,EAAC,GAAG,EAAC,CAAC,CAAC,CAAC,CAAC;IAAA,IAAG,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,SAAS,OAAO,CAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,CAAC,IAAE,CAAC,EAAE,EAAC;YAAC,OAAO,IAAI,CAAA;SAAC,CAAA,IAAG,EAAE,CAAC,CAAC,CAAC,EAAC;YAAC,OAAM,GAAG,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;SAAC;aAAK,IAAG,OAAO,CAAC,KAAG,QAAQ,EAAC;YAAC,OAAM,GAAG,GAAC,CAAC,CAAA;SAAC;aAAK,IAAG,OAAO,CAAC,KAAG,QAAQ,EAAC;YAAC,IAAG,CAAC,EAAE,EAAC;gBAAC,OAAM,GAAG,GAAC,CAAC,CAAA;aAAC;YAAA,OAAO,CAAC,CAAA;SAAC;aAAK,IAAG,OAAO,CAAC,KAAG,SAAS,EAAC;YAAC,OAAM,GAAG,GAAC,CAAC,CAAA;SAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,SAAS,WAAW,KAAG,OAAO,MAAM,CAAC,MAAM,CAAA,CAAC,CAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAA,CAAC,CAAA,EAAE,CAAA,CAAA,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,SAAS,gBAAgB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,CAAC,CAAC,CAAC,IAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,EAAC,UAAS,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,iBAAiB,GAAC,CAAC,GAAC,yBAAyB,CAAC,CAAA;aAAC,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;aAAK,IAAG,CAAC,YAAY,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,EAAC,CAAC,EAAC,UAAS,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;aAAI;YAAC,IAAI,CAAC,EAAC,CAAC,CAAC;YAAA,IAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC;gBAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;oBAAC,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,CAAA;iBAAC;gBAAA,CAAC,GAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;aAAC;YAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;gBAAC,OAAM,IAAI,EAAC;oBAAC,IAAI,CAAC,GAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAAA,IAAG,CAAC,KAAG,KAAK,EAAC;wBAAC,MAAK;qBAAC;oBAAA,IAAI,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC;oBAAA,IAAG;wBAAC,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;4BAAC,MAAM,IAAI,SAAS,CAAC,iBAAiB,GAAC,CAAC,GAAC,yBAAyB,CAAC,CAAA;yBAAC;wBAAA,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;qBAAC;oBAAA,OAAM,CAAC,EAAC;wBAAC,EAAE,CAAC,aAAa,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC;wBAAA,MAAM,CAAC,CAAA;qBAAC;iBAAC;aAAC;SAAC,CAAA,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,SAAS,gBAAgB,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,CAAC,CAAC,CAAC,IAAE,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,EAAC,UAAS,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;aAAK,IAAG,CAAC,YAAY,CAAC,EAAC;YAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,OAAO,EAAC,CAAC,EAAC,UAAS,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;SAAC;aAAI;YAAC,IAAI,CAAC,EAAC,CAAC,CAAC;YAAA,IAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAC;gBAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAC;gBAAA,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;oBAAC,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,CAAA;iBAAC;gBAAA,CAAC,GAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAA;aAAC;YAAA,IAAG,OAAO,CAAC,KAAG,WAAW,EAAC;gBAAC,OAAM,IAAI,EAAC;oBAAC,IAAI,CAAC,GAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;oBAAA,IAAG,CAAC,KAAG,KAAK,EAAC;wBAAC,MAAK;qBAAC;oBAAA,IAAI,CAAC,GAAC,CAAC,CAAC,KAAK,CAAC;oBAAA,IAAG;wBAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;qBAAC;oBAAA,OAAM,CAAC,EAAC;wBAAC,EAAE,CAAC,aAAa,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC;wBAAA,MAAM,CAAC,CAAA;qBAAC;iBAAC;aAAC;SAAC,CAAA,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,EAAC,GAAG,EAAC,cAAW,IAAI,CAAC,GAAC,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,QAAQ,CAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAG,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,IAAI,GAAC,IAAI,CAAC,CAAA,IAAI,CAAC,IAAI,GAAC,IAAI,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,SAAS,CAAC,SAAS,GAAC,SAAS,SAAS,KAAG,OAAO,IAAI,CAAC,GAAG,KAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,KAAK,CAAC,CAAC,IAAE,OAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,cAAc,CAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,uBAAuB,GAAC,CAAC,GAAC,mCAAmC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,WAAW,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,CAAC,EAAC,iBAAiB,CAAC,CAAC,CAAA,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC,KAAK,CAAC,CAAA,IAAI,CAAC,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,CAAA,IAAI,CAAC,IAAI,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,SAAS,GAAC,EAAC,aAAa,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,IAAI,KAAG,IAAG,CAAC,IAAI,CAAC,aAAa,EAAC;oBAAC,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAA;iBAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,IAAI,CAAC,CAAA,IAAG,OAAO,IAAI,CAAC,CAAC,KAAG,WAAW,EAAC;oBAAC,OAAO,EAAE,EAAE,CAAA;iBAAC,CAAA,OAAM,CAAC,CAAC,SAAS,EAAE,IAAE,CAAC,KAAG,CAAC,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAA;iBAAC,CAAA,IAAI,CAAC,CAAC,CAAA,OAAM,CAAC,CAAC,IAAI,KAAG,CAAC,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC;oBAAA,IAAG,CAAC,CAAC,CAAC,SAAS,EAAE,EAAC;wBAAC,IAAG,CAAC,KAAG,KAAK,EAAC;4BAAC,CAAC,GAAC,CAAC,CAAC,GAAG,CAAA;yBAAC;6BAAK,IAAG,CAAC,KAAG,OAAO,EAAC;4BAAC,CAAC,GAAC,CAAC,CAAC,KAAK,CAAA;yBAAC;6BAAI;4BAAC,CAAC,GAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,KAAK,CAAC,CAAA;yBAAC;wBAAA,IAAI,CAAC,CAAC,GAAC,CAAC,CAAC;wBAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;qBAAC;iBAAC,CAAA,IAAI,CAAC,CAAC,GAAC,KAAK,CAAC,CAAC,CAAA,OAAO,EAAE,EAAE,CAAA,CAAA,CAAC,EAAC,CAAC,CAAA,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,GAAG,KAAG,IAAG,CAAC,CAAC,IAAI,YAAY,GAAG,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;aAAC,CAAA,IAAG,IAAI,IAAE,IAAI,CAAC,OAAO,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,kBAAkB,CAAC,CAAA;aAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,IAAI,EAAC,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,CAAC,CAAA,IAAI,EAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,EAAE,EAAE,EAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,IAAI,EAAC,IAAI,CAAC,CAAC,CAAA,CAAC,CAAC,IAAI,GAAC,CAAC,CAAC,IAAI,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;gBAAC,EAAE,CAAC,GAAG,EAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAA,CAAC,CAAC,MAAM,CAAC,CAAC,EAAC,MAAM,EAAC,cAAW,IAAG,OAAO,IAAI,CAAC,KAAK,KAAG,WAAW,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,wCAAwC,CAAC,CAAA;aAAC,CAAA,OAAO,IAAI,CAAC,KAAK,CAAA,CAAA,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,IAAI,EAAC;oBAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAAA,IAAG,CAAC,EAAC;wBAAC,OAAO,CAAC,CAAC,KAAK,CAAA;qBAAC;yBAAI;wBAAC,OAAM;qBAAC;iBAAC,CAAA,IAAG,IAAI,CAAC,IAAI,EAAC;oBAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC;oBAAA,IAAG,CAAC,EAAC;wBAAC,OAAO,CAAC,CAAC,KAAK,CAAA;qBAAC;yBAAI;wBAAC,OAAM;qBAAC;iBAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,OAAM,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,KAAG,CAAC,EAAC;oBAAC,IAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC;wBAAC,OAAO,CAAC,CAAC,KAAK,CAAA;qBAAC;iBAAC,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,IAAI,EAAC;oBAAC,OAAO,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAG,WAAW,CAAA;iBAAC,CAAA,IAAG,IAAI,CAAC,IAAI,EAAC;oBAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,OAAM,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,KAAG,CAAC,EAAC;oBAAC,IAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC;wBAAC,OAAO,IAAI,CAAA;qBAAC;iBAAC,CAAA,OAAO,KAAK,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,IAAI,EAAC;oBAAC,IAAG,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAG,WAAW,EAAC;wBAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC;wBAAA,OAAO,IAAI,CAAA;qBAAC;yBAAI;wBAAC,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;wBAAA,CAAC,GAAC,CAAC,CAAC,IAAI,CAAA;qBAAC;iBAAC;qBAAK,IAAG,IAAI,CAAC,IAAI,EAAC;oBAAC,IAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,EAAC;wBAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,KAAK,GAAC,CAAC,CAAA;qBAAC;yBAAI;wBAAC,CAAC,GAAC,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;wBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;wBAAA,CAAC,GAAC,CAAC,CAAC,IAAI,CAAA;qBAAC;iBAAC,CAAA,OAAM,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,KAAG,CAAC,EAAC;oBAAC,IAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC;wBAAC,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC;wBAAA,OAAO,IAAI,CAAA;qBAAC;iBAAC,CAAA,CAAC,GAAC,CAAC,IAAE,IAAI,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;oBAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,CAAC,CAAC,IAAI,GAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC,CAAC,IAAI,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,KAAK,IAAE,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,UAAS,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,CAAC,EAAC,IAAI,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,IAAI,EAAC;oBAAC,IAAG,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAG,WAAW,EAAC;wBAAC,OAAO,KAAK,CAAA;qBAAC;oBAAA,CAAC,GAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;iBAAC;qBAAK,IAAG,IAAI,CAAC,IAAI,EAAC;oBAAC,IAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,EAAC;wBAAC,OAAO,KAAK,CAAA;qBAAC;oBAAA,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,OAAM,CAAC,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,KAAG,CAAC,EAAC;oBAAC,IAAG,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,EAAC;wBAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC;wBAAA,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC;wBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC,IAAI,CAAC;wBAAA,CAAC,CAAC,IAAI,CAAC,IAAI,GAAC,CAAC,CAAC,IAAI,CAAC;wBAAA,IAAI,CAAC,KAAK,IAAE,CAAC,CAAC;wBAAA,OAAO,IAAI,CAAA;qBAAC;iBAAC,CAAA,OAAO,KAAK,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,KAAG,CAAC,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAA,IAAI,CAAC,IAAI,GAAC,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,IAAI,CAAC,KAAK,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,QAAQ,GAAC,EAAE,EAAE,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,KAAK,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,CAAA,OAAM,CAAC,CAAC,GAAC,CAAC,CAAC,KAAG,CAAC,EAAC;oBAAC,CAAC,CAAC,GAAG,GAAC,CAAC,CAAC;oBAAA,CAAC,CAAC,KAAK,GAAC,CAAC,CAAC;oBAAA,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC;oBAAA,CAAC,CAAC,IAAI,GAAC,CAAC,CAAC,IAAI,GAAC,CAAC,CAAA;iBAAC,CAAA,CAAC,CAAC,IAAI,GAAC,CAAC,CAAC,IAAI,GAAC,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,KAAG,CAAC,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,CAAC,IAAI,EAAC,KAAK,CAAC,CAAA,CAAA,CAAC,EAAC,MAAM,EAAC,SAAS,MAAM,KAAG,CAAC,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,CAAC,IAAI,EAAC,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,SAAS,OAAO,KAAG,CAAC,CAAC,IAAI,EAAC,SAAS,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,CAAC,IAAI,EAAC,WAAW,CAAC,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,SAAS,OAAO,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,SAAS,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAA,KAAI,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,EAAE,EAAC,CAAC,CAAC,CAAC,IAAI,EAAC,CAAC,GAAC,CAAC,CAAC,IAAI,EAAE,EAAC;oBAAC,IAAG,CAAC,EAAC;wBAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAA;qBAAC;yBAAI;wBAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAC,IAAI,CAAC,CAAA;qBAAC;iBAAC,CAAA,CAAC,EAAC,CAAC,CAAC,CAAA,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAE,EAAC,GAAG,EAAC,cAAW,IAAI,CAAC,GAAC,SAAS,KAAK,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,OAAO,IAAE,OAAO,CAAC,CAAC,QAAQ,KAAG,WAAW,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,cAAc,CAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,gBAAgB,GAAC,CAAC,GAAC,mCAAmC,GAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,GAAG,KAAG,IAAG,CAAC,CAAC,IAAI,YAAY,GAAG,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;aAAC,CAAA,IAAG,IAAI,IAAE,IAAI,CAAC,OAAO,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,kBAAkB,CAAC,CAAA;aAAC,CAAA,IAAI,CAAC,GAAC,EAAE,CAAC,IAAI,EAAC,GAAG,EAAC,CAAC,EAAC,EAAC,OAAO,EAAC,IAAI,EAAC,aAAa,EAAC,IAAI,EAAC,QAAQ,EAAC,EAAE,EAAE,EAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,OAAO,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,SAAS,CAAC,CAAA;aAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;gBAAC,EAAE,CAAC,GAAG,EAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,GAAC,CAAC,CAAC,SAAS,CAAC,CAAA,IAAI,CAAC,GAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,OAAO,EAAC;gBAAC,OAAO,IAAI,CAAA;aAAC;iBAAK,IAAG,CAAC,KAAG,YAAY,EAAC;gBAAC,OAAO,KAAK,CAAC,CAAA;aAAC;iBAAI;gBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAAA,IAAG,CAAC,KAAG,GAAG,EAAC;oBAAC,OAAO,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;iBAAC;qBAAK,IAAG,CAAC,KAAG,GAAG,EAAC;oBAAC,OAAM,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA;iBAAC;qBAAK,IAAG,CAAC,KAAG,GAAG,EAAC;oBAAC,OAAO,CAAC,KAAG,OAAO,CAAA;iBAAC;aAAC,CAAA,OAAM,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,SAAS,CAAC,CAAC,IAAE,IAAG,CAAC,CAAC,CAAC,aAAa,CAAC,EAAC;gBAAC,IAAI,CAAC,GAAC,IAAI,EAAE,CAAC,GAAG,CAAC;gBAAA,CAAC,CAAC,aAAa,CAAC,GAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,aAAa,CAAC,GAAC,CAAC,CAAA;aAAC,CAAA,CAAC,CAAC,QAAQ,GAAC,IAAI,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS,EAAC,MAAM,EAAC,cAAW,CAAC,CAAC,IAAI,EAAC,MAAM,CAAC,CAAC,CAAA,IAAG,IAAI,CAAC,QAAQ,EAAC;gBAAC,OAAO,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAA;aAAC,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,IAAI,CAAA,CAAA,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,IAAI,CAAC,QAAQ,IAAE,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,EAAC;oBAAC,OAAM,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,KAAK,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,IAAI,CAAC,QAAQ,IAAE,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,EAAC;oBAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,GAAC,IAAI,CAAC;oBAAA,OAAO,IAAI,CAAA;iBAAC,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,UAAS,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,IAAI,CAAC,QAAQ,IAAE,CAAC,CAAC,GAAC,EAAE,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,EAAC;oBAAC,IAAI,CAAC,GAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,EAAC,CAAC,CAAC,CAAC;oBAAA,OAAO,OAAO,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAE,CAAC,CAAA;iBAAC,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,KAAG,CAAC,CAAC,IAAI,EAAC,OAAO,CAAC,CAAC,CAAA,IAAG,IAAI,CAAC,QAAQ,EAAC;oBAAC,IAAI,CAAC,QAAQ,GAAC,EAAE,EAAE,CAAA;iBAAC,CAAA,IAAG,IAAI,CAAC,aAAa,CAAC,EAAC;oBAAC,IAAI,CAAC,aAAa,CAAC,CAAC,KAAK,EAAE,CAAA;iBAAC,CAAA,CAAC,EAAC,MAAM,EAAC,SAAS,MAAM,KAAG,CAAC,CAAC,IAAI,EAAC,QAAQ,CAAC,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,SAAS,OAAO,KAAG,CAAC,CAAC,IAAI,EAAC,SAAS,CAAC,CAAC,CAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,OAAO,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,SAAS,OAAO,CAAC,CAAC,IAAE,CAAC,CAAC,IAAI,EAAC,SAAS,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAC;oBAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;iBAAC;qBAAI;oBAAC,CAAC,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAC,CAAC,CAAC,SAAS,EAAC,MAAM,EAAC,CAAC,CAAC,SAAS,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC,CAAA,EAAE,CAAC,CAAC,CAAC,SAAS,EAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,WAAW,CAAC,CAAC,IAAE,IAAI,CAAC,EAAE,GAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAC,CAAC,SAAS,GAAC,EAAC,aAAa,EAAC,IAAI,EAAC,IAAI,EAAC,SAAS,IAAI,KAAG,IAAG,CAAC,IAAI,CAAC,aAAa,EAAC;oBAAC,MAAM,IAAI,SAAS,CAAC,mBAAmB,CAAC,CAAA;iBAAC,CAAA,OAAO,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,CAAA,CAAA,CAAC,EAAC,CAAC,CAAA,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAE,EAAC,CAAC;QAAA,IAAI,EAAE,GAAC,CAAC,CAAC,GAAG,IAAE,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAE,GAAG,CAAC,SAAS,CAAC,MAAM,IAAE,GAAG,CAAC,SAAS,CAAC,KAAK,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,IAAE,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;QAAA,IAAG,EAAE,EAAC;YAAC,CAAC,CAAC,GAAG,GAAC,EAAE,CAAC,GAAG,CAAA;SAAC;QAAA,IAAG,CAAC,CAAC,GAAG,IAAE,CAAC,CAAC,GAAG,EAAC;YAAC,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,OAAO,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAG,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,EAAE,EAAC;gBAAC,CAAC,CAAC,GAAG,GAAC,SAAS,GAAG,KAAG,IAAG,CAAC,CAAC,IAAI,YAAY,GAAG,CAAC,EAAC;oBAAC,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;iBAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;oBAAC,EAAE,CAAC,GAAG,EAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,OAAO,CAAC,CAAC,WAAW,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC;gBAAA,CAAC,CAAC,GAAG,CAAC,SAAS,GAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAC,aAAa,EAAC,CAAC,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,CAAA;aAAC;YAAA,IAAI,EAAE,GAAC,IAAI,GAAG,CAAC;YAAA,IAAI,EAAE,GAAC,cAAW,IAAI,CAAC,GAAC,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAG,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAE,CAAC;YAAA,IAAI,EAAE,GAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAC,CAAC,CAAC,KAAG,EAAE,CAAC;YAAA,IAAG,CAAC,EAAE,IAAE,CAAC,EAAE,EAAC;gBAAC,EAAE,CAAC,GAAG,CAAC,SAAS,EAAC,KAAK,EAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,IAAE,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,CAAA;aAAC;YAAA,IAAG,CAAC,EAAE,EAAC;gBAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,EAAC,IAAI,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAC,CAAC,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAC,CAAC,CAAC,CAAA;aAAC;YAAA,IAAI,EAAE,GAAC,IAAI,GAAG,CAAC;YAAA,IAAI,EAAE,GAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,IAAE,GAAG,CAAC,SAAS,CAAC,GAAG,IAAE,UAAS,CAAC,IAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,OAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,EAAE,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,KAAG,EAAE,CAAC;YAAA,IAAG,CAAC,EAAE,IAAE,CAAC,EAAE,EAAC;gBAAC,IAAI,EAAE,GAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC;gBAAA,GAAG,CAAC,SAAS,CAAC,GAAG,GAAC,SAAS,GAAG,CAAC,CAAC,IAAE,CAAC,CAAC,EAAE,EAAC,IAAI,EAAC,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAC,EAAE,CAAC,CAAA;aAAC;YAAA,IAAG,CAAC,EAAE,EAAC;gBAAC,IAAI,EAAE,GAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC;gBAAA,GAAG,CAAC,SAAS,CAAC,GAAG,GAAC,SAAS,GAAG,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,EAAE,EAAC,IAAI,EAAC,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;gBAAA,IAAI,EAAE,GAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;gBAAA,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAC,SAAS,SAAS,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,EAAE,EAAC,IAAI,EAAC,CAAC,KAAG,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,GAAG,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAC,EAAE,CAAC,CAAA;aAAC;YAAA,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC,CAAA,OAAO,CAAC,YAAY,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,MAAM,CAAC,cAAc,IAAE,CAAC,EAAE,CAAC;YAAA,IAAI,EAAE,GAAC,cAAW,IAAG;gBAAC,OAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,YAAW,CAAC,CAAC,GAAG,CAAC,CAAA;aAAC;YAAA,OAAM,CAAC,EAAC;gBAAC,OAAO,CAAC,YAAY,SAAS,CAAA;aAAC,CAAA,CAAC,EAAE,CAAC;YAAA,IAAG,CAAC,CAAC,GAAG,CAAC,MAAM,KAAG,CAAC,IAAE,EAAE,IAAE,CAAC,EAAE,EAAC;gBAAC,CAAC,CAAC,GAAG,GAAC,SAAS,GAAG,KAAG,IAAG,CAAC,CAAC,IAAI,YAAY,GAAG,CAAC,EAAC;oBAAC,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;iBAAC,CAAA,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;oBAAC,EAAE,CAAC,GAAG,EAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,OAAO,CAAC,CAAC,WAAW,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC;gBAAA,CAAC,CAAC,GAAG,CAAC,SAAS,GAAC,CAAC,CAAC,SAAS,CAAC;gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAC,aAAa,EAAC,CAAC,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,CAAA;aAAC;YAAA,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA,CAAC,CAAC,GAAG,CAAC,EAAE,EAAC,EAAE,CAAC,CAAC,CAAA,OAAO,CAAC,YAAY,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAI,EAAE,GAAC,MAAM,CAAC,cAAc,IAAE,CAAC,EAAE,CAAC;YAAA,IAAI,EAAE,GAAC,cAAW,IAAG;gBAAC,OAAM,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,YAAW,CAAC,CAAC,GAAG,CAAC,CAAA;aAAC;YAAA,OAAM,CAAC,EAAC;gBAAC,OAAO,CAAC,YAAY,SAAS,CAAA;aAAC,CAAA,CAAC,EAAE,CAAC;YAAA,IAAG,CAAC,CAAC,GAAG,CAAC,MAAM,KAAG,CAAC,IAAE,EAAE,IAAE,CAAC,EAAE,EAAC;gBAAC,IAAI,EAAE,GAAC,CAAC,CAAC,GAAG,CAAC;gBAAA,CAAC,CAAC,GAAG,GAAC,SAAS,GAAG,KAAG,IAAG,CAAC,CAAC,IAAI,YAAY,GAAG,CAAC,EAAC;oBAAC,MAAM,IAAI,SAAS,CAAC,gCAAgC,CAAC,CAAA;iBAAC,CAAA,IAAI,CAAC,GAAC,IAAI,EAAE,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;oBAAC,EAAE,CAAC,GAAG,EAAC,CAAC,EAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC,CAAA,OAAO,CAAC,CAAC,WAAW,CAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,CAAC;gBAAA,CAAC,CAAC,GAAG,CAAC,SAAS,GAAC,EAAE,CAAC,SAAS,CAAC;gBAAA,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAC,aAAa,EAAC,CAAC,CAAC,GAAG,EAAC,IAAI,CAAC,CAAC;gBAAA,CAAC,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,EAAC,EAAE,CAAC,CAAA;aAAC;YAAA,IAAI,EAAE,GAAC,IAAI,CAAC,CAAC,GAAG,CAAC;YAAA,IAAI,EAAE,GAAC,CAAC,CAAC,CAAC,cAAW,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,CAAA,CAAA,CAAC,CAAC,CAAC;YAAA,IAAG,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,KAAG,UAAU,IAAE,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAG,CAAC,IAAE,EAAE,CAAC,IAAI,KAAG,CAAC,IAAE,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAG,UAAU,IAAE,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAG,UAAU,IAAE,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,KAAG,UAAU,IAAE,OAAO,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,OAAO,KAAG,UAAU,IAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,IAAE,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,IAAI,KAAG,UAAU,IAAE,EAAE,IAAE,CAAC,EAAE,EAAC;gBAAC,CAAC,CAAC,CAAC,EAAC,EAAC,GAAG,EAAC,EAAE,CAAC,GAAG,EAAC,GAAG,EAAC,EAAE,CAAC,GAAG,EAAC,EAAC,IAAI,CAAC,CAAA;aAAC;YAAA,IAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,KAAG,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,EAAC;gBAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAC,MAAM,EAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,MAAM,EAAC,IAAI,CAAC,CAAA;aAAC;YAAA,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAAA,EAAE,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,IAAE,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,KAAG,KAAK,EAAC;gBAAC,IAAI,EAAE,GAAC,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC;gBAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,EAAC,KAAK,EAAC,SAAS,GAAG,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,EAAE,EAAC,IAAI,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;aAAC;SAAC;QAAA,CAAC,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC;QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QAAA,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,SAAS,yBAAyB,CAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;QAAC,MAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,EAAC,KAAK,EAAC,SAAS,KAAK,KAAG,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,EAAC,IAAI,EAAC,SAAS,CAAC,CAAA,CAAA,CAAC,EAAC,SAAS,EAAC,SAAS,SAAS,CAAC,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,uCAAuC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,IAAG,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC,EAAC;YAAC,MAAM,IAAI,SAAS,CAAC,mCAAmC,CAAC,CAAA;SAAC,CAAA,OAAO,EAAE,CAAC,SAAS,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,UAAU,CAAC,CAAA,CAAA,CAAC,EAAC,cAAc,EAAC,SAAS,cAAc,CAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,IAAE,CAAC,CAAC,CAAC,YAAY,EAAC;gBAAC,OAAO,KAAK,CAAA;aAAC;SAAC,CAAA,OAAO,OAAO,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,CAAC,IAAI,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,IAAG,MAAM,CAAC,mBAAmB,EAAC;QAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAC,EAAC,OAAO,EAAC,SAAS,OAAO,CAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,EAAE,CAAC,UAAU,CAAC,MAAM,CAAC,qBAAqB,CAAC,EAAC;gBAAC,CAAC,CAAC,CAAC,EAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC,CAAA;aAAC,CAAA,OAAO,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,SAAS,yBAAyB,CAAC,CAAC,IAAE,OAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC;IAAA,IAAG,MAAM,CAAC,iBAAiB,EAAC;QAAC,MAAM,CAAC,MAAM,CAAC,EAAE,EAAC,EAAC,YAAY,EAAC,SAAS,YAAY,CAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,iBAAiB,EAAC,SAAS,iBAAiB,CAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,EAAE,CAAC,cAAW,OAAO,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,EAAC;QAAC,IAAI,EAAE,GAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,KAAG,IAAI,EAAC;gBAAC,OAAO,KAAK,CAAC,CAAA;aAAC;YAAA,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAG,OAAO,IAAG,CAAC,EAAC;YAAC,OAAO,CAAC,CAAC,KAAK,CAAA;SAAC,CAAA,IAAG,CAAC,CAAC,GAAG,EAAC;YAAC,OAAO,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,KAAK,CAAC,CAAA,CAAA,CAAC,CAAC;QAAA,IAAI,EAAE,GAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,KAAG,IAAI,EAAC;gBAAC,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;aAAC;YAAA,CAAC,GAAC,EAAC,KAAK,EAAC,KAAK,CAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,YAAY,EAAC,IAAI,EAAC,CAAA;SAAC,CAAA,IAAG,OAAO,IAAG,CAAC,EAAC;YAAC,IAAG,CAAC,CAAC,CAAC,QAAQ,EAAC;gBAAC,OAAO,KAAK,CAAA;aAAC;YAAA,IAAG,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,KAAK,CAAA;aAAC;YAAA,IAAI,CAAC,GAAC,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAAA,IAAG,CAAC,EAAC;gBAAC,OAAO,EAAE,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAA;aAAC;iBAAI;gBAAC,OAAO,EAAE,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,EAAC,KAAK,EAAC,CAAC,EAAC,QAAQ,EAAC,IAAI,EAAC,UAAU,EAAC,IAAI,EAAC,YAAY,EAAC,IAAI,EAAC,CAAC,CAAA;aAAC;SAAC,CAAA,IAAG,CAAC,CAAC,GAAG,EAAC;YAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAC,CAAC,EAAC,CAAC,CAAC,CAAC;YAAA,OAAO,IAAI,CAAA;SAAC,CAAA,OAAO,KAAK,CAAA,CAAA,CAAC,CAAC;QAAA,MAAM,CAAC,MAAM,CAAC,EAAE,EAAC,EAAC,cAAc,EAAC,SAAS,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,EAAE,CAAC,cAAW,OAAO,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,wBAAwB,EAAC,SAAS,wBAAwB,CAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,MAAM,CAAC,wBAAwB,CAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,SAAS,CAAC,MAAM,GAAC,CAAC,CAAA,CAAC,CAAA,SAAS,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,OAAO,EAAE,CAAC,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC,CAAA;KAAC;IAAA,IAAG,MAAM,CAAC,cAAc,EAAC;QAAC,IAAI,EAAE,GAAC,MAAM,CAAC,cAAc,CAAC;QAAA,EAAE,CAAC,cAAc,GAAC,SAAS,cAAc,CAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAA;KAAC;IAAA,IAAG,MAAM,CAAC,cAAc,IAAE,EAAE,CAAC,cAAc,EAAC;QAAC,IAAI,EAAE,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAC,CAAA,OAAM,CAAC,EAAC;YAAC,IAAG,CAAC,KAAG,CAAC,EAAC;gBAAC,OAAO,IAAI,CAAA;aAAC;YAAA,CAAC,GAAC,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,KAAK,CAAA,CAAA,CAAC,CAAC;QAAA,MAAM,CAAC,MAAM,CAAC,EAAE,EAAC,EAAC,cAAc,EAAC,SAAS,cAAc,CAAC,CAAC,EAAC,CAAC,IAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,KAAG,IAAI,IAAE,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,MAAM,IAAI,SAAS,CAAC,iCAAiC,CAAC,CAAA;aAAC,CAAA,IAAG,CAAC,KAAG,EAAE,CAAC,cAAc,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,IAAI,CAAA;aAAC,CAAA,IAAG,EAAE,CAAC,YAAY,IAAE,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,KAAK,CAAA;aAAC,CAAA,IAAG,EAAE,CAAC,CAAC,EAAC,CAAC,CAAC,EAAC;gBAAC,OAAO,KAAK,CAAA;aAAC,CAAA,MAAM,CAAC,cAAc,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,EAAC,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAG,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAC;QAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;KAAC;SAAI;QAAC,IAAI,CAAC,GAAC,CAAC,CAAC,cAAW,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAA,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,CAAC;QAAA,IAAG,CAAC,EAAC;YAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA;SAAC;KAAC,CAAA,CAAC,CAAC;IAAA,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAS,CAAC,IAAE,EAAE,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC;IAAA,IAAG,CAAC,IAAE,EAAE,IAAE,EAAE,CAAC,IAAI,KAAG,gBAAgB,EAAC;QAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAC,gBAAgB,EAAC,SAAS,cAAc,CAAC,CAAC,IAAE,OAAO,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,OAAO,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;KAAC;IAAA,IAAG,CAAC,CAAC,OAAO,CAAC,cAAc,EAAC;QAAC,IAAG,CAAC,CAAC,cAAW,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAA,OAAO,IAAI,CAAA,CAAA,CAAC,CAAC,EAAC;YAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAC,gBAAgB,EAAC,EAAE,CAAC,cAAc,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,CAAC,CAAC,OAAO,CAAC,cAAc,EAAC;QAAC,IAAG,CAAC,CAAC,CAAC,cAAW,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,EAAC,MAAM,EAAC,EAAC,KAAK,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,OAAO,MAAM,CAAC,iBAAiB,KAAG,UAAU,IAAE,CAAC,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,iBAAiB,CAAC,EAAE,CAAC,EAAC,MAAM,EAAC,EAAE,CAAC,CAAC,CAAA,OAAO,CAAC,IAAE,CAAC,CAAA,CAAA,CAAC,CAAC,EAAC;YAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAC,gBAAgB,EAAC,EAAE,CAAC,cAAc,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,CAAC,CAAC,OAAO,CAAC,SAAS,EAAC;QAAC,IAAG,CAAC,CAAC,CAAC,cAAW,IAAI,CAAC,GAAC,SAAS,CAAC,KAAG,CAAC,CAAC,CAAA,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,cAAW,CAAC,EAAC,EAAE,EAAC,CAAC,CAAC,YAAW,CAAC,CAAA,CAAA,CAAC,CAAC,EAAC;YAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAC,WAAW,EAAC,EAAE,CAAC,SAAS,CAAC,CAAA;SAAC;KAAC;IAAA,IAAG,MAAM,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,CAAC,KAAG,cAAc,EAAC;QAAC,IAAI,EAAE,GAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QAAA,IAAI,EAAE,GAAC,SAAS,QAAQ,KAAG,IAAI,CAAC,GAAC,CAAC,IAAI,CAAC,CAAA,IAAG,CAAC,KAAG,CAAC,EAAC;YAAC,OAAM,cAAc,CAAA;SAAC,CAAA,OAAO,EAAE,CAAC,IAAI,CAAC,EAAE,EAAC,IAAI,CAAC,CAAA,CAAA,CAAC,CAAC;QAAA,EAAE,CAAC,IAAI,CAAC,SAAS,EAAC,UAAU,EAAC,EAAE,CAAC,CAAA;KAAC;IAAA,IAAI,EAAE,GAAC,EAAC,MAAM,EAAC,SAAS,MAAM,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,GAAG,EAAC,MAAM,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,IAAI,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,SAAS,EAAC,SAAS,SAAS,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,MAAM,EAAC,OAAO,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,QAAQ,EAAC,SAAS,QAAQ,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,MAAM,EAAC,MAAM,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,OAAO,EAAC,SAAS,OAAO,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,GAAG,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,IAAI,EAAC,SAAS,IAAI,CAAC,CAAC,IAAE,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,GAAG,EAAC,MAAM,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,EAAC,KAAK,EAAC,SAAS,KAAK,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,OAAO,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,MAAM,EAAC,SAAS,MAAM,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,QAAQ,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,GAAG,EAAC,SAAS,GAAG,KAAG,OAAO,EAAE,CAAC,UAAU,CAAC,IAAI,EAAC,KAAK,EAAC,EAAE,EAAC,EAAE,CAAC,CAAA,CAAA,CAAC,EAAC,CAAC;IAAA,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,EAAC,UAAS,CAAC,IAAE,IAAI,CAAC,GAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA,IAAI,CAAC,GAAC,KAAK,CAAC,CAAA,IAAG,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,EAAC;QAAC,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,EAAC,EAAE,EAAC,KAAK,CAAC,CAAC;QAAA,IAAI,CAAC,GAAC,CAAC,CAAC,EAAE,EAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC;QAAA,CAAC,GAAC,CAAC,KAAG,CAAC,CAAC,WAAW,EAAE,IAAE,CAAC,GAAC,CAAC,CAAA;KAAC;SAAI;QAAC,CAAC,GAAC,IAAI,CAAA;KAAC,CAAA,IAAG,CAAC,EAAC;QAAC,EAAE,CAAC,MAAM,CAAC,SAAS,EAAC,CAAC,EAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;KAAC,CAAA,CAAC,CAAC,CAAC;IAAA,IAAI,EAAE,GAAC,cAAW,IAAG,CAAC,EAAE,EAAC;QAAC,OAAO,KAAK,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,OAAO,IAAI,KAAG,QAAQ,IAAE,OAAO,IAAI,CAAC,SAAS,KAAG,UAAU,CAAA,CAAC,CAAA,IAAI,CAAC,SAAS,CAAA,CAAC,CAAA,IAAI,CAAC,CAAA,IAAG,CAAC,CAAC,EAAC;QAAC,OAAO,KAAK,CAAA;KAAC,CAAA,IAAG,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,KAAG,WAAW,EAAC;QAAC,OAAO,IAAI,CAAA;KAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAG,QAAQ,EAAC;QAAC,OAAO,IAAI,CAAA;KAAC,CAAA,IAAI,CAAC,GAAC,EAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,CAAA,CAAC,CAAC,CAAC,EAAE,CAAC,GAAC,IAAI,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,KAAG,IAAI,EAAC;QAAC,OAAO,IAAI,CAAA;KAAC,CAAA,OAAO,KAAK,CAAA,CAAA,CAAC,EAAE,CAAC;IAAA,IAAI,EAAE,GAAC,CAAC,CAAC,cAAW,IAAG,CAAC,EAAE,EAAC;QAAC,OAAO,IAAI,CAAA;KAAC,CAAA,OAAO,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,KAAG,IAAI,IAAE,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAG,MAAM,CAAA,CAAA,CAAC,CAAC,CAAC;IAAA,IAAG,EAAE,IAAE,CAAC,EAAE,EAAC;QAAC,IAAI,EAAE,GAAC,IAAI,CAAC,SAAS,CAAC;QAAA,EAAE,CAAC,IAAI,EAAC,WAAW,EAAC,SAAS,SAAS,CAAC,CAAC,IAAE,IAAG,OAAO,CAAC,KAAG,QAAQ,EAAC;YAAC,OAAM;SAAC,CAAA,IAAI,CAAC,CAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,GAAC,SAAS,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAI,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,CAAA,IAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAC;YAAC,IAAI,CAAC,GAAC,EAAE,CAAC,UAAU,CAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,CAAC,CAAA,IAAI,CAAC;YAAA,IAAI,CAAC,GAAC,UAAS,CAAC,EAAC,CAAC,IAAE,IAAI,CAAC,GAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAC,EAAC,IAAI,EAAC,CAAC,EAAC,CAAC,CAAC,CAAA,CAAC,CAAA,CAAC,CAAC,CAAA,IAAG,OAAO,CAAC,KAAG,QAAQ,EAAC;gBAAC,IAAG,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAC;oBAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;iBAAC;qBAAI;oBAAC,OAAO,CAAC,CAAA;iBAAC;aAAC,CAAA,CAAC,CAAC;YAAA,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SAAC;aAAI;YAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,IAAG,SAAS,CAAC,MAAM,GAAC,CAAC,EAAC;YAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAA;SAAC,CAAA,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAC,CAAC,CAAC,CAAA,CAAA,CAAC,CAAC,CAAA;KAAC;IAAA,OAAO,CAAC,CAAA;AAAA,CAAC,CAAC,CAAC;AAClqxB,iCAAiC;ACXjC,8DAA8D;AAgC9D,IAAU,GAAG,CA2DZ;AA3DD,WAAU,GAAG;IAAC,IAAA,MAAM,CA2DnB;IA3Da,WAAA,MAAM;QAAC,IAAA,IAAI,CA2DxB;QA3DoB,WAAA,IAAI;YAAC,IAAA,UAAU,CA2DnC;YA3DyB,WAAA,UAAU;gBAClC;;;;;;;;;mBASG;gBACH;oBAKE;wBACE,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;oBAC7B,CAAC;oBAID,sBAAI,gCAAM;wBAHV;;2BAEG;6BACH;4BACE,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;wBAC7B,CAAC;;;uBAAA;oBACD;;uBAEG;oBACH,2BAAI,GAAJ,UAAK,KAAY,EAAE,OAAmB,EAAE,MAAc;wBACpD,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;4BAC7B,OAAO,MAAM,CAAC,iCAA+B,KAAO,CAAC,CAAC;yBACvD;wBACD,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;oBACjD,CAAC;oBACD;;;uBAGG;oBACH,2BAAI,GAAJ,UAAK,KAAY,EAAE,KAAQ;wBACzB,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBAC1C,IAAI,CAAC,SAAS,EAAE;4BACd,MAAM,IAAI,KAAK,CAAC,uCAAqC,KAAO,CAAC,CAAC;yBAC/D;wBACD,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,CAAC;wBAC/B,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC7B,OAAO,MAAM,CAAC,KAAK,CAAC,CAAC;oBACvB,CAAC;oBACD;;uBAEG;oBACH,4BAAK,GAAL,UAAM,KAAY,EAAE,MAAY;wBAC9B,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;wBAC1C,IAAI,CAAC,SAAS,EAAE;4BACd,MAAM,IAAI,KAAK,CAAC,uCAAqC,KAAO,CAAC,CAAC;yBAC/D;wBACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;wBAC7B,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;oBAC3B,CAAC;oBACH,mBAAC;gBAAD,CAAC,AA/CD,IA+CC;gBA/CY,uBAAY,eA+CxB,CAAA;YACH,CAAC,EA3DyB,UAAU,GAAV,eAAU,KAAV,eAAU,QA2DnC;QAAD,CAAC,EA3DoB,IAAI,GAAJ,WAAI,KAAJ,WAAI,QA2DxB;IAAD,CAAC,EA3Da,MAAM,GAAN,UAAM,KAAN,UAAM,QA2DnB;AAAD,CAAC,EA3DS,GAAG,KAAH,GAAG,QA2DZ;AC3FD;;;;;;;;;;;;;;;;;;;;GAoBG;AAEH,8DAA8D;AAC9D,yCAAyC;AAEzC;;;;;;;;;;;;;;;;;;GAkBG;AAEH,IAAU,GAAG,CA4IZ;AA5ID,WAAU,GAAG;IAAC,IAAA,MAAM,CA4InB;IA5Ia,WAAA,MAAM;QAAC,IAAA,IAAI,CA4IxB;QA5IoB,WAAA,IAAI;YAAC,IAAA,UAAU,CA4InC;YA5IyB,WAAA,UAAU;gBAClC;oBAYE;;;;;uBAKG;oBACH,iBAAY,YAA0B,EAAE,MAAe;wBACrD,kEAAkE;wBAClE,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,WAAA,aAAa,CAAC,iBAAiB,EAAE,CAAC;wBAC3D,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;wBAClD,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;wBACjC,IAAI,CAAC,gBAAgB,GAAG,IAAI,WAAA,YAAY,CAAC;wBACzC,IAAI,CAAC,kBAAkB,GAAG,IAAI,WAAA,YAAY,EAAa,CAAC;wBACxD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC;wBAE1C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;oBAChC,CAAC;oBAED;;;;;uBAKG;oBACK,4BAAU,GAAlB,UAAmB,YAA0B;wBAC3C,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;4BACvB,OAAO,EAAE,QAAQ;4BACjB,YAAY,EAAE,YAAY;yBAC3B,CAAC,CAAC;oBACL,CAAC;oBAED;;uBAEG;oBACH,2BAAS,GAAT,UAAU,aAAqB;wBAA/B,iBAWC;wBAVC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,OAAO;4BAClC,mFAAmF;4BACnF,uBAAuB;4BACvB,KAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;4BAEpC,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC;gCACvB,OAAO,EAAE,MAAM;gCACf,KAAK,EAAE,aAAa;6BACrB,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;oBACL,CAAC;oBAED;;;uBAGG;oBACI,6BAAW,GAAlB;wBACE,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC;4BACvB,OAAO,EAAE,QAAQ;yBAClB,CAAC,CAAC;oBACL,CAAC;oBAED,yBAAO,GAAP,UAAQ,SAA8C,EAAE,OAAgB;wBAAxE,iBAWC;wBAVC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;wBAC9B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;4BACjC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;4BACnD,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC;gCACvB,OAAO,EAAE,SAAS;gCAClB,KAAK,EAAE,KAAK;gCACZ,SAAS,EAAE,SAAS;gCACpB,OAAO,EAAE,OAAO;6BACjB,CAAC,CAAC;wBACL,CAAC,CAAC,CAAC;oBACL,CAAC;oBAED,2BAAS,GAAT,UAAU,OAAgB;wBAA1B,iBAUC;wBATC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;wBAC9B,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;4BACjC,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;4BACrD,KAAI,CAAC,OAAO,CAAC,WAAW,CAAC;gCACvB,OAAO,EAAE,WAAW;gCACpB,KAAK,EAAE,KAAK;gCACZ,OAAO,EAAE,OAAO;6BACjB,CAAC,CAAA;wBACJ,CAAC,CAAC,CAAC;oBACL,CAAC;oBAED,qCAAqC;oBACrC,kEAAkE;oBAE1D,2BAAS,GAAjB,UAAkB,KAAmB;wBACnC,IAAI,OAAO,GAAoB,KAAK,CAAC,IAAI,CAAC;wBAC1C,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,EAAE;4BAC/B,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;4BAC3B,IAAG,OAAO,CAAC,KAAK,EAAE;gCAChB,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;6BAC9B;yBACF;6BACI,IAAI,OAAO,CAAC,OAAO,KAAK,OAAO,EAAE;4BACpC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;yBACrD;6BAAM,IAAI,OAAO,CAAC,OAAO,KAAK,aAAa,EAAE;4BAC5C,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,WAAW,CAAC,CAAC;yBAChE;6BAAM,IAAI,OAAO,CAAC,OAAO,KAAK,aAAa,EAAE;4BAC5C,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;yBAC3D;6BAAM;4BACL,wDAAwD;4BACxD,YAAY;4BACZ,MAAM,IAAI,KAAK,CAAC,8BAA4B,OAAO,CAAC,OAAS,CAAC,CAAC;yBAChE;oBACH,CAAC;oBAED;;;uBAGG;oBACI,0BAAQ,GAAf;wBACE,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;oBAC3B,CAAC;oBAED;;;;;;uBAMG;oBACI,cAAM,GAAb,UAAc,EAAY;wBACxB,IAAI,OAAO,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC;wBAC5B,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC,qCAAqC,CAAC,CAAC;wBACjE,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;oBAClB,CAAC;oBACH,cAAC;gBAAD,CAAC,AA1ID,IA0IC;gBA1IY,kBAAO,UA0InB,CAAA;YACH,CAAC,EA5IyB,UAAU,GAAV,eAAU,KAAV,eAAU,QA4InC;QAAD,CAAC,EA5IoB,IAAI,GAAJ,WAAI,KAAJ,WAAI,QA4IxB;IAAD,CAAC,EA5Ia,MAAM,GAAN,UAAM,KAAN,UAAM,QA4InB;AAAD,CAAC,EA5IS,GAAG,KAAH,GAAG,QA4IZ;AAED,CAAC;IACC,IAAI,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IAEpC,4DAA4D;IAC5D,IAAI,OAAO,MAAM,KAAK,WAAW,IAAI,OAAO,MAAM,CAAC,OAAO,KAAK,WAAW,EAAE;QAC1E,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;QAC5B,YAAY;QACZ,EAAE,CAAC,OAAO,CAAC,YAAY,GAAG,EAAE,CAAC,YAAY,CAAC;KAC3C;SAAM;QACL,YAAY;QACZ,MAAM,CAAC,OAAO,GAAG,EAAE,CAAC,OAAO,CAAC;KAC7B;AACH,CAAC,EAAE,CAAC,CAAC;ACvML,qGAAqG;AACrG,6FAA6F;AAC7F,yFAAyF;AACzF,gDAAgD;AAEhD,IAAU,GAAG,CAuSZ;AAvSD,WAAU,GAAG;IAAC,IAAA,MAAM,CAuSnB;IAvSa,WAAA,MAAM;QAAC,IAAA,IAAI,CAuSxB;QAvSoB,WAAA,IAAI;YAAC,IAAA,UAAU,CAuSnC;YAvSyB,WAAA,YAAU;gBA0ClC;oBAOE,8BAAY,IAAU,EAAE,MAAqB;wBAC3C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;wBACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,qBAAqB,CAAC;wBAC3E,IAAG,CAAC,IAAI,CAAC,aAAa,EAAE;4BACtB,0FAA0F;4BAC1F,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;yBACjE;wBAED,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;wBACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,GAAG,MAAM,CAAC,qBAAqB,CAAC;wBAC1E,IAAG,CAAC,IAAI,CAAC,WAAW,EAAE;4BACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,qBAAqB,CAAC,CAAC;yBACrE;oBACH,CAAC;oBACH,2BAAC;gBAAD,CAAC,AArBD,IAqBC;gBArBY,iCAAoB,uBAqBhC,CAAA;gBAED;oBAIE,0BAAY,WAAyB,EAAE,EAAU;wBAC/C,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;wBAC/B,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;oBAC5B,CAAC;oBACH,uBAAC;gBAAD,CAAC,AARD,IAQC;gBARY,6BAAgB,mBAQ5B,CAAA;gBAKD;oBAAuC,qCAAY;oBAAnD;wBAAA,qEAwNC;wBAlNS,0BAAoB,GAAoB,EAAE,CAAC;wBAE3C,iBAAW,GAAY,IAAI,CAAC;wBAC5B,iBAAW,GAAY,IAAI,CAAC;;oBA+MtC,CAAC;oBA3MQ,gCAAI,GAAX,UAAY,sBAAuC;wBAAvC,uCAAA,EAAA,8BAAuC;wBACjD,wFAAwF;wBACxF,oBAAoB;wBACpB,IAAI,YAAY,GAAiB;4BAC/B,wBAAwB,EAAE,EAAE;4BAC5B,oDAAoD;4BACpD,yBAAyB,EAAE,sBAAsB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;yBAC3D,CAAA;wBAED,IAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;4BACpB,OAAO;yBACR;wBAED,IAAI,CAAC,QAAQ,GAAG,IAAI,aAAA,OAAO,CAAC,YAAY,CAAC,CAAC;oBAC5C,CAAC;oBAED,sBAAW,0CAAW;6BAAtB;4BACE,OAAO,IAAI,CAAC,YAAY,CAAC;wBAC3B,CAAC;;;uBAAA;oBAEM,uCAAW,GAAlB;wBACE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;wBAC5B,OAAO,IAAI,CAAC,YAAY,CAAC;wBACzB,OAAO,IAAI,CAAC,aAAa,CAAC;wBAE1B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;oBACvC,CAAC;oBAED,qCAAS,GAAT,UAAU,KAAgB;wBACxB,IAAG,CAAC,KAAK,EAAE;4BACT,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;yBAChD;wBAED,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;wBACtB,IAAI,EAAE,GAAG,IAAI,CAAC;wBAEd,yFAAyF;wBACzF,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,UAAS,MAAqB;4BACtE,EAAE,CAAC,YAAY,GAAG,KAAK,CAAC;4BACxB,EAAE,CAAC,aAAa,GAAG,MAAM,CAAC;4BAE1B,IAAI;gCACF,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;6BAClC;4BAAC,OAAO,GAAG,EAAE;gCACZ,gDAAgD;gCAChD,OAAO,CAAC,KAAK,CAAC,wBAAwB,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,GAAI,GAAa,CAAC,OAAO,CAAC,CAAC;6BACrF;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC;oBAEM,6CAAiB,GAAxB,UAAyB,YAA2B;wBAClD,kGAAkG;wBAClG,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,SAAS,CAAC,CAAC;wBAE9C,2DAA2D;wBAC3D,wFAAwF;wBACxF,IAAG,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;4BAC5C,OAAO;yBACR;wBAED,IAAG,YAAY,EAAE;4BACf,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,sBAAsB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC,CAAC;yBAChF;oBACH,CAAC;oBAEM,qCAAS,GAAhB,UAAiB,MAAoB;wBACnC,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;4BACjB,OAAO,IAAI,CAAC;yBACb;wBAED,IAAI,OAAO,GAAG,IAAI,oBAAoB,CAAC,KAAA,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;wBAC9E,OAAO,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;oBAC1C,CAAC;oBAEM,mCAAO,GAAd,UAAe,aAA4B;wBACzC,IAAG,CAAC,IAAI,CAAC,QAAQ,EAAE;4BACjB,OAAO,IAAI,CAAC;yBACb;wBAED,2DAA2D;wBAC3D,wFAAwF;wBACxF,IAAG,CAAC,IAAI,CAAC,YAAY,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE;4BAC5C,OAAO,IAAI,CAAC;yBACb;wBAED,6FAA6F;wBAC7F,oDAAoD;wBACpD,IAAI,CAAC,IAAI,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;wBAE1C,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9C,CAAC;oBAEM,6CAAiB,GAAxB,UAAyB,YAA0B;wBACjD,IAAG,CAAC,YAAY,EAAE;4BAChB,OAAO,IAAI,CAAC;yBACb;wBAED,IAAI,aAAa,GAAG,YAAY,CAAC,sBAAsB,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;wBAC5E,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;oBACrC,CAAC;oBAED;;;;uBAIG;oBACK,4CAAgB,GAAxB,UAAyB,aAA4B;wBACnD,IAAG,CAAC,aAAa,EAAE;4BACjB,OAAO,IAAI,CAAC;yBACb;wBAED,IAAI,OAAO,GAAG,IAAI,oBAAoB,CAAC,aAAa,CAAC,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC;wBACnF,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;wBAExC,IAAI,SAAS,GAAG,aAAa,CAAC,SAAS,CAAC;wBACxC,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,IAAI,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;wBAExH,IAAI,EAAE,GAAG,IAAI,CAAC;wBACd,OAAO,OAAO,CAAC,IAAI,CAAC,UAAS,WAAyB;4BACpD,IAAG,OAAO,IAAI,EAAE,CAAC,cAAc,EAAE;gCAC/B,IAAI,MAAM,GAAG,IAAI,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC;gCAC7D,EAAE,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;gCACpC,EAAE,CAAC,cAAc,GAAG,IAAI,CAAC;6BAC1B;4BAED,OAAO,WAAW,CAAC;wBACrB,CAAC,CAAC,CAAA;oBACJ,CAAC;oBAEO,+CAAmB,GAA3B,UAA4B,aAA4B;wBACtD,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;wBAE9C,IAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,GAAG,iBAAiB,CAAC,oBAAoB,EAAE;4BAC5E,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;yBACxC;oBACH,CAAC;oBAED;;;;;;uBAMG;oBACI,8CAAkB,GAAzB,UAA0B,EAAU;wBAClC,IAAI,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,MAAM,CAAC,UAAS,CAAgB;4BACpE,OAAO,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;wBACvB,CAAC,CAAC,CAAA;wBAEF,OAAO,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC7C,CAAC;oBAEM,oCAAQ,GAAf;wBACE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBAC3B,CAAC;oBAED,sBAAW,uCAAQ;6BAAnB;4BACE,IAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gCACpB,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;gCACzB,OAAO,KAAK,CAAC;6BACd;4BACD,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC;wBAC9C,CAAC;;;uBAAA;oBAEM,qCAAS,GAAhB;wBACE,8DAA8D;wBAC9D,OAAO,IAAI,CAAC;oBACd,CAAC;oBAED,sBAAW,yCAAU;6BAArB;4BACE,OAAO,IAAI,CAAC,WAAW,CAAC;wBAC1B,CAAC;6BAED,UAAsB,IAAa;4BACjC,IAAG,CAAC,IAAI,CAAC,SAAS,EAAE,EAAE;gCACpB,OAAO;6BACR;4BAED,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC;4BAC9B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;4BAExB,IAAG,MAAM,IAAI,IAAI,EAAE;gCACjB,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;6BACxD;wBACH,CAAC;;;uBAbA;oBAeD,sBAAW,yCAAU;6BAArB;4BACE,OAAO,IAAI,CAAC,WAAW,CAAC;wBAC1B,CAAC;6BAED,UAAsB,IAAa;4BACjC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;wBAC1B,CAAC;;;uBAJA;oBAMM,+CAAmB,GAA1B,UAA2B,MAAc;wBACvC,6EAA6E;wBAC7E,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;oBACzC,CAAC;oBAEM,+CAAmB,GAA1B;wBACE,6EAA6E;wBAC7E,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,CAAC;oBACvC,CAAC;oBACH,wBAAC;gBAAD,CAAC,AAxND,CAAuC,YAAY,GAwNlD;gBAxNY,8BAAiB,oBAwN7B,CAAA;YACH,CAAC,EAvSyB,UAAU,GAAV,eAAU,KAAV,eAAU,QAuSnC;QAAD,CAAC,EAvSoB,IAAI,GAAJ,WAAI,KAAJ,WAAI,QAuSxB;IAAD,CAAC,EAvSa,MAAM,GAAN,UAAM,KAAN,UAAM,QAuSnB;AAAD,CAAC,EAvSS,GAAG,KAAH,GAAG,QAuSZ;AC5SD,wDAAwD;AACxD,8CAA8C;AAC9C,uGAAuG;AACvG,wDAAwD;AAExD,IAAU,GAAG,CAgLZ;AAhLD,WAAU,GAAG;IAAC,IAAA,MAAM,CAgLnB;IAhLa,WAAA,MAAM;QAAC,IAAA,IAAI,CAgLxB;QAhLoB,WAAA,IAAI;YACvB;gBAQE,wBAAY,OAA8B;oBACxC,IAAG,CAAC,OAAO,EAAE;wBACX,OAAO,GAAG,cAAc,CAAC,eAAe,CAAC;qBAC1C;oBAED,IAAI,CAAC,YAAY,GAAG,IAAI,KAAA,iBAAiB,CAAC,OAAO,CAAC,CAAC;oBACnD,IAAI,CAAC,YAAY,GAAG,IAAI,KAAA,UAAU,CAAC,iBAAiB,EAAE,CAAC;gBACzD,CAAC;gBAED,sBAAW,6CAAiB;yBAA5B;wBACE,OAAO,IAAI,CAAC,YAAY,CAAC;oBAC3B,CAAC;;;mBAAA;gBAED,sBAAW,6CAAiB;yBAA5B;wBACE,OAAO,IAAI,CAAC,YAAY,CAAC;oBAC3B,CAAC;;;mBAAA;gBAED,sBAAW,6CAAiB;yBAA5B;wBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,CAAC;oBAClD,CAAC;;;mBAAA;gBAED,sBAAW,0CAAc;yBAAzB;wBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC;oBAC/C,CAAC;yBAED,UAA0B,QAA4B;wBACpD,IAAI,CAAC,iBAAiB,CAAC,cAAc,GAAG,QAAQ,CAAC;wBAEjD,iFAAiF;wBACjF,wBAAwB;wBACxB,IAAI,CAAC,YAAY,EAAE,CAAC;oBACtB,CAAC;;;mBARA;gBAUD,sBAAW,uCAAW;yBAAtB;wBACE,OAAO,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC;oBAC5C,CAAC;;;mBAAA;gBAEG;;;;;;eAMD;gBACH,wCAAe,GAAf,UAAgB,QAAkB;oBAChC,IAAI,UAAU,GAAG,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC;oBAE5C,0EAA0E;oBAC1E,yFAAyF;oBACzF,IAAI,YAAY,GAAG,QAAQ,CAAC,KAAK,CAAC;oBAClC,IAAI,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC;oBAEnC,kHAAkH;oBAClH,wEAAwE;oBACxE,IAAG,CAAC,UAAU,IAAI,KAAA,UAAU,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,yBAAyB,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,OAAO,EAAE;wBAC1I,gEAAgE;wBAChE,mFAAmF;wBACnF,IAAG,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE;4BAC/C,OAAO,IAAI,CAAC;yBACb;qBACF;oBAED,2HAA2H;oBAC3H,uBAAuB;oBACvB,IAAG,CAAC,OAAO,IAAI,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE;wBACzE,OAAO,IAAI,CAAC;qBACb;oBAED,qGAAqG;oBACrG,kHAAkH;oBAClH,mHAAmH;oBACnH,IAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE;wBAClC,wIAAwI;wBAExI,+FAA+F;wBAC/F,IAAG,CAAC,QAAQ,CAAC,KAAK,IAAI,QAAQ,IAAI,QAAQ,CAAC,KAAK,IAAI,KAAA,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,EAAE,EAAE;4BAC7H,OAAO;4BACP,wGAAwG;yBACzG;6BAAM,IAAG,CAAC,QAAQ,CAAC,KAAK,IAAI,SAAS,IAAI,QAAQ,CAAC,KAAK,IAAI,KAAA,KAAK,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,OAAO,CAAC,EAAE;4BAC7I,OAAO;yBACR;qBACF;oBAED,8BAA8B;oBAE9B,IAAI,YAAY,GAAG,KAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oBAC3C,IAAI,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;oBAEnF,6BAA6B;oBAC7B,IAAG,QAAQ,CAAC,UAAU,EAAE;wBACtB,IAAI,CAAC,iBAAiB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;qBAC9C;oBAED,mGAAmG;oBACnG,IAAG,YAAY,IAAI,IAAI,EAAE;wBACvB,IAAI,UAAU,SAAa,CAAC;wBAE5B,2GAA2G;wBAC3G,oEAAoE;wBACpE,IAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE;4BAC1E,4DAA4D;4BAC5D,IAAG,QAAQ,CAAC,eAAe,IAAI,QAAQ,CAAC,QAAQ,EAAE;gCAChD,IAAI,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;gCAC1E,UAAU,GAAG,EAAE,CAAC;gCAEhB,KAAgB,UAAwB,EAAxB,KAAA,QAAQ,CAAC,eAAe,EAAxB,cAAwB,EAAxB,IAAwB,EAAE;oCAAtC,IAAI,IAAI,SAAA;oCACV,IAAI,IAAI,GAAG,KAAA,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;oCAEnC,IAAI,MAAM,GAAG,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oCACzE,IAAG,CAAC,MAAM,EAAE;wCACV,OAAO,CAAC,IAAI,CAAC,uDAAuD,CAAC,CAAC;wCACtE,SAAS;qCACV;oCAED,IAAI,QAAQ,GAAG,MAAM,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE,QAAQ,CAAC,MAAM,CAAC,CAAC;oCACvF,IAAI,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oCAChF,IAAG,iBAAiB,EAAE;wCACpB,0FAA0F;wCAC1F,uFAAuF;wCACvF,8CAA8C;wCAE9C,IAAI,SAAS,GAAc,iBAAiB,CAAC,aAAa,CAAC,SAAS,CAAC;wCAErE,yFAAyF;wCACzF,uDAAuD;wCACvD,SAAS,CAAC,EAAE,GAAG,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC;wCAChD,UAAU,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,EAAC,CAAC,CAAC;qCACnD;iCACF;6BACF;yBACF;wBAED,8FAA8F;wBAC9F,iCAAiC;wBACjC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;wBAE9C,kGAAkG;wBAElG,oEAAoE;wBACpE,YAAY,CAAC,aAAa,CAAC,UAAU,GAAG,UAAU,CAAC;wBACnD,wFAAwF;wBACxF,YAAY,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;wBAE5F,sFAAsF;wBACtF,IAAG,CAAC,YAAY,CAAC,sBAAsB,EAAE;4BACvC,sFAAsF;4BACtF,YAAY,CAAC,YAAY,EAAE,CAAC;yBAC7B;qBACF;oBAED,qEAAqE;oBAErE,iGAAiG;oBACjG,qFAAqF;oBACrF,EAAE;oBACF,0FAA0F;oBAC1F,4FAA4F;oBAE5F,8FAA8F;oBAC9F,OAAO,YAAY,CAAC;gBACtB,CAAC;gBAEM,qCAAY,GAAnB;oBACE,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;oBACtC,IAAI,CAAC,iBAAiB,CAAC,iBAAiB,EAAE,CAAC;gBAC7C,CAAC;gBA5KsB,8BAAe,GAAyB;oBAC7D,UAAU,EAAE,IAAI;iBACjB,CAAA;gBA2KH,qBAAC;aAAA,AA9KD,IA8KC;YA9KY,mBAAc,iBA8K1B,CAAA;QACH,CAAC,EAhLoB,IAAI,GAAJ,WAAI,KAAJ,WAAI,QAgLxB;IAAD,CAAC,EAhLa,MAAM,GAAN,UAAM,KAAN,UAAM,QAgLnB;AAAD,CAAC,EAhLS,GAAG,KAAH,GAAG,QAgLZ","sourcesContent":["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","// Autogenerated code. Do not modify!\nfunction LMLayerWorkerCode () {\n/*! https://mths.be/codepointat v0.2.0 by @mathias */\nif (!String.prototype.codePointAt) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar codePointAt = function(position) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tvar size = string.length;\n\t\t\t// `ToInteger`\n\t\t\tvar index = position ? Number(position) : 0;\n\t\t\tif (index != index) { // better `isNaN`\n\t\t\t\tindex = 0;\n\t\t\t}\n\t\t\t// Account for out-of-bounds indices:\n\t\t\tif (index < 0 || index >= size) {\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\t// Get the first code unit\n\t\t\tvar first = string.charCodeAt(index);\n\t\t\tvar second;\n\t\t\tif ( // check if it’s the start of a surrogate pair\n\t\t\t\tfirst >= 0xD800 && first <= 0xDBFF && // high surrogate\n\t\t\t\tsize > index + 1 // there is a next code unit\n\t\t\t) {\n\t\t\t\tsecond = string.charCodeAt(index + 1);\n\t\t\t\tif (second >= 0xDC00 && second <= 0xDFFF) { // low surrogate\n\t\t\t\t\t// https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n\t\t\t\t\treturn (first - 0xD800) * 0x400 + second - 0xDC00 + 0x10000;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn first;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'codePointAt', {\n\t\t\t\t'value': codePointAt,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.codePointAt = codePointAt;\n\t\t}\n\t}());\n}\n/*! http://mths.be/startswith v0.2.0 by @mathias */\nif (!String.prototype.startsWith) {\n\t(function() {\n\t\t'use strict'; // needed to support `apply`/`call` with `undefined`/`null`\n\t\tvar defineProperty = (function() {\n\t\t\t// IE 8 only supports `Object.defineProperty` on DOM elements\n\t\t\ttry {\n\t\t\t\tvar object = {};\n\t\t\t\tvar $defineProperty = Object.defineProperty;\n\t\t\t\tvar result = $defineProperty(object, object, object) && $defineProperty;\n\t\t\t} catch(error) {}\n\t\t\treturn result;\n\t\t}());\n\t\tvar toString = {}.toString;\n\t\tvar startsWith = function(search) {\n\t\t\tif (this == null) {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar string = String(this);\n\t\t\tif (search && toString.call(search) == '[object RegExp]') {\n\t\t\t\tthrow TypeError();\n\t\t\t}\n\t\t\tvar stringLength = string.length;\n\t\t\tvar searchString = String(search);\n\t\t\tvar searchLength = searchString.length;\n\t\t\tvar position = arguments.length > 1 ? arguments[1] : undefined;\n\t\t\t// `ToInteger`\n\t\t\tvar pos = position ? Number(position) : 0;\n\t\t\tif (pos != pos) { // better `isNaN`\n\t\t\t\tpos = 0;\n\t\t\t}\n\t\t\tvar start = Math.min(Math.max(pos, 0), stringLength);\n\t\t\t// Avoid the `indexOf` call if no match is possible\n\t\t\tif (searchLength + start > stringLength) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar index = -1;\n\t\t\twhile (++index < searchLength) {\n\t\t\t\tif (string.charCodeAt(start + index) != searchString.charCodeAt(index)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t};\n\t\tif (defineProperty) {\n\t\t\tdefineProperty(String.prototype, 'startsWith', {\n\t\t\t\t'value': startsWith,\n\t\t\t\t'configurable': true,\n\t\t\t\t'writable': true\n\t\t\t});\n\t\t} else {\n\t\t\tString.prototype.startsWith = startsWith;\n\t\t}\n\t}());\n}\n// From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from\n// Any npm-based ones require use of `require`, which won't work for us.\n\n// Production steps of ECMA-262, Edition 6, 22.1.2.1\nif (!Array.from) {\n  Array.from = (function () {\n    var toStr = Object.prototype.toString;\n    var isCallable = function (fn) {\n      return typeof fn === 'function' || toStr.call(fn) === '[object Function]';\n    };\n    var toInteger = function (value) {\n      var number = Number(value);\n      if (isNaN(number)) { return 0; }\n      if (number === 0 || !isFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * Math.floor(Math.abs(number));\n    };\n    var maxSafeInteger = Math.pow(2, 53) - 1;\n    var toLength = function (value) {\n      var len = toInteger(value);\n      return Math.min(Math.max(len, 0), maxSafeInteger);\n    };\n\n    // The length property of the from method is 1.\n    return function from(arrayLike/*, mapFn, thisArg */) {\n      // 1. Let C be the this value.\n      var C = this;\n\n      // 2. Let items be ToObject(arrayLike).\n      var items = Object(arrayLike);\n\n      // 3. ReturnIfAbrupt(items).\n      if (arrayLike == null) {\n        throw new TypeError('Array.from requires an array-like object - not null or undefined');\n      }\n\n      // 4. If mapfn is undefined, then let mapping be false.\n      var mapFn = arguments.length > 1 ? arguments[1] : void undefined;\n      var T;\n      if (typeof mapFn !== 'undefined') {\n        // 5. else\n        // 5. a If IsCallable(mapfn) is false, throw a TypeError exception.\n        if (!isCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n\n        // 5. b. If thisArg was supplied, let T be thisArg; else let T be undefined.\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n      }\n\n      // 10. Let lenValue be Get(items, \"length\").\n      // 11. Let len be ToLength(lenValue).\n      var len = toLength(items.length);\n\n      // 13. If IsConstructor(C) is true, then\n      // 13. a. Let A be the result of calling the [[Construct]] internal method \n      // of C with an argument list containing the single item len.\n      // 14. a. Else, Let A be ArrayCreate(len).\n      var A = isCallable(C) ? Object(new C(len)) : new Array(len);\n\n      // 16. Let k be 0.\n      var k = 0;\n      // 17. Repeat, while k < len… (also steps a - h)\n      var kValue;\n      while (k < len) {\n        kValue = items[k];\n        if (mapFn) {\n          A[k] = typeof T === 'undefined' ? mapFn(kValue, k) : mapFn.call(T, kValue, k);\n        } else {\n          A[k] = kValue;\n        }\n        k += 1;\n      }\n      // 18. Let putStatus be Put(A, \"length\", len, true).\n      A.length = len;\n      // 20. Return A.\n      return A;\n    };\n  }());\n}\n\n/***\n   KeymanWeb 11.0\n   Copyright 2019 SIL International\n***/\n/**\n * Constructs a string from one or more Unicode character codepoint values\n * passed as integer parameters.\n *\n * @param  {number} cp0,...   1 or more Unicode codepoints, e.g. 0x0065, 0x10000\n * @return {string|null}      The new String object.\n */\nString.kmwFromCharCode = function (cp0) {\n    var chars = [], i;\n    for (i = 0; i < arguments.length; i++) {\n        var c = Number(arguments[i]);\n        if (!isFinite(c) || c < 0 || c > 0x10FFFF || Math.floor(c) !== c) {\n            throw new RangeError(\"Invalid code point \" + c);\n        }\n        if (c < 0x10000) {\n            chars.push(c);\n        }\n        else {\n            c -= 0x10000;\n            chars.push((c >> 10) + 0xD800);\n            chars.push((c % 0x400) + 0xDC00);\n        }\n    }\n    return String.fromCharCode.apply(undefined, chars);\n};\n/**\n * Returns a number indicating the Unicode value of the character at the given\n * code point index, with support for supplementary plane characters.\n *\n * @param  {number}  codePointIndex  The code point index into the string (not\n                                     the code unit index) to return\n * @return {number}                  The Unicode character value\n */\nString.prototype.kmwCharCodeAt = function (codePointIndex) {\n    var str = String(this);\n    var codeUnitIndex = 0;\n    if (codePointIndex < 0 || codePointIndex >= str.length) {\n        return NaN;\n    }\n    for (var i = 0; i < codePointIndex; i++) {\n        codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n        if (codeUnitIndex === null)\n            return NaN;\n    }\n    var first = str.charCodeAt(codeUnitIndex);\n    if (first >= 0xD800 && first <= 0xDBFF && str.length > codeUnitIndex + 1) {\n        var second = str.charCodeAt(codeUnitIndex + 1);\n        if (second >= 0xDC00 && second <= 0xDFFF) {\n            return ((first - 0xD800) << 10) + (second - 0xDC00) + 0x10000;\n        }\n    }\n    return first;\n};\n/**\n * Returns the code point index within the calling String object of the first occurrence\n * of the specified value, or -1 if not found.\n *\n * @param  {string}  searchValue    The value to search for\n * @param  {number}  [fromIndex]    Optional code point index to start searching from\n * @return {number}                 The code point index of the specified search value\n */\nString.prototype.kmwIndexOf = function (searchValue, fromIndex) {\n    var str = String(this);\n    var codeUnitIndex = str.indexOf(searchValue, fromIndex);\n    if (codeUnitIndex < 0) {\n        return codeUnitIndex;\n    }\n    var codePointIndex = 0;\n    for (var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i))\n        codePointIndex++;\n    return codePointIndex;\n};\n/**\n * Returns the code point index within the calling String object of the last occurrence\n * of the specified value, or -1 if not found.\n *\n * @param  {string}  searchValue    The value to search for\n * @param  {number}  fromIndex      Optional code point index to start searching from\n * @return {number}                 The code point index of the specified search value\n */\nString.prototype.kmwLastIndexOf = function (searchValue, fromIndex) {\n    var str = String(this);\n    var codeUnitIndex = str.lastIndexOf(searchValue, fromIndex);\n    if (codeUnitIndex < 0) {\n        return codeUnitIndex;\n    }\n    var codePointIndex = 0;\n    for (var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i))\n        codePointIndex++;\n    return codePointIndex;\n};\n/**\n * Returns the length of the string in code points, as opposed to code units.\n *\n * @return {number}                 The length of the string in code points\n */\nString.prototype.kmwLength = function () {\n    var str = String(this);\n    if (str.length == 0)\n        return 0;\n    for (var i = 0, codeUnitIndex = 0; codeUnitIndex !== null; i++)\n        codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n    return i;\n};\n/**\n * Extracts a section of a string and returns a new string.\n *\n * @param  {number}  beginSlice    The start code point index in the string to\n *                                 extract from\n * @param  {number}  endSlice      Optional end code point index in the string\n *                                 to extract to\n * @return {string}                The substring as selected by beginSlice and\n *                                 endSlice\n */\nString.prototype.kmwSlice = function (beginSlice, endSlice) {\n    var str = String(this);\n    var beginSliceCodeUnit = str.kmwCodePointToCodeUnit(beginSlice);\n    var endSliceCodeUnit = str.kmwCodePointToCodeUnit(endSlice);\n    if (beginSliceCodeUnit === null || endSliceCodeUnit === null)\n        return '';\n    else\n        return str.slice(beginSliceCodeUnit, endSliceCodeUnit);\n};\n/**\n * Returns the characters in a string beginning at the specified location through\n * the specified number of characters.\n *\n * @param  {number}  start         The start code point index in the string to\n *                                 extract from\n * @param  {number=}  length        Optional length to extract\n * @return {string}                The substring as selected by start and length\n */\nString.prototype.kmwSubstr = function (start, length) {\n    var str = String(this);\n    if (start < 0) {\n        start = str.kmwLength() + start;\n    }\n    if (start < 0)\n        start = 0;\n    var startCodeUnit = str.kmwCodePointToCodeUnit(start);\n    var endCodeUnit = startCodeUnit;\n    if (startCodeUnit === null)\n        return '';\n    if (arguments.length < 2) {\n        endCodeUnit = str.length;\n    }\n    else {\n        for (var i = 0; i < length; i++)\n            endCodeUnit = str.kmwNextChar(endCodeUnit);\n    }\n    if (endCodeUnit === null)\n        return str.substring(startCodeUnit);\n    else\n        return str.substring(startCodeUnit, endCodeUnit);\n};\n/**\n * Returns the characters in a string between two indexes into the string.\n *\n * @param  {number}  indexA        The start code point index in the string to\n *                                 extract from\n * @param  {number}  indexB        The end code point index in the string to\n *                                 extract to\n * @return {string}                The substring as selected by indexA and indexB\n */\nString.prototype.kmwSubstring = function (indexA, indexB) {\n    var str = String(this), indexACodeUnit, indexBCodeUnit;\n    if (typeof (indexB) == 'undefined') {\n        indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\n        indexBCodeUnit = str.length;\n    }\n    else {\n        if (indexA > indexB) {\n            var c = indexA;\n            indexA = indexB;\n            indexB = c;\n        }\n        indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\n        indexBCodeUnit = str.kmwCodePointToCodeUnit(indexB);\n    }\n    if (isNaN(indexACodeUnit) || indexACodeUnit === null)\n        indexACodeUnit = 0;\n    if (isNaN(indexBCodeUnit) || indexBCodeUnit === null)\n        indexBCodeUnit = str.length;\n    return str.substring(indexACodeUnit, indexBCodeUnit);\n};\n/*\n  Helper functions\n*/\n/**\n * Returns the code unit index for the next code point in the string, accounting for\n * supplementary pairs\n *\n * @param  {number|null}  codeUnitIndex  The code unit position to increment\n * @return {number|null}                 The index of the next code point in the string,\n *                                       in code units\n */\nString.prototype.kmwNextChar = function (codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex === null || codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {\n        return null;\n    }\n    var first = str.charCodeAt(codeUnitIndex);\n    if (first >= 0xD800 && first <= 0xDBFF && str.length > codeUnitIndex + 1) {\n        var second = str.charCodeAt(codeUnitIndex + 1);\n        if (second >= 0xDC00 && second <= 0xDFFF) {\n            if (codeUnitIndex == str.length - 2) {\n                return null;\n            }\n            return codeUnitIndex + 2;\n        }\n    }\n    return codeUnitIndex + 1;\n};\n/**\n * Returns the code unit index for the previous code point in the string, accounting\n * for supplementary pairs\n *\n * @param  {number|null}  codeUnitIndex  The code unit position to decrement\n * @return {number|null}                 The index of the previous code point in the\n *                                       string, in code units\n*/\nString.prototype.kmwPrevChar = function (codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex == null || codeUnitIndex <= 0 || codeUnitIndex > str.length) {\n        return null;\n    }\n    var second = str.charCodeAt(codeUnitIndex - 1);\n    if (second >= 0xDC00 && second <= 0xDFFF && codeUnitIndex > 1) {\n        var first = str.charCodeAt(codeUnitIndex - 2);\n        if (first >= 0xD800 && first <= 0xDBFF) {\n            return codeUnitIndex - 2;\n        }\n    }\n    return codeUnitIndex - 1;\n};\n/**\n * Returns the corresponding code unit index to the code point index passed\n *\n * @param  {number|null} codePointIndex  A code point index in the string\n * @return {number|null}                 The corresponding code unit index\n */\nString.prototype.kmwCodePointToCodeUnit = function (codePointIndex) {\n    if (codePointIndex === null)\n        return null;\n    var str = String(this);\n    var codeUnitIndex = 0;\n    if (codePointIndex < 0) {\n        codeUnitIndex = str.length;\n        for (var i = 0; i > codePointIndex; i--)\n            codeUnitIndex = str.kmwPrevChar(codeUnitIndex);\n        return codeUnitIndex;\n    }\n    if (codePointIndex == str.kmwLength())\n        return str.length;\n    for (var i = 0; i < codePointIndex; i++)\n        codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n    return codeUnitIndex;\n};\n/**\n * Returns the corresponding code point index to the code unit index passed\n *\n * @param  {number|null}  codeUnitIndex  A code unit index in the string\n * @return {number|null}                 The corresponding code point index\n */\nString.prototype.kmwCodeUnitToCodePoint = function (codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex === null)\n        return null;\n    else if (codeUnitIndex == 0)\n        return 0;\n    else if (codeUnitIndex < 0)\n        return str.substr(codeUnitIndex).kmwLength();\n    else\n        return str.substr(0, codeUnitIndex).kmwLength();\n};\n/**\n * Returns the character at a the code point index passed\n *\n * @param  {number}  codePointIndex  A code point index in the string\n * @return {string}                  The corresponding character\n */\nString.prototype.kmwCharAt = function (codePointIndex) {\n    var str = String(this);\n    if (codePointIndex >= 0)\n        return str.kmwSubstr(codePointIndex, 1);\n    else\n        return '';\n};\n/**\n * String prototype library extensions for basic plane characters,\n * to simplify enabling or disabling supplementary plane functionality (I3319)\n */\n/**\n * Returns the code unit index for the next code point in the string\n *\n * @param  {number}  codeUnitIndex    A code point index in the string\n * @return {number|null}                   The corresponding character\n */\nString.prototype.kmwBMPNextChar = function (codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {\n        return null;\n    }\n    return codeUnitIndex + 1;\n};\n/**\n * Returns the code unit index for the previous code point in the string\n *\n * @param  {number}  codeUnitIndex    A code unit index in the string\n * @return {number|null}                   The corresponding character\n */\nString.prototype.kmwBMPPrevChar = function (codeUnitIndex) {\n    var str = String(this);\n    if (codeUnitIndex <= 0 || codeUnitIndex > str.length) {\n        return null;\n    }\n    return codeUnitIndex - 1;\n};\n/**\n * Returns the code unit index for a code point index\n *\n * @param  {number}  codePointIndex   A code point index in the string\n * @return {number}                   The corresponding character\n */\nString.prototype.kmwBMPCodePointToCodeUnit = function (codePointIndex) {\n    return codePointIndex;\n};\n/**\n * Returns the code point index for a code unit index\n *\n * @param  {number}  codeUnitIndex    A code point index in the string\n * @return {number}                   The corresponding character\n */\nString.prototype.kmwBMPCodeUnitToCodePoint = function (codeUnitIndex) {\n    return codeUnitIndex;\n};\n/**\n * Returns the length of a BMP string\n *\n * @return {number}                   The length in code points\n */\nString.prototype.kmwBMPLength = function () {\n    var str = String(this);\n    return str.length;\n};\n/**\n * Returns a substring\n *\n * @param  {number}  n\n * @param  {number=}  ln\n * @return {string}\n */\nString.prototype.kmwBMPSubstr = function (n, ln) {\n    var str = String(this);\n    if (n > -1)\n        return str.substr(n, ln);\n    else\n        return str.substr(str.length + n, -n);\n};\n/**\n * Enable or disable supplementary plane string handling\n *\n * @param  {boolean}  bEnable\n */\nString.kmwEnableSupplementaryPlane = function (bEnable) {\n    var p = String.prototype;\n    String._kmwFromCharCode = bEnable ? String.kmwFromCharCode : String.fromCharCode;\n    p._kmwCharAt = bEnable ? p.kmwCharAt : p.charAt;\n    p._kmwCharCodeAt = bEnable ? p.kmwCharCodeAt : p.charCodeAt;\n    p._kmwIndexOf = bEnable ? p.kmwIndexOf : p.indexOf;\n    p._kmwLastIndexOf = bEnable ? p.kmwLastIndexOf : p.lastIndexOf;\n    p._kmwSlice = bEnable ? p.kmwSlice : p.slice;\n    p._kmwSubstring = bEnable ? p.kmwSubstring : p.substring;\n    p._kmwSubstr = bEnable ? p.kmwSubstr : p.kmwBMPSubstr;\n    p._kmwLength = bEnable ? p.kmwLength : p.kmwBMPLength;\n    p._kmwNextChar = bEnable ? p.kmwNextChar : p.kmwBMPNextChar;\n    p._kmwPrevChar = bEnable ? p.kmwPrevChar : p.kmwBMPPrevChar;\n    p._kmwCodePointToCodeUnit = bEnable ? p.kmwCodePointToCodeUnit : p.kmwBMPCodePointToCodeUnit;\n    p._kmwCodeUnitToCodePoint = bEnable ? p.kmwCodeUnitToCodePoint : p.kmwBMPCodeUnitToCodePoint;\n};\n/*\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\n * Copyright (c) 2018 SIL International\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nvar models;\n(function (models) {\n    /**\n     * @file dummy-model.ts\n     *\n     * Defines the Dummy model, which is used for testing the\n     * prediction API exclusively.\n     */\n    /**\n     * The Dummy Model that returns nonsensical, but predictable results.\n     */\n    var DummyModel = /** @class */ (function () {\n        function DummyModel(options) {\n            options = options || {};\n            // Create a shallow copy of the suggestions;\n            // this class mutates the array.\n            this._futureSuggestions = options.futureSuggestions\n                ? options.futureSuggestions.slice() : [];\n            if (options.punctuation) {\n                this.punctuation = options.punctuation;\n            }\n        }\n        DummyModel.prototype.configure = function (capabilities) {\n            this.configuration = {\n                leftContextCodePoints: capabilities.maxLeftContextCodePoints,\n                rightContextCodePoints: capabilities.maxRightContextCodePoints\n            };\n            return this.configuration;\n        };\n        DummyModel.prototype.predict = function (transform, context, injectedSuggestions) {\n            var makeUniformDistribution = function (suggestions) {\n                var distribution = [];\n                var n = suggestions.length;\n                for (var _i = 0, suggestions_1 = suggestions; _i < suggestions_1.length; _i++) {\n                    var s = suggestions_1[_i];\n                    distribution.push({ sample: s, p: 1 }); // For a dummy model, this is sufficient.  The uniformness is all that matters.\n                }\n                return distribution;\n            };\n            if (injectedSuggestions) {\n                return makeUniformDistribution(injectedSuggestions);\n            }\n            var currentSet = this._futureSuggestions.shift();\n            if (!currentSet) {\n                return [];\n            }\n            else {\n                return makeUniformDistribution(currentSet);\n            }\n        };\n        DummyModel.prototype.wordbreak = function (context) {\n            var words = wordBreakers.default_(context.left);\n            if (words.length > 0) {\n                return words.pop().text;\n            }\n            return '';\n        };\n        return DummyModel;\n    }());\n    models.DummyModel = DummyModel;\n    ;\n})(models || (models = {}));\nvar wordBreakers;\n(function (wordBreakers) {\n    /**\n     * A concrete span class that derives its properties from the result of\n     * RegExp.exec() array.\n     */\n    var RegExpDerivedSpan = /** @class */ (function () {\n        function RegExpDerivedSpan(text, start) {\n            this.text = text;\n            this.start = start;\n        }\n        Object.defineProperty(RegExpDerivedSpan.prototype, \"length\", {\n            get: function () {\n                return this.text.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(RegExpDerivedSpan.prototype, \"end\", {\n            get: function () {\n                return this.start + this.text.length;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return RegExpDerivedSpan;\n    }());\n    /**\n     * Splits ASCII words.\n     *\n     * @param phrase\n     */\n    function ascii(phrase) {\n        var matchWord = /[A-Za-z0-9']+/g;\n        var words = [];\n        var match;\n        while ((match = matchWord.exec(phrase)) !== null) {\n            words.push(new RegExpDerivedSpan(match[0], match.index));\n        }\n        return words;\n    }\n    wordBreakers.ascii = ascii;\n})(wordBreakers || (wordBreakers = {}));\nvar ModelCompositor = /** @class */ (function () {\n    function ModelCompositor(lexicalModel) {\n        this.lexicalModel = lexicalModel;\n        this.punctuation = ModelCompositor.determinePunctuationFromModel(lexicalModel);\n    }\n    ModelCompositor.prototype.isWhitespace = function (transform) {\n        // Matches prefixed text + any instance of a character with Unicode general property Z* or the following: CR, LF, and Tab.\n        var whitespaceRemover = /.*[\\u0009\\u000A\\u000D\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u202f\\u205f\\u3000]/i;\n        // Filter out null-inserts; their high probability can cause issues.\n        if (transform.insert == '') { // Can actually register as 'whitespace'.\n            return false;\n        }\n        var insert = transform.insert;\n        insert = insert.replace(whitespaceRemover, '');\n        return insert == '';\n    };\n    ModelCompositor.prototype.isBackspace = function (transform) {\n        return transform.insert == \"\" && transform.deleteLeft > 0;\n    };\n    ModelCompositor.prototype.predict = function (transformDistribution, context) {\n        var suggestionDistribution = [];\n        var punctuation = this.punctuation;\n        // Assumption:  Duplicated 'displayAs' properties indicate duplicated Suggestions.\n        // When true, we can use an 'associative array' to de-duplicate everything.\n        var suggestionDistribMap = {};\n        if (!(transformDistribution instanceof Array)) {\n            transformDistribution = [{ sample: transformDistribution, p: 1.0 }];\n        }\n        // Find the transform for the actual keypress.\n        var inputTransform = transformDistribution.sort(function (a, b) {\n            return b.p - a.p;\n        })[0].sample;\n        // Only allow new-word suggestions if space was the most likely keypress.\n        var allowSpace = this.isWhitespace(inputTransform);\n        var allowBksp = this.isBackspace(inputTransform);\n        var postContext = models.applyTransform(inputTransform, context);\n        var keepOptionText = this.lexicalModel.wordbreak(postContext);\n        var keepOption = null;\n        var _loop_1 = function (alt) {\n            var transform = alt.sample;\n            // Filter out special keys unless they're expected.\n            if (this_1.isWhitespace(transform) && !allowSpace) {\n                return \"continue\";\n            }\n            else if (this_1.isBackspace(transform) && !allowBksp) {\n                return \"continue\";\n            }\n            var preserveWhitespace = false;\n            if (this_1.isWhitespace(transform)) {\n                // Detect start of new word; prevent whitespace loss here.\n                var postContext_1 = models.applyTransform(transform, context);\n                preserveWhitespace = (this_1.lexicalModel.wordbreak(postContext_1) == '');\n            }\n            var distribution = this_1.lexicalModel.predict(transform, context);\n            distribution.forEach(function (pair) {\n                // Let's not rely on the model to copy transform IDs.\n                // Only bother is there IS an ID to copy.\n                if (transform.id !== undefined) {\n                    pair.sample.transformId = transform.id;\n                }\n                // Prepends the original whitespace, ensuring it is preserved if\n                // the suggestion is accepted.\n                if (preserveWhitespace) {\n                    models.prependTransform(pair.sample.transform, transform);\n                }\n                // The model is trying to add a word; thus, add some custom formatting\n                // to that word.\n                if (pair.sample.transform.insert.length > 0) {\n                    pair.sample.transform.insert += punctuation.insertAfterWord;\n                }\n                // Combine duplicate samples.\n                var displayText = pair.sample.displayAs;\n                if (displayText == keepOptionText) {\n                    keepOption = pair.sample;\n                    // Specifying 'keep' helps uses of the LMLayer find it quickly\n                    // if/when desired.\n                    keepOption.tag = 'keep';\n                }\n                else {\n                    var existingSuggestion = suggestionDistribMap[displayText];\n                    if (existingSuggestion) {\n                        existingSuggestion.p += pair.p * alt.p;\n                    }\n                    else {\n                        var compositedPair = { sample: pair.sample, p: pair.p * alt.p };\n                        suggestionDistribMap[displayText] = compositedPair;\n                    }\n                }\n            });\n        };\n        var this_1 = this;\n        for (var _i = 0, transformDistribution_1 = transformDistribution; _i < transformDistribution_1.length; _i++) {\n            var alt = transformDistribution_1[_i];\n            _loop_1(alt);\n        }\n        // Generate a default 'keep' option if one was not otherwise produced.\n        if (!keepOption && keepOptionText != '') {\n            keepOption = {\n                displayAs: keepOptionText,\n                transformId: inputTransform.id,\n                // Replicate the original transform, modified for appropriate language insertion syntax.\n                transform: {\n                    insert: inputTransform.insert + punctuation.insertAfterWord,\n                    deleteLeft: inputTransform.deleteLeft,\n                    deleteRight: inputTransform.deleteRight,\n                    id: inputTransform.id\n                },\n                tag: 'keep'\n            };\n        }\n        // Add the surrounding quotes to the \"keep\" option's display string:\n        if (keepOption) {\n            var _a = punctuation.quotesForKeepSuggestion, open = _a.open, close_1 = _a.close;\n            // Should we also ensure that we're using the default quote marks first?\n            // Or is it reasonable to say that the \"left\" mark is always the one\n            // called \"open\"?\n            if (!punctuation.isRTL) {\n                keepOption.displayAs = open + keepOption.displayAs + close_1;\n            }\n            else {\n                keepOption.displayAs = close_1 + keepOption.displayAs + open;\n            }\n        }\n        // Now that we've calculated a unique set of probability masses, time to make them into a proper\n        // distribution and prep for return.\n        for (var key in suggestionDistribMap) {\n            var pair = suggestionDistribMap[key];\n            suggestionDistribution.push(pair);\n        }\n        suggestionDistribution = suggestionDistribution.sort(function (a, b) {\n            return b.p - a.p; // Use descending order - we want the largest probabilty suggestions first!\n        });\n        var suggestions = suggestionDistribution.splice(0, ModelCompositor.MAX_SUGGESTIONS).map(function (value) {\n            return value.sample;\n        });\n        if (keepOption) {\n            suggestions = [keepOption].concat(suggestions);\n        }\n        return suggestions;\n    };\n    /**\n     * Returns the punctuation used for this model, filling out unspecified fields\n     */\n    ModelCompositor.determinePunctuationFromModel = function (model) {\n        var defaults = DEFAULT_PUNCTUATION;\n        // Use the defaults of the model does not provide any punctuation at all.\n        if (!model.punctuation)\n            return defaults;\n        var specifiedPunctuation = model.punctuation;\n        var insertAfterWord = specifiedPunctuation.insertAfterWord;\n        if (insertAfterWord !== '' && !insertAfterWord) {\n            insertAfterWord = defaults.insertAfterWord;\n        }\n        var quotesForKeepSuggestion = specifiedPunctuation.quotesForKeepSuggestion;\n        if (!quotesForKeepSuggestion) {\n            quotesForKeepSuggestion = defaults.quotesForKeepSuggestion;\n        }\n        var isRTL = specifiedPunctuation.isRTL;\n        // Default:  false / undefined, so no need to directly specify it.\n        return {\n            insertAfterWord: insertAfterWord, quotesForKeepSuggestion: quotesForKeepSuggestion, isRTL: isRTL\n        };\n    };\n    ModelCompositor.MAX_SUGGESTIONS = 12;\n    return ModelCompositor;\n}());\n/**\n * The default punctuation and spacing produced by the model.\n */\nvar DEFAULT_PUNCTUATION = {\n    quotesForKeepSuggestion: { open: \"\\u201C\", close: \"\\u201D\" },\n    insertAfterWord: \" \",\n};\n/*\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\n * Copyright (c) 2018 SIL International\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\n/**\n * @file index.ts\n *\n * The main LMLayerWorker class, the top-level class within the Web Worker.\n * The LMLayerWorker handles the keyboard/worker communication\n * protocol, delegating prediction requests to the language\n * model implementations.\n */\n/// <reference path=\"../message.d.ts\" />\n/// <reference path=\"../node_modules/@keymanapp/keyboard-processor/src/text/kmwstring.ts\" />\n/// <reference path=\"models/dummy-model.ts\" />\n/// <reference path=\"word_breaking/ascii-word-breaker.ts\" />\n/// <reference path=\"./model-compositor.ts\" />\n/**\n * Encapsulates all the state required for the LMLayer's worker thread.\n *\n * Implements the state pattern. There are three states:\n *\n *  - `unconfigured`  (initial state before configuration)\n *  - `modelless`     (state without model loaded)\n *  - `ready`         (state with model loaded, accepts prediction requests)\n *\n * Transitions are initiated by valid messages. Invalid\n * messages are errors, and do not lead to transitions.\n *\n *          +-------------+    load    +---------+\n *   config |             |----------->|         |\n *  +------->  modelless  +            +  ready  +---+\n *          |             |<-----------|         |   |\n *          +-------------+   unload   +----^----+   | predict\n *                                          |        |\n *                                          +--------+\n *\n * The model and the configuration are ONLY relevant in the `ready` state;\n * as such, they are NOT direct properties of the LMLayerWorker.\n */\nvar LMLayerWorker = /** @class */ (function () {\n    function LMLayerWorker(options) {\n        if (options === void 0) { options = {\n            importScripts: null,\n            postMessage: null\n        }; }\n        this._postMessage = options.postMessage || postMessage;\n        this._importScripts = options.importScripts || importScripts;\n        this.setupConfigState();\n    }\n    LMLayerWorker.prototype.error = function (message, error) {\n        // error isn't a fan of being cloned across the worker boundary.\n        this.cast('error', {\n            log: message,\n            error: (error && error.stack) ? error.stack : undefined\n        });\n    };\n    /**\n     * A function that can be set as self.onmessage (the Worker\n     * message handler).\n     * NOTE! You must bind it to a specific instance, e.g.:\n     *\n     *   // Do this!\n     *   self.onmessage = worker.onMessage.bind(worker);\n     *\n     * Incorrect:\n     *\n     *   // Don't do this!\n     *   self.onmessage = worker.onMessage;\n     *\n     * See: .install();\n     */\n    LMLayerWorker.prototype.onMessage = function (event) {\n        var message = event.data.message;\n        // Ensure the message is tagged with a valid message tag.\n        if (!message) {\n            throw new Error(\"Missing required 'message' property: \" + event.data);\n        }\n        // If last load was for this exact model file, squash the message.\n        // (Though not if we've had an unload since.)\n        var im = event.data;\n        if (im.message == 'load') {\n            var data = im;\n            if (data.model == this._currentModelSource) {\n                // Some JS implementations don't allow web workers access to the console.\n                if (typeof console !== 'undefined') {\n                    console.warn(\"Duplicate model load message detected - squashing!\");\n                }\n                return;\n            }\n            else {\n                this._currentModelSource = data.model;\n            }\n        }\n        else if (im.message == 'unload') {\n            this._currentModelSource = null;\n        }\n        // We got a message! Delegate to the current state.\n        this.state.handleMessage(im);\n    };\n    /**\n     * Sends back a message structured according to the protocol.\n     * @param message A message type.\n     * @param payload The message's payload. Can have any properties, except 'message'.\n     */\n    LMLayerWorker.prototype.cast = function (message, payload) {\n        // Chrome raises \"TypeError: invalid invocation\" if postMessage is called\n        // with any non-default value for `this`, i.e., this won't work:\n        //\n        //  this._postMessage({ foo: 'bar' });\n        //\n        // Yank it postMessage() off of `this` so that it's called on the\n        // \"global\" context, and everything works again.\n        var postMessage = this._postMessage;\n        postMessage(__assign({ message: message }, payload));\n    };\n    /**\n     * Loads a model by executing the given source code, and\n     * passing in the appropriate configuration.\n     *\n     * @param desc         Type of the model to instantiate and its parameters.\n     * @param capabilities Capabilities on offer from the keyboard.\n     */\n    LMLayerWorker.prototype.loadModel = function (model) {\n        // TODO:  pass _platformConfig to model so that it can self-configure to the platform,\n        // returning a Configuration.\n        /* Note that this function is typically called from within an `importScripts` call.\n         * For meaningful error messages to be successfully logged, we must catch what we can here\n         * and pass a message to outside the worker - otherwise a generic \"Script error\" occurs.\n         */\n        try {\n            var configuration = model.configure(this._platformCapabilities);\n            // Handle deprecations.\n            if (!configuration.leftContextCodePoints) {\n                configuration.leftContextCodePoints = configuration.leftContextCodeUnits;\n            }\n            if (!configuration.rightContextCodePoints) {\n                configuration.rightContextCodePoints = configuration.rightContextCodeUnits;\n            }\n            // Set reasonable defaults for the configuration.\n            if (!configuration.leftContextCodePoints) {\n                configuration.leftContextCodePoints = this._platformCapabilities.maxLeftContextCodePoints;\n            }\n            if (!configuration.rightContextCodePoints) {\n                configuration.rightContextCodePoints = this._platformCapabilities.maxRightContextCodePoints || 0;\n            }\n            this.transitionToReadyState(model);\n            this.cast('ready', { configuration: configuration });\n        }\n        catch (err) {\n            this.error(\"loadModel failed!\", err);\n        }\n    };\n    LMLayerWorker.prototype.loadModelFile = function (url) {\n        // The self/global WebWorker method, allowing us to directly import another script file into WebWorker scope.\n        // If built correctly, the model's script file will auto-register the model with loadModel() above.\n        try {\n            this._importScripts(url);\n        }\n        catch (err) {\n            this.error(\"Error occurred when attempting to load dictionary\", err);\n        }\n    };\n    LMLayerWorker.prototype.unloadModel = function () {\n        // Right now, this seems sufficient to clear out the old model.\n        // The only existing reference to a loaded model is held by \n        // transitionToReadyState's `handleMessage` closure. (The `model` var)\n        this.transitionToLoadingState();\n    };\n    /**\n     * Sets the initial state, i.e., `unconfigured`.\n     * This state only handles `config` messages, and will\n     * transition to the `modelless` state once it receives\n     * the config data from the host platform.\n     */\n    LMLayerWorker.prototype.setupConfigState = function () {\n        var _this = this;\n        this.state = {\n            name: 'unconfigured',\n            handleMessage: function (payload) {\n                // ... that message must have been 'config'!\n                if (payload.message !== 'config') {\n                    throw new Error(\"invalid message; expected 'config' but got \" + payload.message);\n                }\n                _this._platformCapabilities = payload.capabilities;\n                _this.transitionToLoadingState();\n            }\n        };\n    };\n    /**\n     * Sets the model-loading state, i.e., `modelless`.\n     * This state only handles `load` messages, and will\n     * transition to the `ready` state once it receives a model\n     * description and capabilities.\n     */\n    LMLayerWorker.prototype.transitionToLoadingState = function () {\n        var _this = this;\n        this.state = {\n            name: 'modelless',\n            handleMessage: function (payload) {\n                // ...that message must have been 'load'!\n                if (payload.message !== 'load') {\n                    throw new Error(\"invalid message; expected 'load' but got \" + payload.message);\n                }\n                // TODO: validate configuration?\n                _this.loadModelFile(payload.model);\n            }\n        };\n    };\n    /**\n     * Sets the state to `ready`. This requires a\n     * fully-instantiated model. The `ready` state only responds\n     * to `predict` message, and is an accepting state.\n     *\n     * @param model The loaded language model.\n     */\n    LMLayerWorker.prototype.transitionToReadyState = function (model) {\n        var _this = this;\n        this.state = {\n            name: 'ready',\n            handleMessage: function (payload) {\n                switch (payload.message) {\n                    case 'predict':\n                        var transform = payload.transform, context = payload.context;\n                        var compositor = new ModelCompositor(model); // Yeah, should probably use a persistent one eventually.\n                        var suggestions = compositor.predict(transform, context);\n                        // Now that the suggestions are ready, send them out!\n                        _this.cast('suggestions', {\n                            token: payload.token,\n                            suggestions: suggestions\n                        });\n                        break;\n                    case 'wordbreak':\n                        var brokenWord = model.wordbreak(payload.context);\n                        _this.cast('currentword', {\n                            token: payload.token,\n                            word: brokenWord\n                        });\n                        break;\n                    case 'unload':\n                        _this.unloadModel();\n                        break;\n                    default:\n                        throw new Error(\"invalid message; expected one of {'predict', 'unload'} but got \" + payload.message);\n                }\n            }\n        };\n    };\n    /**\n     * Creates a new instance of the LMLayerWorker, and installs all its\n     * functions within the provided Worker global scope.\n     *\n     * In production, this is called within the Worker's scope as:\n     *\n     *    LMLayerWorker.install(self);\n     *\n     * ...and this will setup onmessage and postMessage() appropriately.\n     *\n     * During testing, this method is useful to mock an entire global scope,\n     *\n     *    var fakeScope = { postMessage: ... };\n     *    LMLayerWorker.install(fakeScope);\n     *    // now we can spy on methods in fakeScope!\n     *\n     * @param scope A global scope to install upon.\n     */\n    LMLayerWorker.install = function (scope) {\n        var worker = new LMLayerWorker({ postMessage: scope.postMessage, importScripts: scope.importScripts.bind(scope) });\n        scope.onmessage = worker.onMessage.bind(worker);\n        // Ensures that the worker instance is accessible for loaded model scripts.\n        // Assists unit-testing.\n        scope['LMLayerWorker'] = worker;\n        scope['models'] = models;\n        scope['wordBreakers'] = wordBreakers;\n        return worker;\n    };\n    return LMLayerWorker;\n}());\n// Let LMLayerWorker be available both in the browser and in Node.\nif (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = LMLayerWorker;\n    module.exports['models'] = models;\n    module.exports['wordBreakers'] = wordBreakers;\n    /// XXX: export the ModelCompositor for testing.\n    module.exports['ModelCompositor'] = ModelCompositor;\n}\nelse if (typeof self !== 'undefined' && 'postMessage' in self) {\n    // Automatically install if we're in a Web Worker.\n    LMLayerWorker.install(self); // really, 'as typeof globalThis', but we're currently getting TS errors from use of that.\n}\nelse {\n    //@ts-ignore\n    window.LMLayerWorker = LMLayerWorker;\n}\n/*\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\n * Copyright (c) 2018 SIL International\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nvar models;\n(function (models) {\n    function applyTransform(transform, context) {\n        // First, get the current context\n        var fullLeftContext = context.left || '';\n        var lLen = fullLeftContext.length;\n        var lDel = lLen < transform.deleteLeft ? lLen : transform.deleteLeft;\n        var leftContext = fullLeftContext.substring(0, lLen - lDel) + (transform.insert || '');\n        var fullRightContext = context.right || '';\n        var rLen = fullRightContext.length;\n        var rDel = rLen < transform.deleteRight ? rLen : transform.deleteRight;\n        var rightContext = fullRightContext.substring(rDel);\n        return {\n            left: leftContext,\n            right: rightContext,\n            startOfBuffer: context.startOfBuffer,\n            endOfBuffer: context.endOfBuffer\n        };\n    }\n    models.applyTransform = applyTransform;\n    /**\n     *\n     * @param transform Merges one transform into another, mutating the first parameter to\n     *                  include the effects of the second.\n     * @param prefix\n     */\n    function prependTransform(transform, prefix) {\n        transform.insert = prefix.insert + transform.insert;\n        transform.deleteLeft += prefix.deleteLeft;\n        if (prefix.deleteRight) {\n            transform.deleteRight = (transform.deleteRight || 0) + prefix.deleteRight;\n        }\n    }\n    models.prependTransform = prependTransform;\n})(models || (models = {}));\nvar wordBreakers;\n(function (wordBreakers) {\n    /**\n     * A **VERY** dumb word breaker that simply splits at words. Do not use this\n     * word breaker!\n     *\n     * @param phrase The phrase in which to break words.\n     * @deprecated Use a word breaker tailored to your language instead!\n     */\n    function placeholder(phrase) {\n        var nextStart = 0;\n        return phrase.split(/\\s+/).map(function (utterance) {\n            // XXX: The indices are NOT accurate to the original phrase!\n            var span = {\n                start: nextStart,\n                end: nextStart + utterance.length,\n                text: utterance,\n                length: utterance.length\n            };\n            nextStart = span.end;\n            return span;\n        });\n    }\n    wordBreakers.placeholder = placeholder;\n})(wordBreakers || (wordBreakers = {}));\n/*\n * Copyright (c) 2019 National Research Council Canada (author: Eddie A. Santos)\n * Copyright (c) 2019 SIL International\n * Copyright (c) 2015–2017 Conrad Irwin\n * Copyright (c) 2011–2015 Marc Campbell\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n/// <reference path=\"../word_breaking/placeholder-word-breaker.ts\" />\n/// <reference path=\"common.ts\" />\n/**\n * @file trie-model.ts\n *\n * Defines a simple word list (unigram) model.\n */\nvar models;\n(function (models) {\n    /** Upper bound on the amount of suggestions to generate. */\n    var MAX_SUGGESTIONS = 12;\n    /**\n     * @class TrieModel\n     *\n     * Defines a trie-backed word list model, or the unigram model.\n     * Unigram models throw away all preceding words, and search\n     * for the next word exclusively. As such, they can perform simple\n     * prefix searches within words, however they are not very good\n     * at predicting the next word.\n     */\n    var TrieModel = /** @class */ (function () {\n        function TrieModel(trieData, options) {\n            if (options === void 0) { options = {}; }\n            this._trie = new Trie(trieData['root'], trieData['totalWeight'], options.searchTermToKey || defaultWordform2Key);\n            this.breakWords = options.wordBreaker || wordBreakers['default'];\n            this.punctuation = options.punctuation;\n        }\n        TrieModel.prototype.configure = function (capabilities) {\n            return this.configuration = {\n                leftContextCodePoints: capabilities.maxLeftContextCodePoints,\n                rightContextCodePoints: capabilities.maxRightContextCodePoints\n            };\n        };\n        TrieModel.prototype.predict = function (transform, context) {\n            // Special-case the empty buffer/transform: return the top suggestions.\n            if (!transform.insert && context.startOfBuffer && context.endOfBuffer) {\n                return makeDistribution(this._trie.firstN(MAX_SUGGESTIONS).map(function (_a) {\n                    var text = _a.text, p = _a.p;\n                    return ({\n                        transform: {\n                            insert: text,\n                            deleteLeft: 0\n                        },\n                        displayAs: text,\n                        p: p\n                    });\n                }));\n            }\n            // Compute the results of the keystroke:\n            var newContext = models.applyTransform(transform, context);\n            // Computes the different in word length after applying the transform above.\n            var leftDelOffset = transform.deleteLeft - transform.insert.kmwLength();\n            // All text to the left of the cursor INCLUDING anything that has\n            // just been typed.\n            var prefix = this.getLastWord(newContext.left);\n            // Return suggestions from the trie.\n            return makeDistribution(this._trie.lookup(prefix).map(function (_a) {\n                var text = _a.text, p = _a.p;\n                return ({\n                    transform: {\n                        // Insert the suggestion from the Trie, verbatim\n                        insert: text,\n                        // Delete whatever the prefix that the user wrote.\n                        // Note: a separate capitalization/orthography engine can take this\n                        // result and transform it as needed.\n                        deleteLeft: leftDelOffset + prefix.kmwLength(),\n                    },\n                    displayAs: text,\n                    p: p\n                });\n            }));\n            /* Helper */\n            function makeDistribution(suggestions) {\n                var distribution = [];\n                for (var _i = 0, suggestions_2 = suggestions; _i < suggestions_2.length; _i++) {\n                    var s = suggestions_2[_i];\n                    distribution.push({ sample: s, p: s.p });\n                }\n                return distribution;\n            }\n        };\n        /**\n         * Get the last word of the phrase, or nothing.\n         * @param fullLeftContext the entire left context of the string.\n         */\n        TrieModel.prototype.getLastWord = function (fullLeftContext) {\n            var words = this.breakWords(fullLeftContext);\n            if (words.length > 0) {\n                return words.pop().text;\n            }\n            return '';\n        };\n        TrieModel.prototype.wordbreak = function (context) {\n            return this.getLastWord(context.left);\n        };\n        return TrieModel;\n    }());\n    models.TrieModel = TrieModel;\n    ;\n    /**\n     * Wrapper class for the trie and its nodes.\n     */\n    var Trie = /** @class */ (function () {\n        function Trie(root, totalWeight, wordform2key) {\n            this.root = root;\n            this.toKey = wordform2key;\n            this.totalWeight = totalWeight;\n        }\n        /**\n         * Lookups an arbitrary prefix (a query) in the trie. Returns the top 3\n         * results in sorted order.\n         *\n         * @param prefix\n         */\n        Trie.prototype.lookup = function (prefix) {\n            var searchKey = this.toKey(prefix);\n            var lowestCommonNode = findPrefix(this.root, searchKey);\n            if (lowestCommonNode === null) {\n                return [];\n            }\n            return getSortedResults(lowestCommonNode, searchKey, this.totalWeight);\n        };\n        /**\n         * Returns the top N suggestions from the trie.\n         * @param n How many suggestions, maximum, to return.\n         */\n        Trie.prototype.firstN = function (n) {\n            return getSortedResults(this.root, '', this.totalWeight, n);\n        };\n        return Trie;\n    }());\n    /**\n     * Finds the deepest descendent in the trie with the given prefix key.\n     *\n     * This means that a search in the trie for a given prefix has a best-case\n     * complexity of O(m) where m is the length of the prefix.\n     *\n     * @param key The prefix to search for.\n     * @param index The index in the prefix. Initially 0.\n     */\n    function findPrefix(node, key, index) {\n        if (index === void 0) { index = 0; }\n        // An important note - the Trie itself is built on a per-JS-character basis,\n        // not on a UTF-8 character-code basis.\n        if (node.type === 'leaf' || index === key.length) {\n            return node;\n        }\n        // So, for SMP models, we need to match each char of the supplementary pair\n        // in sequence.  Each has its own node in the Trie.\n        var char = key[index];\n        if (node.children[char]) {\n            return findPrefix(node.children[char], key, index + 1);\n        }\n        return null;\n    }\n    /**\n     * Returns all entries matching the given prefix, in descending order of\n     * weight.\n     *\n     * @param prefix  the prefix to match.\n     * @param results the current results\n     * @param queue\n     */\n    function getSortedResults(node, prefix, N, limit) {\n        if (limit === void 0) { limit = MAX_SUGGESTIONS; }\n        var queue = new PriorityQueue();\n        var results = [];\n        if (node.type === 'leaf') {\n            // Assuming the values are sorted, we can just add all of the values in the\n            // leaf, until we reach the limit.\n            for (var _i = 0, _a = node.entries; _i < _a.length; _i++) {\n                var item = _a[_i];\n                if (item.key.startsWith(prefix)) {\n                    var content = item.content, weight = item.weight;\n                    results.push({\n                        text: content,\n                        p: weight / N\n                    });\n                    if (results.length >= limit) {\n                        return results;\n                    }\n                }\n            }\n        }\n        else {\n            queue.enqueue(node);\n            var next = void 0;\n            var _loop_2 = function () {\n                if (isNode(next)) {\n                    // When a node is next up in the queue, that means that next least\n                    // likely suggestion is among its decsendants.\n                    // So we search all of its descendants!\n                    if (next.type === 'leaf') {\n                        queue.enqueueAll(next.entries);\n                    }\n                    else {\n                        // XXX: alias `next` so that TypeScript can be SURE that internal is\n                        // in fact an internal node. Because of the callback binding to the\n                        // original definition of node (i.e., a Node | Entry), this will not\n                        // type-check otherwise.\n                        var internal_1 = next;\n                        queue.enqueueAll(next.values.map(function (char) {\n                            return internal_1.children[char];\n                        }));\n                    }\n                }\n                else {\n                    // When an entry is up next in the queue, we just add its contents to\n                    // the results!\n                    results.push({\n                        text: next.content,\n                        p: next.weight / N\n                    });\n                    if (results.length >= limit) {\n                        return { value: results };\n                    }\n                }\n            };\n            while (next = queue.pop()) {\n                var state_1 = _loop_2();\n                if (typeof state_1 === \"object\")\n                    return state_1.value;\n            }\n        }\n        return results;\n    }\n    /** TypeScript type guard that returns whether the thing is a Node. */\n    function isNode(x) {\n        return 'type' in x;\n    }\n    /**\n     * A priority queue that always pops the highest weighted item.\n     */\n    var PriorityQueue = /** @class */ (function () {\n        function PriorityQueue() {\n            // TODO: This probable should use a max-heap implementation, but I'm just doing\n            // a O(n log n) sort of the array when an item is popped.\n            this._storage = [];\n        }\n        // TODO: this should have a limit, and ensure small values are not added.\n        /**\n         * Enqueues a single element to the priority queue.\n         */\n        PriorityQueue.prototype.enqueue = function (element) {\n            this._storage.push(element);\n        };\n        /**\n         * Adds an array of weighted elements to the priority queue.\n         */\n        PriorityQueue.prototype.enqueueAll = function (elements) {\n            this._storage = this._storage.concat(elements);\n        };\n        /**\n         * Pops the highest weighted item in the queue.\n         */\n        PriorityQueue.prototype.pop = function () {\n            // Lazily sort only when NEEDED.\n            // Sort in descending order of weight, so heaviest weight will be popped\n            // first.\n            this._storage.sort(function (a, b) { return b.weight - a.weight; });\n            return this._storage.shift();\n        };\n        return PriorityQueue;\n    }());\n    /**\n     * Converts word forms in into an indexable form. It does this by converting\n     * the string to uppercase and trying to remove diacritical marks.\n     *\n     * This is a very naïve implementation, that I've only though to work on\n     * languages that use the Latin script. Even then, some Latin-based\n     * orthographies use code points that, under NFD normalization, do NOT\n     * decompose into an ASCII letter and a combining diacritical mark (e.g.,\n     * SENĆOŦEN).\n     *\n     * Use this only in early iterations of the model. For a production lexical\n     * model, you SHOULD write/generate your own key function, tailored to your\n     * language.\n     */\n    function defaultWordform2Key(wordform) {\n        return wordform\n            // remove all combining diacritics (if input is in NFD)\n            .replace(/[\\u0300-\\u036f]/g, '')\n            // remove all composed diacritics (if input is in NFC) LATIN-ONLY!\n            .replace(/[\\u00C0-\\u212A]/g, function (c) {\n            if (c in PARTIAL_NFD_LOOKUP) {\n                return PARTIAL_NFD_LOOKUP[c];\n            }\n            return c;\n        })\n            .toLowerCase();\n    }\n    /**\n     * String.prototype.normalize() is not available on all platforms (*cough* IE\n     * 11 *cough cough*). We want to use NFD to take off diacritical marks from\n     * characters so that they are not used in key searches.\n     *\n     * This table is of all characters in the range of U+0100 to U+2200 that\n     * have a canonical decomposition in NFD form. For some characters, this\n     * translates them into their canonical characters (e.g., K -> K). For\n     * characters with combining diacritical marks, this leaves behind the base\n     * character, removing its diacritics (e.g., É -> E).\n     */\n    var PARTIAL_NFD_LOOKUP = { \"À\": \"A\", \"Á\": \"A\", \"Â\": \"A\", \"Ã\": \"A\", \"Ä\": \"A\", \"Å\": \"A\", \"Ç\": \"C\", \"È\": \"E\", \"É\": \"E\", \"Ê\": \"E\", \"Ë\": \"E\", \"Ì\": \"I\", \"Í\": \"I\", \"Î\": \"I\", \"Ï\": \"I\", \"Ñ\": \"N\", \"Ò\": \"O\", \"Ó\": \"O\", \"Ô\": \"O\", \"Õ\": \"O\", \"Ö\": \"O\", \"Ù\": \"U\", \"Ú\": \"U\", \"Û\": \"U\", \"Ü\": \"U\", \"Ý\": \"Y\", \"à\": \"a\", \"á\": \"a\", \"â\": \"a\", \"ã\": \"a\", \"ä\": \"a\", \"å\": \"a\", \"ç\": \"c\", \"è\": \"e\", \"é\": \"e\", \"ê\": \"e\", \"ë\": \"e\", \"ì\": \"i\", \"í\": \"i\", \"î\": \"i\", \"ï\": \"i\", \"ñ\": \"n\", \"ò\": \"o\", \"ó\": \"o\", \"ô\": \"o\", \"õ\": \"o\", \"ö\": \"o\", \"ù\": \"u\", \"ú\": \"u\", \"û\": \"u\", \"ü\": \"u\", \"ý\": \"y\", \"ÿ\": \"y\", \"Ā\": \"A\", \"ā\": \"a\", \"Ă\": \"A\", \"ă\": \"a\", \"Ą\": \"A\", \"ą\": \"a\", \"Ć\": \"C\", \"ć\": \"c\", \"Ĉ\": \"C\", \"ĉ\": \"c\", \"Ċ\": \"C\", \"ċ\": \"c\", \"Č\": \"C\", \"č\": \"c\", \"Ď\": \"D\", \"ď\": \"d\", \"Ē\": \"E\", \"ē\": \"e\", \"Ĕ\": \"E\", \"ĕ\": \"e\", \"Ė\": \"E\", \"ė\": \"e\", \"Ę\": \"E\", \"ę\": \"e\", \"Ě\": \"E\", \"ě\": \"e\", \"Ĝ\": \"G\", \"ĝ\": \"g\", \"Ğ\": \"G\", \"ğ\": \"g\", \"Ġ\": \"G\", \"ġ\": \"g\", \"Ģ\": \"G\", \"ģ\": \"g\", \"Ĥ\": \"H\", \"ĥ\": \"h\", \"Ĩ\": \"I\", \"ĩ\": \"i\", \"Ī\": \"I\", \"ī\": \"i\", \"Ĭ\": \"I\", \"ĭ\": \"i\", \"Į\": \"I\", \"į\": \"i\", \"İ\": \"I\", \"Ĵ\": \"J\", \"ĵ\": \"j\", \"Ķ\": \"K\", \"ķ\": \"k\", \"Ĺ\": \"L\", \"ĺ\": \"l\", \"Ļ\": \"L\", \"ļ\": \"l\", \"Ľ\": \"L\", \"ľ\": \"l\", \"Ń\": \"N\", \"ń\": \"n\", \"Ņ\": \"N\", \"ņ\": \"n\", \"Ň\": \"N\", \"ň\": \"n\", \"Ō\": \"O\", \"ō\": \"o\", \"Ŏ\": \"O\", \"ŏ\": \"o\", \"Ő\": \"O\", \"ő\": \"o\", \"Ŕ\": \"R\", \"ŕ\": \"r\", \"Ŗ\": \"R\", \"ŗ\": \"r\", \"Ř\": \"R\", \"ř\": \"r\", \"Ś\": \"S\", \"ś\": \"s\", \"Ŝ\": \"S\", \"ŝ\": \"s\", \"Ş\": \"S\", \"ş\": \"s\", \"Š\": \"S\", \"š\": \"s\", \"Ţ\": \"T\", \"ţ\": \"t\", \"Ť\": \"T\", \"ť\": \"t\", \"Ũ\": \"U\", \"ũ\": \"u\", \"Ū\": \"U\", \"ū\": \"u\", \"Ŭ\": \"U\", \"ŭ\": \"u\", \"Ů\": \"U\", \"ů\": \"u\", \"Ű\": \"U\", \"ű\": \"u\", \"Ų\": \"U\", \"ų\": \"u\", \"Ŵ\": \"W\", \"ŵ\": \"w\", \"Ŷ\": \"Y\", \"ŷ\": \"y\", \"Ÿ\": \"Y\", \"Ź\": \"Z\", \"ź\": \"z\", \"Ż\": \"Z\", \"ż\": \"z\", \"Ž\": \"Z\", \"ž\": \"z\", \"Ơ\": \"O\", \"ơ\": \"o\", \"Ư\": \"U\", \"ư\": \"u\", \"Ǎ\": \"A\", \"ǎ\": \"a\", \"Ǐ\": \"I\", \"ǐ\": \"i\", \"Ǒ\": \"O\", \"ǒ\": \"o\", \"Ǔ\": \"U\", \"ǔ\": \"u\", \"Ǖ\": \"U\", \"ǖ\": \"u\", \"Ǘ\": \"U\", \"ǘ\": \"u\", \"Ǚ\": \"U\", \"ǚ\": \"u\", \"Ǜ\": \"U\", \"ǜ\": \"u\", \"Ǟ\": \"A\", \"ǟ\": \"a\", \"Ǡ\": \"A\", \"ǡ\": \"a\", \"Ǣ\": \"Æ\", \"ǣ\": \"æ\", \"Ǧ\": \"G\", \"ǧ\": \"g\", \"Ǩ\": \"K\", \"ǩ\": \"k\", \"Ǫ\": \"O\", \"ǫ\": \"o\", \"Ǭ\": \"O\", \"ǭ\": \"o\", \"Ǯ\": \"Ʒ\", \"ǯ\": \"ʒ\", \"ǰ\": \"j\", \"Ǵ\": \"G\", \"ǵ\": \"g\", \"Ǹ\": \"N\", \"ǹ\": \"n\", \"Ǻ\": \"A\", \"ǻ\": \"a\", \"Ǽ\": \"Æ\", \"ǽ\": \"æ\", \"Ǿ\": \"Ø\", \"ǿ\": \"ø\", \"Ȁ\": \"A\", \"ȁ\": \"a\", \"Ȃ\": \"A\", \"ȃ\": \"a\", \"Ȅ\": \"E\", \"ȅ\": \"e\", \"Ȇ\": \"E\", \"ȇ\": \"e\", \"Ȉ\": \"I\", \"ȉ\": \"i\", \"Ȋ\": \"I\", \"ȋ\": \"i\", \"Ȍ\": \"O\", \"ȍ\": \"o\", \"Ȏ\": \"O\", \"ȏ\": \"o\", \"Ȑ\": \"R\", \"ȑ\": \"r\", \"Ȓ\": \"R\", \"ȓ\": \"r\", \"Ȕ\": \"U\", \"ȕ\": \"u\", \"Ȗ\": \"U\", \"ȗ\": \"u\", \"Ș\": \"S\", \"ș\": \"s\", \"Ț\": \"T\", \"ț\": \"t\", \"Ȟ\": \"H\", \"ȟ\": \"h\", \"Ȧ\": \"A\", \"ȧ\": \"a\", \"Ȩ\": \"E\", \"ȩ\": \"e\", \"Ȫ\": \"O\", \"ȫ\": \"o\", \"Ȭ\": \"O\", \"ȭ\": \"o\", \"Ȯ\": \"O\", \"ȯ\": \"o\", \"Ȱ\": \"O\", \"ȱ\": \"o\", \"Ȳ\": \"Y\", \"ȳ\": \"y\", \"̀\": \"̀\", \"́\": \"́\", \"̓\": \"̓\", \"̈́\": \"̈\", \"ʹ\": \"ʹ\", \";\": \";\", \"΅\": \"¨\", \"Ά\": \"Α\", \"·\": \"·\", \"Έ\": \"Ε\", \"Ή\": \"Η\", \"Ί\": \"Ι\", \"Ό\": \"Ο\", \"Ύ\": \"Υ\", \"Ώ\": \"Ω\", \"ΐ\": \"ι\", \"Ϊ\": \"Ι\", \"Ϋ\": \"Υ\", \"ά\": \"α\", \"έ\": \"ε\", \"ή\": \"η\", \"ί\": \"ι\", \"ΰ\": \"υ\", \"ϊ\": \"ι\", \"ϋ\": \"υ\", \"ό\": \"ο\", \"ύ\": \"υ\", \"ώ\": \"ω\", \"ϓ\": \"ϒ\", \"ϔ\": \"ϒ\", \"Ѐ\": \"Е\", \"Ё\": \"Е\", \"Ѓ\": \"Г\", \"Ї\": \"І\", \"Ќ\": \"К\", \"Ѝ\": \"И\", \"Ў\": \"У\", \"Й\": \"И\", \"й\": \"и\", \"ѐ\": \"е\", \"ё\": \"е\", \"ѓ\": \"г\", \"ї\": \"і\", \"ќ\": \"к\", \"ѝ\": \"и\", \"ў\": \"у\", \"Ѷ\": \"Ѵ\", \"ѷ\": \"ѵ\", \"Ӂ\": \"Ж\", \"ӂ\": \"ж\", \"Ӑ\": \"А\", \"ӑ\": \"а\", \"Ӓ\": \"А\", \"ӓ\": \"а\", \"Ӗ\": \"Е\", \"ӗ\": \"е\", \"Ӛ\": \"Ә\", \"ӛ\": \"ә\", \"Ӝ\": \"Ж\", \"ӝ\": \"ж\", \"Ӟ\": \"З\", \"ӟ\": \"з\", \"Ӣ\": \"И\", \"ӣ\": \"и\", \"Ӥ\": \"И\", \"ӥ\": \"и\", \"Ӧ\": \"О\", \"ӧ\": \"о\", \"Ӫ\": \"Ө\", \"ӫ\": \"ө\", \"Ӭ\": \"Э\", \"ӭ\": \"э\", \"Ӯ\": \"У\", \"ӯ\": \"у\", \"Ӱ\": \"У\", \"ӱ\": \"у\", \"Ӳ\": \"У\", \"ӳ\": \"у\", \"Ӵ\": \"Ч\", \"ӵ\": \"ч\", \"Ӹ\": \"Ы\", \"ӹ\": \"ы\", \"Ḁ\": \"A\", \"ḁ\": \"a\", \"Ḃ\": \"B\", \"ḃ\": \"b\", \"Ḅ\": \"B\", \"ḅ\": \"b\", \"Ḇ\": \"B\", \"ḇ\": \"b\", \"Ḉ\": \"C\", \"ḉ\": \"c\", \"Ḋ\": \"D\", \"ḋ\": \"d\", \"Ḍ\": \"D\", \"ḍ\": \"d\", \"Ḏ\": \"D\", \"ḏ\": \"d\", \"Ḑ\": \"D\", \"ḑ\": \"d\", \"Ḓ\": \"D\", \"ḓ\": \"d\", \"Ḕ\": \"E\", \"ḕ\": \"e\", \"Ḗ\": \"E\", \"ḗ\": \"e\", \"Ḙ\": \"E\", \"ḙ\": \"e\", \"Ḛ\": \"E\", \"ḛ\": \"e\", \"Ḝ\": \"E\", \"ḝ\": \"e\", \"Ḟ\": \"F\", \"ḟ\": \"f\", \"Ḡ\": \"G\", \"ḡ\": \"g\", \"Ḣ\": \"H\", \"ḣ\": \"h\", \"Ḥ\": \"H\", \"ḥ\": \"h\", \"Ḧ\": \"H\", \"ḧ\": \"h\", \"Ḩ\": \"H\", \"ḩ\": \"h\", \"Ḫ\": \"H\", \"ḫ\": \"h\", \"Ḭ\": \"I\", \"ḭ\": \"i\", \"Ḯ\": \"I\", \"ḯ\": \"i\", \"Ḱ\": \"K\", \"ḱ\": \"k\", \"Ḳ\": \"K\", \"ḳ\": \"k\", \"Ḵ\": \"K\", \"ḵ\": \"k\", \"Ḷ\": \"L\", \"ḷ\": \"l\", \"Ḹ\": \"L\", \"ḹ\": \"l\", \"Ḻ\": \"L\", \"ḻ\": \"l\", \"Ḽ\": \"L\", \"ḽ\": \"l\", \"Ḿ\": \"M\", \"ḿ\": \"m\", \"Ṁ\": \"M\", \"ṁ\": \"m\", \"Ṃ\": \"M\", \"ṃ\": \"m\", \"Ṅ\": \"N\", \"ṅ\": \"n\", \"Ṇ\": \"N\", \"ṇ\": \"n\", \"Ṉ\": \"N\", \"ṉ\": \"n\", \"Ṋ\": \"N\", \"ṋ\": \"n\", \"Ṍ\": \"O\", \"ṍ\": \"o\", \"Ṏ\": \"O\", \"ṏ\": \"o\", \"Ṑ\": \"O\", \"ṑ\": \"o\", \"Ṓ\": \"O\", \"ṓ\": \"o\", \"Ṕ\": \"P\", \"ṕ\": \"p\", \"Ṗ\": \"P\", \"ṗ\": \"p\", \"Ṙ\": \"R\", \"ṙ\": \"r\", \"Ṛ\": \"R\", \"ṛ\": \"r\", \"Ṝ\": \"R\", \"ṝ\": \"r\", \"Ṟ\": \"R\", \"ṟ\": \"r\", \"Ṡ\": \"S\", \"ṡ\": \"s\", \"Ṣ\": \"S\", \"ṣ\": \"s\", \"Ṥ\": \"S\", \"ṥ\": \"s\", \"Ṧ\": \"S\", \"ṧ\": \"s\", \"Ṩ\": \"S\", \"ṩ\": \"s\", \"Ṫ\": \"T\", \"ṫ\": \"t\", \"Ṭ\": \"T\", \"ṭ\": \"t\", \"Ṯ\": \"T\", \"ṯ\": \"t\", \"Ṱ\": \"T\", \"ṱ\": \"t\", \"Ṳ\": \"U\", \"ṳ\": \"u\", \"Ṵ\": \"U\", \"ṵ\": \"u\", \"Ṷ\": \"U\", \"ṷ\": \"u\", \"Ṹ\": \"U\", \"ṹ\": \"u\", \"Ṻ\": \"U\", \"ṻ\": \"u\", \"Ṽ\": \"V\", \"ṽ\": \"v\", \"Ṿ\": \"V\", \"ṿ\": \"v\", \"Ẁ\": \"W\", \"ẁ\": \"w\", \"Ẃ\": \"W\", \"ẃ\": \"w\", \"Ẅ\": \"W\", \"ẅ\": \"w\", \"Ẇ\": \"W\", \"ẇ\": \"w\", \"Ẉ\": \"W\", \"ẉ\": \"w\", \"Ẋ\": \"X\", \"ẋ\": \"x\", \"Ẍ\": \"X\", \"ẍ\": \"x\", \"Ẏ\": \"Y\", \"ẏ\": \"y\", \"Ẑ\": \"Z\", \"ẑ\": \"z\", \"Ẓ\": \"Z\", \"ẓ\": \"z\", \"Ẕ\": \"Z\", \"ẕ\": \"z\", \"ẖ\": \"h\", \"ẗ\": \"t\", \"ẘ\": \"w\", \"ẙ\": \"y\", \"ẛ\": \"ſ\", \"Ạ\": \"A\", \"ạ\": \"a\", \"Ả\": \"A\", \"ả\": \"a\", \"Ấ\": \"A\", \"ấ\": \"a\", \"Ầ\": \"A\", \"ầ\": \"a\", \"Ẩ\": \"A\", \"ẩ\": \"a\", \"Ẫ\": \"A\", \"ẫ\": \"a\", \"Ậ\": \"A\", \"ậ\": \"a\", \"Ắ\": \"A\", \"ắ\": \"a\", \"Ằ\": \"A\", \"ằ\": \"a\", \"Ẳ\": \"A\", \"ẳ\": \"a\", \"Ẵ\": \"A\", \"ẵ\": \"a\", \"Ặ\": \"A\", \"ặ\": \"a\", \"Ẹ\": \"E\", \"ẹ\": \"e\", \"Ẻ\": \"E\", \"ẻ\": \"e\", \"Ẽ\": \"E\", \"ẽ\": \"e\", \"Ế\": \"E\", \"ế\": \"e\", \"Ề\": \"E\", \"ề\": \"e\", \"Ể\": \"E\", \"ể\": \"e\", \"Ễ\": \"E\", \"ễ\": \"e\", \"Ệ\": \"E\", \"ệ\": \"e\", \"Ỉ\": \"I\", \"ỉ\": \"i\", \"Ị\": \"I\", \"ị\": \"i\", \"Ọ\": \"O\", \"ọ\": \"o\", \"Ỏ\": \"O\", \"ỏ\": \"o\", \"Ố\": \"O\", \"ố\": \"o\", \"Ồ\": \"O\", \"ồ\": \"o\", \"Ổ\": \"O\", \"ổ\": \"o\", \"Ỗ\": \"O\", \"ỗ\": \"o\", \"Ộ\": \"O\", \"ộ\": \"o\", \"Ớ\": \"O\", \"ớ\": \"o\", \"Ờ\": \"O\", \"ờ\": \"o\", \"Ở\": \"O\", \"ở\": \"o\", \"Ỡ\": \"O\", \"ỡ\": \"o\", \"Ợ\": \"O\", \"ợ\": \"o\", \"Ụ\": \"U\", \"ụ\": \"u\", \"Ủ\": \"U\", \"ủ\": \"u\", \"Ứ\": \"U\", \"ứ\": \"u\", \"Ừ\": \"U\", \"ừ\": \"u\", \"Ử\": \"U\", \"ử\": \"u\", \"Ữ\": \"U\", \"ữ\": \"u\", \"Ự\": \"U\", \"ự\": \"u\", \"Ỳ\": \"Y\", \"ỳ\": \"y\", \"Ỵ\": \"Y\", \"ỵ\": \"y\", \"Ỷ\": \"Y\", \"ỷ\": \"y\", \"Ỹ\": \"Y\", \"ỹ\": \"y\", \"ἀ\": \"α\", \"ἁ\": \"α\", \"ἂ\": \"α\", \"ἃ\": \"α\", \"ἄ\": \"α\", \"ἅ\": \"α\", \"ἆ\": \"α\", \"ἇ\": \"α\", \"Ἀ\": \"Α\", \"Ἁ\": \"Α\", \"Ἂ\": \"Α\", \"Ἃ\": \"Α\", \"Ἄ\": \"Α\", \"Ἅ\": \"Α\", \"Ἆ\": \"Α\", \"Ἇ\": \"Α\", \"ἐ\": \"ε\", \"ἑ\": \"ε\", \"ἒ\": \"ε\", \"ἓ\": \"ε\", \"ἔ\": \"ε\", \"ἕ\": \"ε\", \"Ἐ\": \"Ε\", \"Ἑ\": \"Ε\", \"Ἒ\": \"Ε\", \"Ἓ\": \"Ε\", \"Ἔ\": \"Ε\", \"Ἕ\": \"Ε\", \"ἠ\": \"η\", \"ἡ\": \"η\", \"ἢ\": \"η\", \"ἣ\": \"η\", \"ἤ\": \"η\", \"ἥ\": \"η\", \"ἦ\": \"η\", \"ἧ\": \"η\", \"Ἠ\": \"Η\", \"Ἡ\": \"Η\", \"Ἢ\": \"Η\", \"Ἣ\": \"Η\", \"Ἤ\": \"Η\", \"Ἥ\": \"Η\", \"Ἦ\": \"Η\", \"Ἧ\": \"Η\", \"ἰ\": \"ι\", \"ἱ\": \"ι\", \"ἲ\": \"ι\", \"ἳ\": \"ι\", \"ἴ\": \"ι\", \"ἵ\": \"ι\", \"ἶ\": \"ι\", \"ἷ\": \"ι\", \"Ἰ\": \"Ι\", \"Ἱ\": \"Ι\", \"Ἲ\": \"Ι\", \"Ἳ\": \"Ι\", \"Ἴ\": \"Ι\", \"Ἵ\": \"Ι\", \"Ἶ\": \"Ι\", \"Ἷ\": \"Ι\", \"ὀ\": \"ο\", \"ὁ\": \"ο\", \"ὂ\": \"ο\", \"ὃ\": \"ο\", \"ὄ\": \"ο\", \"ὅ\": \"ο\", \"Ὀ\": \"Ο\", \"Ὁ\": \"Ο\", \"Ὂ\": \"Ο\", \"Ὃ\": \"Ο\", \"Ὄ\": \"Ο\", \"Ὅ\": \"Ο\", \"ὐ\": \"υ\", \"ὑ\": \"υ\", \"ὒ\": \"υ\", \"ὓ\": \"υ\", \"ὔ\": \"υ\", \"ὕ\": \"υ\", \"ὖ\": \"υ\", \"ὗ\": \"υ\", \"Ὑ\": \"Υ\", \"Ὓ\": \"Υ\", \"Ὕ\": \"Υ\", \"Ὗ\": \"Υ\", \"ὠ\": \"ω\", \"ὡ\": \"ω\", \"ὢ\": \"ω\", \"ὣ\": \"ω\", \"ὤ\": \"ω\", \"ὥ\": \"ω\", \"ὦ\": \"ω\", \"ὧ\": \"ω\", \"Ὠ\": \"Ω\", \"Ὡ\": \"Ω\", \"Ὢ\": \"Ω\", \"Ὣ\": \"Ω\", \"Ὤ\": \"Ω\", \"Ὥ\": \"Ω\", \"Ὦ\": \"Ω\", \"Ὧ\": \"Ω\", \"ὰ\": \"α\", \"ά\": \"α\", \"ὲ\": \"ε\", \"έ\": \"ε\", \"ὴ\": \"η\", \"ή\": \"η\", \"ὶ\": \"ι\", \"ί\": \"ι\", \"ὸ\": \"ο\", \"ό\": \"ο\", \"ὺ\": \"υ\", \"ύ\": \"υ\", \"ὼ\": \"ω\", \"ώ\": \"ω\", \"ᾀ\": \"α\", \"ᾁ\": \"α\", \"ᾂ\": \"α\", \"ᾃ\": \"α\", \"ᾄ\": \"α\", \"ᾅ\": \"α\", \"ᾆ\": \"α\", \"ᾇ\": \"α\", \"ᾈ\": \"Α\", \"ᾉ\": \"Α\", \"ᾊ\": \"Α\", \"ᾋ\": \"Α\", \"ᾌ\": \"Α\", \"ᾍ\": \"Α\", \"ᾎ\": \"Α\", \"ᾏ\": \"Α\", \"ᾐ\": \"η\", \"ᾑ\": \"η\", \"ᾒ\": \"η\", \"ᾓ\": \"η\", \"ᾔ\": \"η\", \"ᾕ\": \"η\", \"ᾖ\": \"η\", \"ᾗ\": \"η\", \"ᾘ\": \"Η\", \"ᾙ\": \"Η\", \"ᾚ\": \"Η\", \"ᾛ\": \"Η\", \"ᾜ\": \"Η\", \"ᾝ\": \"Η\", \"ᾞ\": \"Η\", \"ᾟ\": \"Η\", \"ᾠ\": \"ω\", \"ᾡ\": \"ω\", \"ᾢ\": \"ω\", \"ᾣ\": \"ω\", \"ᾤ\": \"ω\", \"ᾥ\": \"ω\", \"ᾦ\": \"ω\", \"ᾧ\": \"ω\", \"ᾨ\": \"Ω\", \"ᾩ\": \"Ω\", \"ᾪ\": \"Ω\", \"ᾫ\": \"Ω\", \"ᾬ\": \"Ω\", \"ᾭ\": \"Ω\", \"ᾮ\": \"Ω\", \"ᾯ\": \"Ω\", \"ᾰ\": \"α\", \"ᾱ\": \"α\", \"ᾲ\": \"α\", \"ᾳ\": \"α\", \"ᾴ\": \"α\", \"ᾶ\": \"α\", \"ᾷ\": \"α\", \"Ᾰ\": \"Α\", \"Ᾱ\": \"Α\", \"Ὰ\": \"Α\", \"Ά\": \"Α\", \"ᾼ\": \"Α\", \"ι\": \"ι\", \"῁\": \"¨\", \"ῂ\": \"η\", \"ῃ\": \"η\", \"ῄ\": \"η\", \"ῆ\": \"η\", \"ῇ\": \"η\", \"Ὲ\": \"Ε\", \"Έ\": \"Ε\", \"Ὴ\": \"Η\", \"Ή\": \"Η\", \"ῌ\": \"Η\", \"῍\": \"᾿\", \"῎\": \"᾿\", \"῏\": \"᾿\", \"ῐ\": \"ι\", \"ῑ\": \"ι\", \"ῒ\": \"ι\", \"ΐ\": \"ι\", \"ῖ\": \"ι\", \"ῗ\": \"ι\", \"Ῐ\": \"Ι\", \"Ῑ\": \"Ι\", \"Ὶ\": \"Ι\", \"Ί\": \"Ι\", \"῝\": \"῾\", \"῞\": \"῾\", \"῟\": \"῾\", \"ῠ\": \"υ\", \"ῡ\": \"υ\", \"ῢ\": \"υ\", \"ΰ\": \"υ\", \"ῤ\": \"ρ\", \"ῥ\": \"ρ\", \"ῦ\": \"υ\", \"ῧ\": \"υ\", \"Ῠ\": \"Υ\", \"Ῡ\": \"Υ\", \"Ὺ\": \"Υ\", \"Ύ\": \"Υ\", \"Ῥ\": \"Ρ\", \"῭\": \"¨\", \"΅\": \"¨\", \"`\": \"`\", \"ῲ\": \"ω\", \"ῳ\": \"ω\", \"ῴ\": \"ω\", \"ῶ\": \"ω\", \"ῷ\": \"ω\", \"Ὸ\": \"Ο\", \"Ό\": \"Ο\", \"Ὼ\": \"Ω\", \"Ώ\": \"Ω\", \"ῼ\": \"Ω\", \"´\": \"´\", \" \": \" \", \" \": \" \", \"Ω\": \"Ω\", \"K\": \"K\", \"Å\": \"A\" };\n})(models || (models = {}));\nvar wordBreakers;\n(function (wordBreakers) {\n    var data;\n    (function (data) {\n        ;\n        data.WORD_BREAK_PROPERTY = [\n            [/*start*/ 0xA, /*end*/ 0xA, 1 /* LF */],\n            [/*start*/ 0xB, /*end*/ 0xC, 2 /* Newline */],\n            [/*start*/ 0xD, /*end*/ 0xD, 3 /* CR */],\n            [/*start*/ 0x20, /*end*/ 0x20, 4 /* WSegSpace */],\n            [/*start*/ 0x22, /*end*/ 0x22, 5 /* Double_Quote */],\n            [/*start*/ 0x27, /*end*/ 0x27, 6 /* Single_Quote */],\n            [/*start*/ 0x2C, /*end*/ 0x2C, 7 /* MidNum */],\n            [/*start*/ 0x2E, /*end*/ 0x2E, 8 /* MidNumLet */],\n            [/*start*/ 0x30, /*end*/ 0x39, 9 /* Numeric */],\n            [/*start*/ 0x3A, /*end*/ 0x3A, 10 /* MidLetter */],\n            [/*start*/ 0x3B, /*end*/ 0x3B, 7 /* MidNum */],\n            [/*start*/ 0x41, /*end*/ 0x5A, 11 /* ALetter */],\n            [/*start*/ 0x5F, /*end*/ 0x5F, 12 /* ExtendNumLet */],\n            [/*start*/ 0x61, /*end*/ 0x7A, 11 /* ALetter */],\n            [/*start*/ 0x85, /*end*/ 0x85, 2 /* Newline */],\n            [/*start*/ 0xAA, /*end*/ 0xAA, 11 /* ALetter */],\n            [/*start*/ 0xAD, /*end*/ 0xAD, 13 /* Format */],\n            [/*start*/ 0xB5, /*end*/ 0xB5, 11 /* ALetter */],\n            [/*start*/ 0xB7, /*end*/ 0xB7, 10 /* MidLetter */],\n            [/*start*/ 0xBA, /*end*/ 0xBA, 11 /* ALetter */],\n            [/*start*/ 0xC0, /*end*/ 0xD6, 11 /* ALetter */],\n            [/*start*/ 0xD8, /*end*/ 0xF6, 11 /* ALetter */],\n            [/*start*/ 0xF8, /*end*/ 0x1BA, 11 /* ALetter */],\n            [/*start*/ 0x1BB, /*end*/ 0x1BB, 11 /* ALetter */],\n            [/*start*/ 0x1BC, /*end*/ 0x1BF, 11 /* ALetter */],\n            [/*start*/ 0x1C0, /*end*/ 0x1C3, 11 /* ALetter */],\n            [/*start*/ 0x1C4, /*end*/ 0x293, 11 /* ALetter */],\n            [/*start*/ 0x294, /*end*/ 0x294, 11 /* ALetter */],\n            [/*start*/ 0x295, /*end*/ 0x2AF, 11 /* ALetter */],\n            [/*start*/ 0x2B0, /*end*/ 0x2C1, 11 /* ALetter */],\n            [/*start*/ 0x2C2, /*end*/ 0x2C5, 11 /* ALetter */],\n            [/*start*/ 0x2C6, /*end*/ 0x2D1, 11 /* ALetter */],\n            [/*start*/ 0x2D2, /*end*/ 0x2D7, 11 /* ALetter */],\n            [/*start*/ 0x2DE, /*end*/ 0x2DF, 11 /* ALetter */],\n            [/*start*/ 0x2E0, /*end*/ 0x2E4, 11 /* ALetter */],\n            [/*start*/ 0x2EC, /*end*/ 0x2EC, 11 /* ALetter */],\n            [/*start*/ 0x2ED, /*end*/ 0x2ED, 11 /* ALetter */],\n            [/*start*/ 0x2EE, /*end*/ 0x2EE, 11 /* ALetter */],\n            [/*start*/ 0x2EF, /*end*/ 0x2FF, 11 /* ALetter */],\n            [/*start*/ 0x300, /*end*/ 0x36F, 14 /* Extend */],\n            [/*start*/ 0x370, /*end*/ 0x373, 11 /* ALetter */],\n            [/*start*/ 0x374, /*end*/ 0x374, 11 /* ALetter */],\n            [/*start*/ 0x376, /*end*/ 0x377, 11 /* ALetter */],\n            [/*start*/ 0x37A, /*end*/ 0x37A, 11 /* ALetter */],\n            [/*start*/ 0x37B, /*end*/ 0x37D, 11 /* ALetter */],\n            [/*start*/ 0x37E, /*end*/ 0x37E, 7 /* MidNum */],\n            [/*start*/ 0x37F, /*end*/ 0x37F, 11 /* ALetter */],\n            [/*start*/ 0x386, /*end*/ 0x386, 11 /* ALetter */],\n            [/*start*/ 0x387, /*end*/ 0x387, 10 /* MidLetter */],\n            [/*start*/ 0x388, /*end*/ 0x38A, 11 /* ALetter */],\n            [/*start*/ 0x38C, /*end*/ 0x38C, 11 /* ALetter */],\n            [/*start*/ 0x38E, /*end*/ 0x3A1, 11 /* ALetter */],\n            [/*start*/ 0x3A3, /*end*/ 0x3F5, 11 /* ALetter */],\n            [/*start*/ 0x3F7, /*end*/ 0x481, 11 /* ALetter */],\n            [/*start*/ 0x483, /*end*/ 0x487, 14 /* Extend */],\n            [/*start*/ 0x488, /*end*/ 0x489, 14 /* Extend */],\n            [/*start*/ 0x48A, /*end*/ 0x52F, 11 /* ALetter */],\n            [/*start*/ 0x531, /*end*/ 0x556, 11 /* ALetter */],\n            [/*start*/ 0x559, /*end*/ 0x559, 11 /* ALetter */],\n            [/*start*/ 0x55B, /*end*/ 0x55C, 11 /* ALetter */],\n            [/*start*/ 0x55E, /*end*/ 0x55E, 11 /* ALetter */],\n            [/*start*/ 0x560, /*end*/ 0x588, 11 /* ALetter */],\n            [/*start*/ 0x589, /*end*/ 0x589, 7 /* MidNum */],\n            [/*start*/ 0x591, /*end*/ 0x5BD, 14 /* Extend */],\n            [/*start*/ 0x5BF, /*end*/ 0x5BF, 14 /* Extend */],\n            [/*start*/ 0x5C1, /*end*/ 0x5C2, 14 /* Extend */],\n            [/*start*/ 0x5C4, /*end*/ 0x5C5, 14 /* Extend */],\n            [/*start*/ 0x5C7, /*end*/ 0x5C7, 14 /* Extend */],\n            [/*start*/ 0x5D0, /*end*/ 0x5EA, 15 /* Hebrew_Letter */],\n            [/*start*/ 0x5EF, /*end*/ 0x5F2, 15 /* Hebrew_Letter */],\n            [/*start*/ 0x5F3, /*end*/ 0x5F3, 11 /* ALetter */],\n            [/*start*/ 0x5F4, /*end*/ 0x5F4, 10 /* MidLetter */],\n            [/*start*/ 0x600, /*end*/ 0x605, 13 /* Format */],\n            [/*start*/ 0x60C, /*end*/ 0x60D, 7 /* MidNum */],\n            [/*start*/ 0x610, /*end*/ 0x61A, 14 /* Extend */],\n            [/*start*/ 0x61C, /*end*/ 0x61C, 13 /* Format */],\n            [/*start*/ 0x620, /*end*/ 0x63F, 11 /* ALetter */],\n            [/*start*/ 0x640, /*end*/ 0x640, 11 /* ALetter */],\n            [/*start*/ 0x641, /*end*/ 0x64A, 11 /* ALetter */],\n            [/*start*/ 0x64B, /*end*/ 0x65F, 14 /* Extend */],\n            [/*start*/ 0x660, /*end*/ 0x669, 9 /* Numeric */],\n            [/*start*/ 0x66B, /*end*/ 0x66B, 9 /* Numeric */],\n            [/*start*/ 0x66C, /*end*/ 0x66C, 7 /* MidNum */],\n            [/*start*/ 0x66E, /*end*/ 0x66F, 11 /* ALetter */],\n            [/*start*/ 0x670, /*end*/ 0x670, 14 /* Extend */],\n            [/*start*/ 0x671, /*end*/ 0x6D3, 11 /* ALetter */],\n            [/*start*/ 0x6D5, /*end*/ 0x6D5, 11 /* ALetter */],\n            [/*start*/ 0x6D6, /*end*/ 0x6DC, 14 /* Extend */],\n            [/*start*/ 0x6DD, /*end*/ 0x6DD, 13 /* Format */],\n            [/*start*/ 0x6DF, /*end*/ 0x6E4, 14 /* Extend */],\n            [/*start*/ 0x6E5, /*end*/ 0x6E6, 11 /* ALetter */],\n            [/*start*/ 0x6E7, /*end*/ 0x6E8, 14 /* Extend */],\n            [/*start*/ 0x6EA, /*end*/ 0x6ED, 14 /* Extend */],\n            [/*start*/ 0x6EE, /*end*/ 0x6EF, 11 /* ALetter */],\n            [/*start*/ 0x6F0, /*end*/ 0x6F9, 9 /* Numeric */],\n            [/*start*/ 0x6FA, /*end*/ 0x6FC, 11 /* ALetter */],\n            [/*start*/ 0x6FF, /*end*/ 0x6FF, 11 /* ALetter */],\n            [/*start*/ 0x70F, /*end*/ 0x70F, 13 /* Format */],\n            [/*start*/ 0x710, /*end*/ 0x710, 11 /* ALetter */],\n            [/*start*/ 0x711, /*end*/ 0x711, 14 /* Extend */],\n            [/*start*/ 0x712, /*end*/ 0x72F, 11 /* ALetter */],\n            [/*start*/ 0x730, /*end*/ 0x74A, 14 /* Extend */],\n            [/*start*/ 0x74D, /*end*/ 0x7A5, 11 /* ALetter */],\n            [/*start*/ 0x7A6, /*end*/ 0x7B0, 14 /* Extend */],\n            [/*start*/ 0x7B1, /*end*/ 0x7B1, 11 /* ALetter */],\n            [/*start*/ 0x7C0, /*end*/ 0x7C9, 9 /* Numeric */],\n            [/*start*/ 0x7CA, /*end*/ 0x7EA, 11 /* ALetter */],\n            [/*start*/ 0x7EB, /*end*/ 0x7F3, 14 /* Extend */],\n            [/*start*/ 0x7F4, /*end*/ 0x7F5, 11 /* ALetter */],\n            [/*start*/ 0x7F8, /*end*/ 0x7F8, 7 /* MidNum */],\n            [/*start*/ 0x7FA, /*end*/ 0x7FA, 11 /* ALetter */],\n            [/*start*/ 0x7FD, /*end*/ 0x7FD, 14 /* Extend */],\n            [/*start*/ 0x800, /*end*/ 0x815, 11 /* ALetter */],\n            [/*start*/ 0x816, /*end*/ 0x819, 14 /* Extend */],\n            [/*start*/ 0x81A, /*end*/ 0x81A, 11 /* ALetter */],\n            [/*start*/ 0x81B, /*end*/ 0x823, 14 /* Extend */],\n            [/*start*/ 0x824, /*end*/ 0x824, 11 /* ALetter */],\n            [/*start*/ 0x825, /*end*/ 0x827, 14 /* Extend */],\n            [/*start*/ 0x828, /*end*/ 0x828, 11 /* ALetter */],\n            [/*start*/ 0x829, /*end*/ 0x82D, 14 /* Extend */],\n            [/*start*/ 0x840, /*end*/ 0x858, 11 /* ALetter */],\n            [/*start*/ 0x859, /*end*/ 0x85B, 14 /* Extend */],\n            [/*start*/ 0x860, /*end*/ 0x86A, 11 /* ALetter */],\n            [/*start*/ 0x8A0, /*end*/ 0x8B4, 11 /* ALetter */],\n            [/*start*/ 0x8B6, /*end*/ 0x8BD, 11 /* ALetter */],\n            [/*start*/ 0x8D3, /*end*/ 0x8E1, 14 /* Extend */],\n            [/*start*/ 0x8E2, /*end*/ 0x8E2, 13 /* Format */],\n            [/*start*/ 0x8E3, /*end*/ 0x902, 14 /* Extend */],\n            [/*start*/ 0x903, /*end*/ 0x903, 14 /* Extend */],\n            [/*start*/ 0x904, /*end*/ 0x939, 11 /* ALetter */],\n            [/*start*/ 0x93A, /*end*/ 0x93A, 14 /* Extend */],\n            [/*start*/ 0x93B, /*end*/ 0x93B, 14 /* Extend */],\n            [/*start*/ 0x93C, /*end*/ 0x93C, 14 /* Extend */],\n            [/*start*/ 0x93D, /*end*/ 0x93D, 11 /* ALetter */],\n            [/*start*/ 0x93E, /*end*/ 0x940, 14 /* Extend */],\n            [/*start*/ 0x941, /*end*/ 0x948, 14 /* Extend */],\n            [/*start*/ 0x949, /*end*/ 0x94C, 14 /* Extend */],\n            [/*start*/ 0x94D, /*end*/ 0x94D, 14 /* Extend */],\n            [/*start*/ 0x94E, /*end*/ 0x94F, 14 /* Extend */],\n            [/*start*/ 0x950, /*end*/ 0x950, 11 /* ALetter */],\n            [/*start*/ 0x951, /*end*/ 0x957, 14 /* Extend */],\n            [/*start*/ 0x958, /*end*/ 0x961, 11 /* ALetter */],\n            [/*start*/ 0x962, /*end*/ 0x963, 14 /* Extend */],\n            [/*start*/ 0x966, /*end*/ 0x96F, 9 /* Numeric */],\n            [/*start*/ 0x971, /*end*/ 0x971, 11 /* ALetter */],\n            [/*start*/ 0x972, /*end*/ 0x980, 11 /* ALetter */],\n            [/*start*/ 0x981, /*end*/ 0x981, 14 /* Extend */],\n            [/*start*/ 0x982, /*end*/ 0x983, 14 /* Extend */],\n            [/*start*/ 0x985, /*end*/ 0x98C, 11 /* ALetter */],\n            [/*start*/ 0x98F, /*end*/ 0x990, 11 /* ALetter */],\n            [/*start*/ 0x993, /*end*/ 0x9A8, 11 /* ALetter */],\n            [/*start*/ 0x9AA, /*end*/ 0x9B0, 11 /* ALetter */],\n            [/*start*/ 0x9B2, /*end*/ 0x9B2, 11 /* ALetter */],\n            [/*start*/ 0x9B6, /*end*/ 0x9B9, 11 /* ALetter */],\n            [/*start*/ 0x9BC, /*end*/ 0x9BC, 14 /* Extend */],\n            [/*start*/ 0x9BD, /*end*/ 0x9BD, 11 /* ALetter */],\n            [/*start*/ 0x9BE, /*end*/ 0x9C0, 14 /* Extend */],\n            [/*start*/ 0x9C1, /*end*/ 0x9C4, 14 /* Extend */],\n            [/*start*/ 0x9C7, /*end*/ 0x9C8, 14 /* Extend */],\n            [/*start*/ 0x9CB, /*end*/ 0x9CC, 14 /* Extend */],\n            [/*start*/ 0x9CD, /*end*/ 0x9CD, 14 /* Extend */],\n            [/*start*/ 0x9CE, /*end*/ 0x9CE, 11 /* ALetter */],\n            [/*start*/ 0x9D7, /*end*/ 0x9D7, 14 /* Extend */],\n            [/*start*/ 0x9DC, /*end*/ 0x9DD, 11 /* ALetter */],\n            [/*start*/ 0x9DF, /*end*/ 0x9E1, 11 /* ALetter */],\n            [/*start*/ 0x9E2, /*end*/ 0x9E3, 14 /* Extend */],\n            [/*start*/ 0x9E6, /*end*/ 0x9EF, 9 /* Numeric */],\n            [/*start*/ 0x9F0, /*end*/ 0x9F1, 11 /* ALetter */],\n            [/*start*/ 0x9FC, /*end*/ 0x9FC, 11 /* ALetter */],\n            [/*start*/ 0x9FE, /*end*/ 0x9FE, 14 /* Extend */],\n            [/*start*/ 0xA01, /*end*/ 0xA02, 14 /* Extend */],\n            [/*start*/ 0xA03, /*end*/ 0xA03, 14 /* Extend */],\n            [/*start*/ 0xA05, /*end*/ 0xA0A, 11 /* ALetter */],\n            [/*start*/ 0xA0F, /*end*/ 0xA10, 11 /* ALetter */],\n            [/*start*/ 0xA13, /*end*/ 0xA28, 11 /* ALetter */],\n            [/*start*/ 0xA2A, /*end*/ 0xA30, 11 /* ALetter */],\n            [/*start*/ 0xA32, /*end*/ 0xA33, 11 /* ALetter */],\n            [/*start*/ 0xA35, /*end*/ 0xA36, 11 /* ALetter */],\n            [/*start*/ 0xA38, /*end*/ 0xA39, 11 /* ALetter */],\n            [/*start*/ 0xA3C, /*end*/ 0xA3C, 14 /* Extend */],\n            [/*start*/ 0xA3E, /*end*/ 0xA40, 14 /* Extend */],\n            [/*start*/ 0xA41, /*end*/ 0xA42, 14 /* Extend */],\n            [/*start*/ 0xA47, /*end*/ 0xA48, 14 /* Extend */],\n            [/*start*/ 0xA4B, /*end*/ 0xA4D, 14 /* Extend */],\n            [/*start*/ 0xA51, /*end*/ 0xA51, 14 /* Extend */],\n            [/*start*/ 0xA59, /*end*/ 0xA5C, 11 /* ALetter */],\n            [/*start*/ 0xA5E, /*end*/ 0xA5E, 11 /* ALetter */],\n            [/*start*/ 0xA66, /*end*/ 0xA6F, 9 /* Numeric */],\n            [/*start*/ 0xA70, /*end*/ 0xA71, 14 /* Extend */],\n            [/*start*/ 0xA72, /*end*/ 0xA74, 11 /* ALetter */],\n            [/*start*/ 0xA75, /*end*/ 0xA75, 14 /* Extend */],\n            [/*start*/ 0xA81, /*end*/ 0xA82, 14 /* Extend */],\n            [/*start*/ 0xA83, /*end*/ 0xA83, 14 /* Extend */],\n            [/*start*/ 0xA85, /*end*/ 0xA8D, 11 /* ALetter */],\n            [/*start*/ 0xA8F, /*end*/ 0xA91, 11 /* ALetter */],\n            [/*start*/ 0xA93, /*end*/ 0xAA8, 11 /* ALetter */],\n            [/*start*/ 0xAAA, /*end*/ 0xAB0, 11 /* ALetter */],\n            [/*start*/ 0xAB2, /*end*/ 0xAB3, 11 /* ALetter */],\n            [/*start*/ 0xAB5, /*end*/ 0xAB9, 11 /* ALetter */],\n            [/*start*/ 0xABC, /*end*/ 0xABC, 14 /* Extend */],\n            [/*start*/ 0xABD, /*end*/ 0xABD, 11 /* ALetter */],\n            [/*start*/ 0xABE, /*end*/ 0xAC0, 14 /* Extend */],\n            [/*start*/ 0xAC1, /*end*/ 0xAC5, 14 /* Extend */],\n            [/*start*/ 0xAC7, /*end*/ 0xAC8, 14 /* Extend */],\n            [/*start*/ 0xAC9, /*end*/ 0xAC9, 14 /* Extend */],\n            [/*start*/ 0xACB, /*end*/ 0xACC, 14 /* Extend */],\n            [/*start*/ 0xACD, /*end*/ 0xACD, 14 /* Extend */],\n            [/*start*/ 0xAD0, /*end*/ 0xAD0, 11 /* ALetter */],\n            [/*start*/ 0xAE0, /*end*/ 0xAE1, 11 /* ALetter */],\n            [/*start*/ 0xAE2, /*end*/ 0xAE3, 14 /* Extend */],\n            [/*start*/ 0xAE6, /*end*/ 0xAEF, 9 /* Numeric */],\n            [/*start*/ 0xAF9, /*end*/ 0xAF9, 11 /* ALetter */],\n            [/*start*/ 0xAFA, /*end*/ 0xAFF, 14 /* Extend */],\n            [/*start*/ 0xB01, /*end*/ 0xB01, 14 /* Extend */],\n            [/*start*/ 0xB02, /*end*/ 0xB03, 14 /* Extend */],\n            [/*start*/ 0xB05, /*end*/ 0xB0C, 11 /* ALetter */],\n            [/*start*/ 0xB0F, /*end*/ 0xB10, 11 /* ALetter */],\n            [/*start*/ 0xB13, /*end*/ 0xB28, 11 /* ALetter */],\n            [/*start*/ 0xB2A, /*end*/ 0xB30, 11 /* ALetter */],\n            [/*start*/ 0xB32, /*end*/ 0xB33, 11 /* ALetter */],\n            [/*start*/ 0xB35, /*end*/ 0xB39, 11 /* ALetter */],\n            [/*start*/ 0xB3C, /*end*/ 0xB3C, 14 /* Extend */],\n            [/*start*/ 0xB3D, /*end*/ 0xB3D, 11 /* ALetter */],\n            [/*start*/ 0xB3E, /*end*/ 0xB3E, 14 /* Extend */],\n            [/*start*/ 0xB3F, /*end*/ 0xB3F, 14 /* Extend */],\n            [/*start*/ 0xB40, /*end*/ 0xB40, 14 /* Extend */],\n            [/*start*/ 0xB41, /*end*/ 0xB44, 14 /* Extend */],\n            [/*start*/ 0xB47, /*end*/ 0xB48, 14 /* Extend */],\n            [/*start*/ 0xB4B, /*end*/ 0xB4C, 14 /* Extend */],\n            [/*start*/ 0xB4D, /*end*/ 0xB4D, 14 /* Extend */],\n            [/*start*/ 0xB56, /*end*/ 0xB56, 14 /* Extend */],\n            [/*start*/ 0xB57, /*end*/ 0xB57, 14 /* Extend */],\n            [/*start*/ 0xB5C, /*end*/ 0xB5D, 11 /* ALetter */],\n            [/*start*/ 0xB5F, /*end*/ 0xB61, 11 /* ALetter */],\n            [/*start*/ 0xB62, /*end*/ 0xB63, 14 /* Extend */],\n            [/*start*/ 0xB66, /*end*/ 0xB6F, 9 /* Numeric */],\n            [/*start*/ 0xB71, /*end*/ 0xB71, 11 /* ALetter */],\n            [/*start*/ 0xB82, /*end*/ 0xB82, 14 /* Extend */],\n            [/*start*/ 0xB83, /*end*/ 0xB83, 11 /* ALetter */],\n            [/*start*/ 0xB85, /*end*/ 0xB8A, 11 /* ALetter */],\n            [/*start*/ 0xB8E, /*end*/ 0xB90, 11 /* ALetter */],\n            [/*start*/ 0xB92, /*end*/ 0xB95, 11 /* ALetter */],\n            [/*start*/ 0xB99, /*end*/ 0xB9A, 11 /* ALetter */],\n            [/*start*/ 0xB9C, /*end*/ 0xB9C, 11 /* ALetter */],\n            [/*start*/ 0xB9E, /*end*/ 0xB9F, 11 /* ALetter */],\n            [/*start*/ 0xBA3, /*end*/ 0xBA4, 11 /* ALetter */],\n            [/*start*/ 0xBA8, /*end*/ 0xBAA, 11 /* ALetter */],\n            [/*start*/ 0xBAE, /*end*/ 0xBB9, 11 /* ALetter */],\n            [/*start*/ 0xBBE, /*end*/ 0xBBF, 14 /* Extend */],\n            [/*start*/ 0xBC0, /*end*/ 0xBC0, 14 /* Extend */],\n            [/*start*/ 0xBC1, /*end*/ 0xBC2, 14 /* Extend */],\n            [/*start*/ 0xBC6, /*end*/ 0xBC8, 14 /* Extend */],\n            [/*start*/ 0xBCA, /*end*/ 0xBCC, 14 /* Extend */],\n            [/*start*/ 0xBCD, /*end*/ 0xBCD, 14 /* Extend */],\n            [/*start*/ 0xBD0, /*end*/ 0xBD0, 11 /* ALetter */],\n            [/*start*/ 0xBD7, /*end*/ 0xBD7, 14 /* Extend */],\n            [/*start*/ 0xBE6, /*end*/ 0xBEF, 9 /* Numeric */],\n            [/*start*/ 0xC00, /*end*/ 0xC00, 14 /* Extend */],\n            [/*start*/ 0xC01, /*end*/ 0xC03, 14 /* Extend */],\n            [/*start*/ 0xC04, /*end*/ 0xC04, 14 /* Extend */],\n            [/*start*/ 0xC05, /*end*/ 0xC0C, 11 /* ALetter */],\n            [/*start*/ 0xC0E, /*end*/ 0xC10, 11 /* ALetter */],\n            [/*start*/ 0xC12, /*end*/ 0xC28, 11 /* ALetter */],\n            [/*start*/ 0xC2A, /*end*/ 0xC39, 11 /* ALetter */],\n            [/*start*/ 0xC3D, /*end*/ 0xC3D, 11 /* ALetter */],\n            [/*start*/ 0xC3E, /*end*/ 0xC40, 14 /* Extend */],\n            [/*start*/ 0xC41, /*end*/ 0xC44, 14 /* Extend */],\n            [/*start*/ 0xC46, /*end*/ 0xC48, 14 /* Extend */],\n            [/*start*/ 0xC4A, /*end*/ 0xC4D, 14 /* Extend */],\n            [/*start*/ 0xC55, /*end*/ 0xC56, 14 /* Extend */],\n            [/*start*/ 0xC58, /*end*/ 0xC5A, 11 /* ALetter */],\n            [/*start*/ 0xC60, /*end*/ 0xC61, 11 /* ALetter */],\n            [/*start*/ 0xC62, /*end*/ 0xC63, 14 /* Extend */],\n            [/*start*/ 0xC66, /*end*/ 0xC6F, 9 /* Numeric */],\n            [/*start*/ 0xC80, /*end*/ 0xC80, 11 /* ALetter */],\n            [/*start*/ 0xC81, /*end*/ 0xC81, 14 /* Extend */],\n            [/*start*/ 0xC82, /*end*/ 0xC83, 14 /* Extend */],\n            [/*start*/ 0xC85, /*end*/ 0xC8C, 11 /* ALetter */],\n            [/*start*/ 0xC8E, /*end*/ 0xC90, 11 /* ALetter */],\n            [/*start*/ 0xC92, /*end*/ 0xCA8, 11 /* ALetter */],\n            [/*start*/ 0xCAA, /*end*/ 0xCB3, 11 /* ALetter */],\n            [/*start*/ 0xCB5, /*end*/ 0xCB9, 11 /* ALetter */],\n            [/*start*/ 0xCBC, /*end*/ 0xCBC, 14 /* Extend */],\n            [/*start*/ 0xCBD, /*end*/ 0xCBD, 11 /* ALetter */],\n            [/*start*/ 0xCBE, /*end*/ 0xCBE, 14 /* Extend */],\n            [/*start*/ 0xCBF, /*end*/ 0xCBF, 14 /* Extend */],\n            [/*start*/ 0xCC0, /*end*/ 0xCC4, 14 /* Extend */],\n            [/*start*/ 0xCC6, /*end*/ 0xCC6, 14 /* Extend */],\n            [/*start*/ 0xCC7, /*end*/ 0xCC8, 14 /* Extend */],\n            [/*start*/ 0xCCA, /*end*/ 0xCCB, 14 /* Extend */],\n            [/*start*/ 0xCCC, /*end*/ 0xCCD, 14 /* Extend */],\n            [/*start*/ 0xCD5, /*end*/ 0xCD6, 14 /* Extend */],\n            [/*start*/ 0xCDE, /*end*/ 0xCDE, 11 /* ALetter */],\n            [/*start*/ 0xCE0, /*end*/ 0xCE1, 11 /* ALetter */],\n            [/*start*/ 0xCE2, /*end*/ 0xCE3, 14 /* Extend */],\n            [/*start*/ 0xCE6, /*end*/ 0xCEF, 9 /* Numeric */],\n            [/*start*/ 0xCF1, /*end*/ 0xCF2, 11 /* ALetter */],\n            [/*start*/ 0xD00, /*end*/ 0xD01, 14 /* Extend */],\n            [/*start*/ 0xD02, /*end*/ 0xD03, 14 /* Extend */],\n            [/*start*/ 0xD05, /*end*/ 0xD0C, 11 /* ALetter */],\n            [/*start*/ 0xD0E, /*end*/ 0xD10, 11 /* ALetter */],\n            [/*start*/ 0xD12, /*end*/ 0xD3A, 11 /* ALetter */],\n            [/*start*/ 0xD3B, /*end*/ 0xD3C, 14 /* Extend */],\n            [/*start*/ 0xD3D, /*end*/ 0xD3D, 11 /* ALetter */],\n            [/*start*/ 0xD3E, /*end*/ 0xD40, 14 /* Extend */],\n            [/*start*/ 0xD41, /*end*/ 0xD44, 14 /* Extend */],\n            [/*start*/ 0xD46, /*end*/ 0xD48, 14 /* Extend */],\n            [/*start*/ 0xD4A, /*end*/ 0xD4C, 14 /* Extend */],\n            [/*start*/ 0xD4D, /*end*/ 0xD4D, 14 /* Extend */],\n            [/*start*/ 0xD4E, /*end*/ 0xD4E, 11 /* ALetter */],\n            [/*start*/ 0xD54, /*end*/ 0xD56, 11 /* ALetter */],\n            [/*start*/ 0xD57, /*end*/ 0xD57, 14 /* Extend */],\n            [/*start*/ 0xD5F, /*end*/ 0xD61, 11 /* ALetter */],\n            [/*start*/ 0xD62, /*end*/ 0xD63, 14 /* Extend */],\n            [/*start*/ 0xD66, /*end*/ 0xD6F, 9 /* Numeric */],\n            [/*start*/ 0xD7A, /*end*/ 0xD7F, 11 /* ALetter */],\n            [/*start*/ 0xD82, /*end*/ 0xD83, 14 /* Extend */],\n            [/*start*/ 0xD85, /*end*/ 0xD96, 11 /* ALetter */],\n            [/*start*/ 0xD9A, /*end*/ 0xDB1, 11 /* ALetter */],\n            [/*start*/ 0xDB3, /*end*/ 0xDBB, 11 /* ALetter */],\n            [/*start*/ 0xDBD, /*end*/ 0xDBD, 11 /* ALetter */],\n            [/*start*/ 0xDC0, /*end*/ 0xDC6, 11 /* ALetter */],\n            [/*start*/ 0xDCA, /*end*/ 0xDCA, 14 /* Extend */],\n            [/*start*/ 0xDCF, /*end*/ 0xDD1, 14 /* Extend */],\n            [/*start*/ 0xDD2, /*end*/ 0xDD4, 14 /* Extend */],\n            [/*start*/ 0xDD6, /*end*/ 0xDD6, 14 /* Extend */],\n            [/*start*/ 0xDD8, /*end*/ 0xDDF, 14 /* Extend */],\n            [/*start*/ 0xDE6, /*end*/ 0xDEF, 9 /* Numeric */],\n            [/*start*/ 0xDF2, /*end*/ 0xDF3, 14 /* Extend */],\n            [/*start*/ 0xE31, /*end*/ 0xE31, 14 /* Extend */],\n            [/*start*/ 0xE34, /*end*/ 0xE3A, 14 /* Extend */],\n            [/*start*/ 0xE47, /*end*/ 0xE4E, 14 /* Extend */],\n            [/*start*/ 0xE50, /*end*/ 0xE59, 9 /* Numeric */],\n            [/*start*/ 0xEB1, /*end*/ 0xEB1, 14 /* Extend */],\n            [/*start*/ 0xEB4, /*end*/ 0xEBC, 14 /* Extend */],\n            [/*start*/ 0xEC8, /*end*/ 0xECD, 14 /* Extend */],\n            [/*start*/ 0xED0, /*end*/ 0xED9, 9 /* Numeric */],\n            [/*start*/ 0xF00, /*end*/ 0xF00, 11 /* ALetter */],\n            [/*start*/ 0xF18, /*end*/ 0xF19, 14 /* Extend */],\n            [/*start*/ 0xF20, /*end*/ 0xF29, 9 /* Numeric */],\n            [/*start*/ 0xF35, /*end*/ 0xF35, 14 /* Extend */],\n            [/*start*/ 0xF37, /*end*/ 0xF37, 14 /* Extend */],\n            [/*start*/ 0xF39, /*end*/ 0xF39, 14 /* Extend */],\n            [/*start*/ 0xF3E, /*end*/ 0xF3F, 14 /* Extend */],\n            [/*start*/ 0xF40, /*end*/ 0xF47, 11 /* ALetter */],\n            [/*start*/ 0xF49, /*end*/ 0xF6C, 11 /* ALetter */],\n            [/*start*/ 0xF71, /*end*/ 0xF7E, 14 /* Extend */],\n            [/*start*/ 0xF7F, /*end*/ 0xF7F, 14 /* Extend */],\n            [/*start*/ 0xF80, /*end*/ 0xF84, 14 /* Extend */],\n            [/*start*/ 0xF86, /*end*/ 0xF87, 14 /* Extend */],\n            [/*start*/ 0xF88, /*end*/ 0xF8C, 11 /* ALetter */],\n            [/*start*/ 0xF8D, /*end*/ 0xF97, 14 /* Extend */],\n            [/*start*/ 0xF99, /*end*/ 0xFBC, 14 /* Extend */],\n            [/*start*/ 0xFC6, /*end*/ 0xFC6, 14 /* Extend */],\n            [/*start*/ 0x102B, /*end*/ 0x102C, 14 /* Extend */],\n            [/*start*/ 0x102D, /*end*/ 0x1030, 14 /* Extend */],\n            [/*start*/ 0x1031, /*end*/ 0x1031, 14 /* Extend */],\n            [/*start*/ 0x1032, /*end*/ 0x1037, 14 /* Extend */],\n            [/*start*/ 0x1038, /*end*/ 0x1038, 14 /* Extend */],\n            [/*start*/ 0x1039, /*end*/ 0x103A, 14 /* Extend */],\n            [/*start*/ 0x103B, /*end*/ 0x103C, 14 /* Extend */],\n            [/*start*/ 0x103D, /*end*/ 0x103E, 14 /* Extend */],\n            [/*start*/ 0x1040, /*end*/ 0x1049, 9 /* Numeric */],\n            [/*start*/ 0x1056, /*end*/ 0x1057, 14 /* Extend */],\n            [/*start*/ 0x1058, /*end*/ 0x1059, 14 /* Extend */],\n            [/*start*/ 0x105E, /*end*/ 0x1060, 14 /* Extend */],\n            [/*start*/ 0x1062, /*end*/ 0x1064, 14 /* Extend */],\n            [/*start*/ 0x1067, /*end*/ 0x106D, 14 /* Extend */],\n            [/*start*/ 0x1071, /*end*/ 0x1074, 14 /* Extend */],\n            [/*start*/ 0x1082, /*end*/ 0x1082, 14 /* Extend */],\n            [/*start*/ 0x1083, /*end*/ 0x1084, 14 /* Extend */],\n            [/*start*/ 0x1085, /*end*/ 0x1086, 14 /* Extend */],\n            [/*start*/ 0x1087, /*end*/ 0x108C, 14 /* Extend */],\n            [/*start*/ 0x108D, /*end*/ 0x108D, 14 /* Extend */],\n            [/*start*/ 0x108F, /*end*/ 0x108F, 14 /* Extend */],\n            [/*start*/ 0x1090, /*end*/ 0x1099, 9 /* Numeric */],\n            [/*start*/ 0x109A, /*end*/ 0x109C, 14 /* Extend */],\n            [/*start*/ 0x109D, /*end*/ 0x109D, 14 /* Extend */],\n            [/*start*/ 0x10A0, /*end*/ 0x10C5, 11 /* ALetter */],\n            [/*start*/ 0x10C7, /*end*/ 0x10C7, 11 /* ALetter */],\n            [/*start*/ 0x10CD, /*end*/ 0x10CD, 11 /* ALetter */],\n            [/*start*/ 0x10D0, /*end*/ 0x10FA, 11 /* ALetter */],\n            [/*start*/ 0x10FC, /*end*/ 0x10FC, 11 /* ALetter */],\n            [/*start*/ 0x10FD, /*end*/ 0x10FF, 11 /* ALetter */],\n            [/*start*/ 0x1100, /*end*/ 0x1248, 11 /* ALetter */],\n            [/*start*/ 0x124A, /*end*/ 0x124D, 11 /* ALetter */],\n            [/*start*/ 0x1250, /*end*/ 0x1256, 11 /* ALetter */],\n            [/*start*/ 0x1258, /*end*/ 0x1258, 11 /* ALetter */],\n            [/*start*/ 0x125A, /*end*/ 0x125D, 11 /* ALetter */],\n            [/*start*/ 0x1260, /*end*/ 0x1288, 11 /* ALetter */],\n            [/*start*/ 0x128A, /*end*/ 0x128D, 11 /* ALetter */],\n            [/*start*/ 0x1290, /*end*/ 0x12B0, 11 /* ALetter */],\n            [/*start*/ 0x12B2, /*end*/ 0x12B5, 11 /* ALetter */],\n            [/*start*/ 0x12B8, /*end*/ 0x12BE, 11 /* ALetter */],\n            [/*start*/ 0x12C0, /*end*/ 0x12C0, 11 /* ALetter */],\n            [/*start*/ 0x12C2, /*end*/ 0x12C5, 11 /* ALetter */],\n            [/*start*/ 0x12C8, /*end*/ 0x12D6, 11 /* ALetter */],\n            [/*start*/ 0x12D8, /*end*/ 0x1310, 11 /* ALetter */],\n            [/*start*/ 0x1312, /*end*/ 0x1315, 11 /* ALetter */],\n            [/*start*/ 0x1318, /*end*/ 0x135A, 11 /* ALetter */],\n            [/*start*/ 0x135D, /*end*/ 0x135F, 14 /* Extend */],\n            [/*start*/ 0x1380, /*end*/ 0x138F, 11 /* ALetter */],\n            [/*start*/ 0x13A0, /*end*/ 0x13F5, 11 /* ALetter */],\n            [/*start*/ 0x13F8, /*end*/ 0x13FD, 11 /* ALetter */],\n            [/*start*/ 0x1401, /*end*/ 0x166C, 11 /* ALetter */],\n            [/*start*/ 0x166F, /*end*/ 0x167F, 11 /* ALetter */],\n            [/*start*/ 0x1680, /*end*/ 0x1680, 4 /* WSegSpace */],\n            [/*start*/ 0x1681, /*end*/ 0x169A, 11 /* ALetter */],\n            [/*start*/ 0x16A0, /*end*/ 0x16EA, 11 /* ALetter */],\n            [/*start*/ 0x16EE, /*end*/ 0x16F0, 11 /* ALetter */],\n            [/*start*/ 0x16F1, /*end*/ 0x16F8, 11 /* ALetter */],\n            [/*start*/ 0x1700, /*end*/ 0x170C, 11 /* ALetter */],\n            [/*start*/ 0x170E, /*end*/ 0x1711, 11 /* ALetter */],\n            [/*start*/ 0x1712, /*end*/ 0x1714, 14 /* Extend */],\n            [/*start*/ 0x1720, /*end*/ 0x1731, 11 /* ALetter */],\n            [/*start*/ 0x1732, /*end*/ 0x1734, 14 /* Extend */],\n            [/*start*/ 0x1740, /*end*/ 0x1751, 11 /* ALetter */],\n            [/*start*/ 0x1752, /*end*/ 0x1753, 14 /* Extend */],\n            [/*start*/ 0x1760, /*end*/ 0x176C, 11 /* ALetter */],\n            [/*start*/ 0x176E, /*end*/ 0x1770, 11 /* ALetter */],\n            [/*start*/ 0x1772, /*end*/ 0x1773, 14 /* Extend */],\n            [/*start*/ 0x17B4, /*end*/ 0x17B5, 14 /* Extend */],\n            [/*start*/ 0x17B6, /*end*/ 0x17B6, 14 /* Extend */],\n            [/*start*/ 0x17B7, /*end*/ 0x17BD, 14 /* Extend */],\n            [/*start*/ 0x17BE, /*end*/ 0x17C5, 14 /* Extend */],\n            [/*start*/ 0x17C6, /*end*/ 0x17C6, 14 /* Extend */],\n            [/*start*/ 0x17C7, /*end*/ 0x17C8, 14 /* Extend */],\n            [/*start*/ 0x17C9, /*end*/ 0x17D3, 14 /* Extend */],\n            [/*start*/ 0x17DD, /*end*/ 0x17DD, 14 /* Extend */],\n            [/*start*/ 0x17E0, /*end*/ 0x17E9, 9 /* Numeric */],\n            [/*start*/ 0x180B, /*end*/ 0x180D, 14 /* Extend */],\n            [/*start*/ 0x180E, /*end*/ 0x180E, 13 /* Format */],\n            [/*start*/ 0x1810, /*end*/ 0x1819, 9 /* Numeric */],\n            [/*start*/ 0x1820, /*end*/ 0x1842, 11 /* ALetter */],\n            [/*start*/ 0x1843, /*end*/ 0x1843, 11 /* ALetter */],\n            [/*start*/ 0x1844, /*end*/ 0x1878, 11 /* ALetter */],\n            [/*start*/ 0x1880, /*end*/ 0x1884, 11 /* ALetter */],\n            [/*start*/ 0x1885, /*end*/ 0x1886, 14 /* Extend */],\n            [/*start*/ 0x1887, /*end*/ 0x18A8, 11 /* ALetter */],\n            [/*start*/ 0x18A9, /*end*/ 0x18A9, 14 /* Extend */],\n            [/*start*/ 0x18AA, /*end*/ 0x18AA, 11 /* ALetter */],\n            [/*start*/ 0x18B0, /*end*/ 0x18F5, 11 /* ALetter */],\n            [/*start*/ 0x1900, /*end*/ 0x191E, 11 /* ALetter */],\n            [/*start*/ 0x1920, /*end*/ 0x1922, 14 /* Extend */],\n            [/*start*/ 0x1923, /*end*/ 0x1926, 14 /* Extend */],\n            [/*start*/ 0x1927, /*end*/ 0x1928, 14 /* Extend */],\n            [/*start*/ 0x1929, /*end*/ 0x192B, 14 /* Extend */],\n            [/*start*/ 0x1930, /*end*/ 0x1931, 14 /* Extend */],\n            [/*start*/ 0x1932, /*end*/ 0x1932, 14 /* Extend */],\n            [/*start*/ 0x1933, /*end*/ 0x1938, 14 /* Extend */],\n            [/*start*/ 0x1939, /*end*/ 0x193B, 14 /* Extend */],\n            [/*start*/ 0x1946, /*end*/ 0x194F, 9 /* Numeric */],\n            [/*start*/ 0x19D0, /*end*/ 0x19D9, 9 /* Numeric */],\n            [/*start*/ 0x1A00, /*end*/ 0x1A16, 11 /* ALetter */],\n            [/*start*/ 0x1A17, /*end*/ 0x1A18, 14 /* Extend */],\n            [/*start*/ 0x1A19, /*end*/ 0x1A1A, 14 /* Extend */],\n            [/*start*/ 0x1A1B, /*end*/ 0x1A1B, 14 /* Extend */],\n            [/*start*/ 0x1A55, /*end*/ 0x1A55, 14 /* Extend */],\n            [/*start*/ 0x1A56, /*end*/ 0x1A56, 14 /* Extend */],\n            [/*start*/ 0x1A57, /*end*/ 0x1A57, 14 /* Extend */],\n            [/*start*/ 0x1A58, /*end*/ 0x1A5E, 14 /* Extend */],\n            [/*start*/ 0x1A60, /*end*/ 0x1A60, 14 /* Extend */],\n            [/*start*/ 0x1A61, /*end*/ 0x1A61, 14 /* Extend */],\n            [/*start*/ 0x1A62, /*end*/ 0x1A62, 14 /* Extend */],\n            [/*start*/ 0x1A63, /*end*/ 0x1A64, 14 /* Extend */],\n            [/*start*/ 0x1A65, /*end*/ 0x1A6C, 14 /* Extend */],\n            [/*start*/ 0x1A6D, /*end*/ 0x1A72, 14 /* Extend */],\n            [/*start*/ 0x1A73, /*end*/ 0x1A7C, 14 /* Extend */],\n            [/*start*/ 0x1A7F, /*end*/ 0x1A7F, 14 /* Extend */],\n            [/*start*/ 0x1A80, /*end*/ 0x1A89, 9 /* Numeric */],\n            [/*start*/ 0x1A90, /*end*/ 0x1A99, 9 /* Numeric */],\n            [/*start*/ 0x1AB0, /*end*/ 0x1ABD, 14 /* Extend */],\n            [/*start*/ 0x1ABE, /*end*/ 0x1ABE, 14 /* Extend */],\n            [/*start*/ 0x1B00, /*end*/ 0x1B03, 14 /* Extend */],\n            [/*start*/ 0x1B04, /*end*/ 0x1B04, 14 /* Extend */],\n            [/*start*/ 0x1B05, /*end*/ 0x1B33, 11 /* ALetter */],\n            [/*start*/ 0x1B34, /*end*/ 0x1B34, 14 /* Extend */],\n            [/*start*/ 0x1B35, /*end*/ 0x1B35, 14 /* Extend */],\n            [/*start*/ 0x1B36, /*end*/ 0x1B3A, 14 /* Extend */],\n            [/*start*/ 0x1B3B, /*end*/ 0x1B3B, 14 /* Extend */],\n            [/*start*/ 0x1B3C, /*end*/ 0x1B3C, 14 /* Extend */],\n            [/*start*/ 0x1B3D, /*end*/ 0x1B41, 14 /* Extend */],\n            [/*start*/ 0x1B42, /*end*/ 0x1B42, 14 /* Extend */],\n            [/*start*/ 0x1B43, /*end*/ 0x1B44, 14 /* Extend */],\n            [/*start*/ 0x1B45, /*end*/ 0x1B4B, 11 /* ALetter */],\n            [/*start*/ 0x1B50, /*end*/ 0x1B59, 9 /* Numeric */],\n            [/*start*/ 0x1B6B, /*end*/ 0x1B73, 14 /* Extend */],\n            [/*start*/ 0x1B80, /*end*/ 0x1B81, 14 /* Extend */],\n            [/*start*/ 0x1B82, /*end*/ 0x1B82, 14 /* Extend */],\n            [/*start*/ 0x1B83, /*end*/ 0x1BA0, 11 /* ALetter */],\n            [/*start*/ 0x1BA1, /*end*/ 0x1BA1, 14 /* Extend */],\n            [/*start*/ 0x1BA2, /*end*/ 0x1BA5, 14 /* Extend */],\n            [/*start*/ 0x1BA6, /*end*/ 0x1BA7, 14 /* Extend */],\n            [/*start*/ 0x1BA8, /*end*/ 0x1BA9, 14 /* Extend */],\n            [/*start*/ 0x1BAA, /*end*/ 0x1BAA, 14 /* Extend */],\n            [/*start*/ 0x1BAB, /*end*/ 0x1BAD, 14 /* Extend */],\n            [/*start*/ 0x1BAE, /*end*/ 0x1BAF, 11 /* ALetter */],\n            [/*start*/ 0x1BB0, /*end*/ 0x1BB9, 9 /* Numeric */],\n            [/*start*/ 0x1BBA, /*end*/ 0x1BE5, 11 /* ALetter */],\n            [/*start*/ 0x1BE6, /*end*/ 0x1BE6, 14 /* Extend */],\n            [/*start*/ 0x1BE7, /*end*/ 0x1BE7, 14 /* Extend */],\n            [/*start*/ 0x1BE8, /*end*/ 0x1BE9, 14 /* Extend */],\n            [/*start*/ 0x1BEA, /*end*/ 0x1BEC, 14 /* Extend */],\n            [/*start*/ 0x1BED, /*end*/ 0x1BED, 14 /* Extend */],\n            [/*start*/ 0x1BEE, /*end*/ 0x1BEE, 14 /* Extend */],\n            [/*start*/ 0x1BEF, /*end*/ 0x1BF1, 14 /* Extend */],\n            [/*start*/ 0x1BF2, /*end*/ 0x1BF3, 14 /* Extend */],\n            [/*start*/ 0x1C00, /*end*/ 0x1C23, 11 /* ALetter */],\n            [/*start*/ 0x1C24, /*end*/ 0x1C2B, 14 /* Extend */],\n            [/*start*/ 0x1C2C, /*end*/ 0x1C33, 14 /* Extend */],\n            [/*start*/ 0x1C34, /*end*/ 0x1C35, 14 /* Extend */],\n            [/*start*/ 0x1C36, /*end*/ 0x1C37, 14 /* Extend */],\n            [/*start*/ 0x1C40, /*end*/ 0x1C49, 9 /* Numeric */],\n            [/*start*/ 0x1C4D, /*end*/ 0x1C4F, 11 /* ALetter */],\n            [/*start*/ 0x1C50, /*end*/ 0x1C59, 9 /* Numeric */],\n            [/*start*/ 0x1C5A, /*end*/ 0x1C77, 11 /* ALetter */],\n            [/*start*/ 0x1C78, /*end*/ 0x1C7D, 11 /* ALetter */],\n            [/*start*/ 0x1C80, /*end*/ 0x1C88, 11 /* ALetter */],\n            [/*start*/ 0x1C90, /*end*/ 0x1CBA, 11 /* ALetter */],\n            [/*start*/ 0x1CBD, /*end*/ 0x1CBF, 11 /* ALetter */],\n            [/*start*/ 0x1CD0, /*end*/ 0x1CD2, 14 /* Extend */],\n            [/*start*/ 0x1CD4, /*end*/ 0x1CE0, 14 /* Extend */],\n            [/*start*/ 0x1CE1, /*end*/ 0x1CE1, 14 /* Extend */],\n            [/*start*/ 0x1CE2, /*end*/ 0x1CE8, 14 /* Extend */],\n            [/*start*/ 0x1CE9, /*end*/ 0x1CEC, 11 /* ALetter */],\n            [/*start*/ 0x1CED, /*end*/ 0x1CED, 14 /* Extend */],\n            [/*start*/ 0x1CEE, /*end*/ 0x1CF3, 11 /* ALetter */],\n            [/*start*/ 0x1CF4, /*end*/ 0x1CF4, 14 /* Extend */],\n            [/*start*/ 0x1CF5, /*end*/ 0x1CF6, 11 /* ALetter */],\n            [/*start*/ 0x1CF7, /*end*/ 0x1CF7, 14 /* Extend */],\n            [/*start*/ 0x1CF8, /*end*/ 0x1CF9, 14 /* Extend */],\n            [/*start*/ 0x1CFA, /*end*/ 0x1CFA, 11 /* ALetter */],\n            [/*start*/ 0x1D00, /*end*/ 0x1D2B, 11 /* ALetter */],\n            [/*start*/ 0x1D2C, /*end*/ 0x1D6A, 11 /* ALetter */],\n            [/*start*/ 0x1D6B, /*end*/ 0x1D77, 11 /* ALetter */],\n            [/*start*/ 0x1D78, /*end*/ 0x1D78, 11 /* ALetter */],\n            [/*start*/ 0x1D79, /*end*/ 0x1D9A, 11 /* ALetter */],\n            [/*start*/ 0x1D9B, /*end*/ 0x1DBF, 11 /* ALetter */],\n            [/*start*/ 0x1DC0, /*end*/ 0x1DF9, 14 /* Extend */],\n            [/*start*/ 0x1DFB, /*end*/ 0x1DFF, 14 /* Extend */],\n            [/*start*/ 0x1E00, /*end*/ 0x1F15, 11 /* ALetter */],\n            [/*start*/ 0x1F18, /*end*/ 0x1F1D, 11 /* ALetter */],\n            [/*start*/ 0x1F20, /*end*/ 0x1F45, 11 /* ALetter */],\n            [/*start*/ 0x1F48, /*end*/ 0x1F4D, 11 /* ALetter */],\n            [/*start*/ 0x1F50, /*end*/ 0x1F57, 11 /* ALetter */],\n            [/*start*/ 0x1F59, /*end*/ 0x1F59, 11 /* ALetter */],\n            [/*start*/ 0x1F5B, /*end*/ 0x1F5B, 11 /* ALetter */],\n            [/*start*/ 0x1F5D, /*end*/ 0x1F5D, 11 /* ALetter */],\n            [/*start*/ 0x1F5F, /*end*/ 0x1F7D, 11 /* ALetter */],\n            [/*start*/ 0x1F80, /*end*/ 0x1FB4, 11 /* ALetter */],\n            [/*start*/ 0x1FB6, /*end*/ 0x1FBC, 11 /* ALetter */],\n            [/*start*/ 0x1FBE, /*end*/ 0x1FBE, 11 /* ALetter */],\n            [/*start*/ 0x1FC2, /*end*/ 0x1FC4, 11 /* ALetter */],\n            [/*start*/ 0x1FC6, /*end*/ 0x1FCC, 11 /* ALetter */],\n            [/*start*/ 0x1FD0, /*end*/ 0x1FD3, 11 /* ALetter */],\n            [/*start*/ 0x1FD6, /*end*/ 0x1FDB, 11 /* ALetter */],\n            [/*start*/ 0x1FE0, /*end*/ 0x1FEC, 11 /* ALetter */],\n            [/*start*/ 0x1FF2, /*end*/ 0x1FF4, 11 /* ALetter */],\n            [/*start*/ 0x1FF6, /*end*/ 0x1FFC, 11 /* ALetter */],\n            [/*start*/ 0x2000, /*end*/ 0x2006, 4 /* WSegSpace */],\n            [/*start*/ 0x2008, /*end*/ 0x200A, 4 /* WSegSpace */],\n            [/*start*/ 0x200C, /*end*/ 0x200C, 14 /* Extend */],\n            [/*start*/ 0x200D, /*end*/ 0x200D, 16 /* ZWJ */],\n            [/*start*/ 0x200E, /*end*/ 0x200F, 13 /* Format */],\n            [/*start*/ 0x2018, /*end*/ 0x2018, 8 /* MidNumLet */],\n            [/*start*/ 0x2019, /*end*/ 0x2019, 8 /* MidNumLet */],\n            [/*start*/ 0x2024, /*end*/ 0x2024, 8 /* MidNumLet */],\n            [/*start*/ 0x2027, /*end*/ 0x2027, 10 /* MidLetter */],\n            [/*start*/ 0x2028, /*end*/ 0x2028, 2 /* Newline */],\n            [/*start*/ 0x2029, /*end*/ 0x2029, 2 /* Newline */],\n            [/*start*/ 0x202A, /*end*/ 0x202E, 13 /* Format */],\n            [/*start*/ 0x202F, /*end*/ 0x202F, 12 /* ExtendNumLet */],\n            [/*start*/ 0x203F, /*end*/ 0x2040, 12 /* ExtendNumLet */],\n            [/*start*/ 0x2044, /*end*/ 0x2044, 7 /* MidNum */],\n            [/*start*/ 0x2054, /*end*/ 0x2054, 12 /* ExtendNumLet */],\n            [/*start*/ 0x205F, /*end*/ 0x205F, 4 /* WSegSpace */],\n            [/*start*/ 0x2060, /*end*/ 0x2064, 13 /* Format */],\n            [/*start*/ 0x2066, /*end*/ 0x206F, 13 /* Format */],\n            [/*start*/ 0x2071, /*end*/ 0x2071, 11 /* ALetter */],\n            [/*start*/ 0x207F, /*end*/ 0x207F, 11 /* ALetter */],\n            [/*start*/ 0x2090, /*end*/ 0x209C, 11 /* ALetter */],\n            [/*start*/ 0x20D0, /*end*/ 0x20DC, 14 /* Extend */],\n            [/*start*/ 0x20DD, /*end*/ 0x20E0, 14 /* Extend */],\n            [/*start*/ 0x20E1, /*end*/ 0x20E1, 14 /* Extend */],\n            [/*start*/ 0x20E2, /*end*/ 0x20E4, 14 /* Extend */],\n            [/*start*/ 0x20E5, /*end*/ 0x20F0, 14 /* Extend */],\n            [/*start*/ 0x2102, /*end*/ 0x2102, 11 /* ALetter */],\n            [/*start*/ 0x2107, /*end*/ 0x2107, 11 /* ALetter */],\n            [/*start*/ 0x210A, /*end*/ 0x2113, 11 /* ALetter */],\n            [/*start*/ 0x2115, /*end*/ 0x2115, 11 /* ALetter */],\n            [/*start*/ 0x2119, /*end*/ 0x211D, 11 /* ALetter */],\n            [/*start*/ 0x2124, /*end*/ 0x2124, 11 /* ALetter */],\n            [/*start*/ 0x2126, /*end*/ 0x2126, 11 /* ALetter */],\n            [/*start*/ 0x2128, /*end*/ 0x2128, 11 /* ALetter */],\n            [/*start*/ 0x212A, /*end*/ 0x212D, 11 /* ALetter */],\n            [/*start*/ 0x212F, /*end*/ 0x2134, 11 /* ALetter */],\n            [/*start*/ 0x2135, /*end*/ 0x2138, 11 /* ALetter */],\n            [/*start*/ 0x2139, /*end*/ 0x2139, 11 /* ALetter */],\n            [/*start*/ 0x213C, /*end*/ 0x213F, 11 /* ALetter */],\n            [/*start*/ 0x2145, /*end*/ 0x2149, 11 /* ALetter */],\n            [/*start*/ 0x214E, /*end*/ 0x214E, 11 /* ALetter */],\n            [/*start*/ 0x2160, /*end*/ 0x2182, 11 /* ALetter */],\n            [/*start*/ 0x2183, /*end*/ 0x2184, 11 /* ALetter */],\n            [/*start*/ 0x2185, /*end*/ 0x2188, 11 /* ALetter */],\n            [/*start*/ 0x24B6, /*end*/ 0x24E9, 11 /* ALetter */],\n            [/*start*/ 0x2C00, /*end*/ 0x2C2E, 11 /* ALetter */],\n            [/*start*/ 0x2C30, /*end*/ 0x2C5E, 11 /* ALetter */],\n            [/*start*/ 0x2C60, /*end*/ 0x2C7B, 11 /* ALetter */],\n            [/*start*/ 0x2C7C, /*end*/ 0x2C7D, 11 /* ALetter */],\n            [/*start*/ 0x2C7E, /*end*/ 0x2CE4, 11 /* ALetter */],\n            [/*start*/ 0x2CEB, /*end*/ 0x2CEE, 11 /* ALetter */],\n            [/*start*/ 0x2CEF, /*end*/ 0x2CF1, 14 /* Extend */],\n            [/*start*/ 0x2CF2, /*end*/ 0x2CF3, 11 /* ALetter */],\n            [/*start*/ 0x2D00, /*end*/ 0x2D25, 11 /* ALetter */],\n            [/*start*/ 0x2D27, /*end*/ 0x2D27, 11 /* ALetter */],\n            [/*start*/ 0x2D2D, /*end*/ 0x2D2D, 11 /* ALetter */],\n            [/*start*/ 0x2D30, /*end*/ 0x2D67, 11 /* ALetter */],\n            [/*start*/ 0x2D6F, /*end*/ 0x2D6F, 11 /* ALetter */],\n            [/*start*/ 0x2D7F, /*end*/ 0x2D7F, 14 /* Extend */],\n            [/*start*/ 0x2D80, /*end*/ 0x2D96, 11 /* ALetter */],\n            [/*start*/ 0x2DA0, /*end*/ 0x2DA6, 11 /* ALetter */],\n            [/*start*/ 0x2DA8, /*end*/ 0x2DAE, 11 /* ALetter */],\n            [/*start*/ 0x2DB0, /*end*/ 0x2DB6, 11 /* ALetter */],\n            [/*start*/ 0x2DB8, /*end*/ 0x2DBE, 11 /* ALetter */],\n            [/*start*/ 0x2DC0, /*end*/ 0x2DC6, 11 /* ALetter */],\n            [/*start*/ 0x2DC8, /*end*/ 0x2DCE, 11 /* ALetter */],\n            [/*start*/ 0x2DD0, /*end*/ 0x2DD6, 11 /* ALetter */],\n            [/*start*/ 0x2DD8, /*end*/ 0x2DDE, 11 /* ALetter */],\n            [/*start*/ 0x2DE0, /*end*/ 0x2DFF, 14 /* Extend */],\n            [/*start*/ 0x2E2F, /*end*/ 0x2E2F, 11 /* ALetter */],\n            [/*start*/ 0x3000, /*end*/ 0x3000, 4 /* WSegSpace */],\n            [/*start*/ 0x3005, /*end*/ 0x3005, 11 /* ALetter */],\n            [/*start*/ 0x302A, /*end*/ 0x302D, 14 /* Extend */],\n            [/*start*/ 0x302E, /*end*/ 0x302F, 14 /* Extend */],\n            [/*start*/ 0x3031, /*end*/ 0x3035, 17 /* Katakana */],\n            [/*start*/ 0x303B, /*end*/ 0x303B, 11 /* ALetter */],\n            [/*start*/ 0x303C, /*end*/ 0x303C, 11 /* ALetter */],\n            [/*start*/ 0x3099, /*end*/ 0x309A, 14 /* Extend */],\n            [/*start*/ 0x309B, /*end*/ 0x309C, 17 /* Katakana */],\n            [/*start*/ 0x30A0, /*end*/ 0x30A0, 17 /* Katakana */],\n            [/*start*/ 0x30A1, /*end*/ 0x30FA, 17 /* Katakana */],\n            [/*start*/ 0x30FC, /*end*/ 0x30FE, 17 /* Katakana */],\n            [/*start*/ 0x30FF, /*end*/ 0x30FF, 17 /* Katakana */],\n            [/*start*/ 0x3105, /*end*/ 0x312F, 11 /* ALetter */],\n            [/*start*/ 0x3131, /*end*/ 0x318E, 11 /* ALetter */],\n            [/*start*/ 0x31A0, /*end*/ 0x31BA, 11 /* ALetter */],\n            [/*start*/ 0x31F0, /*end*/ 0x31FF, 17 /* Katakana */],\n            [/*start*/ 0x32D0, /*end*/ 0x32FE, 17 /* Katakana */],\n            [/*start*/ 0x3300, /*end*/ 0x3357, 17 /* Katakana */],\n            [/*start*/ 0xA000, /*end*/ 0xA014, 11 /* ALetter */],\n            [/*start*/ 0xA015, /*end*/ 0xA015, 11 /* ALetter */],\n            [/*start*/ 0xA016, /*end*/ 0xA48C, 11 /* ALetter */],\n            [/*start*/ 0xA4D0, /*end*/ 0xA4F7, 11 /* ALetter */],\n            [/*start*/ 0xA4F8, /*end*/ 0xA4FD, 11 /* ALetter */],\n            [/*start*/ 0xA500, /*end*/ 0xA60B, 11 /* ALetter */],\n            [/*start*/ 0xA60C, /*end*/ 0xA60C, 11 /* ALetter */],\n            [/*start*/ 0xA610, /*end*/ 0xA61F, 11 /* ALetter */],\n            [/*start*/ 0xA620, /*end*/ 0xA629, 9 /* Numeric */],\n            [/*start*/ 0xA62A, /*end*/ 0xA62B, 11 /* ALetter */],\n            [/*start*/ 0xA640, /*end*/ 0xA66D, 11 /* ALetter */],\n            [/*start*/ 0xA66E, /*end*/ 0xA66E, 11 /* ALetter */],\n            [/*start*/ 0xA66F, /*end*/ 0xA66F, 14 /* Extend */],\n            [/*start*/ 0xA670, /*end*/ 0xA672, 14 /* Extend */],\n            [/*start*/ 0xA674, /*end*/ 0xA67D, 14 /* Extend */],\n            [/*start*/ 0xA67F, /*end*/ 0xA67F, 11 /* ALetter */],\n            [/*start*/ 0xA680, /*end*/ 0xA69B, 11 /* ALetter */],\n            [/*start*/ 0xA69C, /*end*/ 0xA69D, 11 /* ALetter */],\n            [/*start*/ 0xA69E, /*end*/ 0xA69F, 14 /* Extend */],\n            [/*start*/ 0xA6A0, /*end*/ 0xA6E5, 11 /* ALetter */],\n            [/*start*/ 0xA6E6, /*end*/ 0xA6EF, 11 /* ALetter */],\n            [/*start*/ 0xA6F0, /*end*/ 0xA6F1, 14 /* Extend */],\n            [/*start*/ 0xA717, /*end*/ 0xA71F, 11 /* ALetter */],\n            [/*start*/ 0xA720, /*end*/ 0xA721, 11 /* ALetter */],\n            [/*start*/ 0xA722, /*end*/ 0xA76F, 11 /* ALetter */],\n            [/*start*/ 0xA770, /*end*/ 0xA770, 11 /* ALetter */],\n            [/*start*/ 0xA771, /*end*/ 0xA787, 11 /* ALetter */],\n            [/*start*/ 0xA788, /*end*/ 0xA788, 11 /* ALetter */],\n            [/*start*/ 0xA789, /*end*/ 0xA78A, 11 /* ALetter */],\n            [/*start*/ 0xA78B, /*end*/ 0xA78E, 11 /* ALetter */],\n            [/*start*/ 0xA78F, /*end*/ 0xA78F, 11 /* ALetter */],\n            [/*start*/ 0xA790, /*end*/ 0xA7BF, 11 /* ALetter */],\n            [/*start*/ 0xA7C2, /*end*/ 0xA7C6, 11 /* ALetter */],\n            [/*start*/ 0xA7F7, /*end*/ 0xA7F7, 11 /* ALetter */],\n            [/*start*/ 0xA7F8, /*end*/ 0xA7F9, 11 /* ALetter */],\n            [/*start*/ 0xA7FA, /*end*/ 0xA7FA, 11 /* ALetter */],\n            [/*start*/ 0xA7FB, /*end*/ 0xA801, 11 /* ALetter */],\n            [/*start*/ 0xA802, /*end*/ 0xA802, 14 /* Extend */],\n            [/*start*/ 0xA803, /*end*/ 0xA805, 11 /* ALetter */],\n            [/*start*/ 0xA806, /*end*/ 0xA806, 14 /* Extend */],\n            [/*start*/ 0xA807, /*end*/ 0xA80A, 11 /* ALetter */],\n            [/*start*/ 0xA80B, /*end*/ 0xA80B, 14 /* Extend */],\n            [/*start*/ 0xA80C, /*end*/ 0xA822, 11 /* ALetter */],\n            [/*start*/ 0xA823, /*end*/ 0xA824, 14 /* Extend */],\n            [/*start*/ 0xA825, /*end*/ 0xA826, 14 /* Extend */],\n            [/*start*/ 0xA827, /*end*/ 0xA827, 14 /* Extend */],\n            [/*start*/ 0xA840, /*end*/ 0xA873, 11 /* ALetter */],\n            [/*start*/ 0xA880, /*end*/ 0xA881, 14 /* Extend */],\n            [/*start*/ 0xA882, /*end*/ 0xA8B3, 11 /* ALetter */],\n            [/*start*/ 0xA8B4, /*end*/ 0xA8C3, 14 /* Extend */],\n            [/*start*/ 0xA8C4, /*end*/ 0xA8C5, 14 /* Extend */],\n            [/*start*/ 0xA8D0, /*end*/ 0xA8D9, 9 /* Numeric */],\n            [/*start*/ 0xA8E0, /*end*/ 0xA8F1, 14 /* Extend */],\n            [/*start*/ 0xA8F2, /*end*/ 0xA8F7, 11 /* ALetter */],\n            [/*start*/ 0xA8FB, /*end*/ 0xA8FB, 11 /* ALetter */],\n            [/*start*/ 0xA8FD, /*end*/ 0xA8FE, 11 /* ALetter */],\n            [/*start*/ 0xA8FF, /*end*/ 0xA8FF, 14 /* Extend */],\n            [/*start*/ 0xA900, /*end*/ 0xA909, 9 /* Numeric */],\n            [/*start*/ 0xA90A, /*end*/ 0xA925, 11 /* ALetter */],\n            [/*start*/ 0xA926, /*end*/ 0xA92D, 14 /* Extend */],\n            [/*start*/ 0xA930, /*end*/ 0xA946, 11 /* ALetter */],\n            [/*start*/ 0xA947, /*end*/ 0xA951, 14 /* Extend */],\n            [/*start*/ 0xA952, /*end*/ 0xA953, 14 /* Extend */],\n            [/*start*/ 0xA960, /*end*/ 0xA97C, 11 /* ALetter */],\n            [/*start*/ 0xA980, /*end*/ 0xA982, 14 /* Extend */],\n            [/*start*/ 0xA983, /*end*/ 0xA983, 14 /* Extend */],\n            [/*start*/ 0xA984, /*end*/ 0xA9B2, 11 /* ALetter */],\n            [/*start*/ 0xA9B3, /*end*/ 0xA9B3, 14 /* Extend */],\n            [/*start*/ 0xA9B4, /*end*/ 0xA9B5, 14 /* Extend */],\n            [/*start*/ 0xA9B6, /*end*/ 0xA9B9, 14 /* Extend */],\n            [/*start*/ 0xA9BA, /*end*/ 0xA9BB, 14 /* Extend */],\n            [/*start*/ 0xA9BC, /*end*/ 0xA9BD, 14 /* Extend */],\n            [/*start*/ 0xA9BE, /*end*/ 0xA9C0, 14 /* Extend */],\n            [/*start*/ 0xA9CF, /*end*/ 0xA9CF, 11 /* ALetter */],\n            [/*start*/ 0xA9D0, /*end*/ 0xA9D9, 9 /* Numeric */],\n            [/*start*/ 0xA9E5, /*end*/ 0xA9E5, 14 /* Extend */],\n            [/*start*/ 0xA9F0, /*end*/ 0xA9F9, 9 /* Numeric */],\n            [/*start*/ 0xAA00, /*end*/ 0xAA28, 11 /* ALetter */],\n            [/*start*/ 0xAA29, /*end*/ 0xAA2E, 14 /* Extend */],\n            [/*start*/ 0xAA2F, /*end*/ 0xAA30, 14 /* Extend */],\n            [/*start*/ 0xAA31, /*end*/ 0xAA32, 14 /* Extend */],\n            [/*start*/ 0xAA33, /*end*/ 0xAA34, 14 /* Extend */],\n            [/*start*/ 0xAA35, /*end*/ 0xAA36, 14 /* Extend */],\n            [/*start*/ 0xAA40, /*end*/ 0xAA42, 11 /* ALetter */],\n            [/*start*/ 0xAA43, /*end*/ 0xAA43, 14 /* Extend */],\n            [/*start*/ 0xAA44, /*end*/ 0xAA4B, 11 /* ALetter */],\n            [/*start*/ 0xAA4C, /*end*/ 0xAA4C, 14 /* Extend */],\n            [/*start*/ 0xAA4D, /*end*/ 0xAA4D, 14 /* Extend */],\n            [/*start*/ 0xAA50, /*end*/ 0xAA59, 9 /* Numeric */],\n            [/*start*/ 0xAA7B, /*end*/ 0xAA7B, 14 /* Extend */],\n            [/*start*/ 0xAA7C, /*end*/ 0xAA7C, 14 /* Extend */],\n            [/*start*/ 0xAA7D, /*end*/ 0xAA7D, 14 /* Extend */],\n            [/*start*/ 0xAAB0, /*end*/ 0xAAB0, 14 /* Extend */],\n            [/*start*/ 0xAAB2, /*end*/ 0xAAB4, 14 /* Extend */],\n            [/*start*/ 0xAAB7, /*end*/ 0xAAB8, 14 /* Extend */],\n            [/*start*/ 0xAABE, /*end*/ 0xAABF, 14 /* Extend */],\n            [/*start*/ 0xAAC1, /*end*/ 0xAAC1, 14 /* Extend */],\n            [/*start*/ 0xAAE0, /*end*/ 0xAAEA, 11 /* ALetter */],\n            [/*start*/ 0xAAEB, /*end*/ 0xAAEB, 14 /* Extend */],\n            [/*start*/ 0xAAEC, /*end*/ 0xAAED, 14 /* Extend */],\n            [/*start*/ 0xAAEE, /*end*/ 0xAAEF, 14 /* Extend */],\n            [/*start*/ 0xAAF2, /*end*/ 0xAAF2, 11 /* ALetter */],\n            [/*start*/ 0xAAF3, /*end*/ 0xAAF4, 11 /* ALetter */],\n            [/*start*/ 0xAAF5, /*end*/ 0xAAF5, 14 /* Extend */],\n            [/*start*/ 0xAAF6, /*end*/ 0xAAF6, 14 /* Extend */],\n            [/*start*/ 0xAB01, /*end*/ 0xAB06, 11 /* ALetter */],\n            [/*start*/ 0xAB09, /*end*/ 0xAB0E, 11 /* ALetter */],\n            [/*start*/ 0xAB11, /*end*/ 0xAB16, 11 /* ALetter */],\n            [/*start*/ 0xAB20, /*end*/ 0xAB26, 11 /* ALetter */],\n            [/*start*/ 0xAB28, /*end*/ 0xAB2E, 11 /* ALetter */],\n            [/*start*/ 0xAB30, /*end*/ 0xAB5A, 11 /* ALetter */],\n            [/*start*/ 0xAB5B, /*end*/ 0xAB5B, 11 /* ALetter */],\n            [/*start*/ 0xAB5C, /*end*/ 0xAB5F, 11 /* ALetter */],\n            [/*start*/ 0xAB60, /*end*/ 0xAB67, 11 /* ALetter */],\n            [/*start*/ 0xAB70, /*end*/ 0xABBF, 11 /* ALetter */],\n            [/*start*/ 0xABC0, /*end*/ 0xABE2, 11 /* ALetter */],\n            [/*start*/ 0xABE3, /*end*/ 0xABE4, 14 /* Extend */],\n            [/*start*/ 0xABE5, /*end*/ 0xABE5, 14 /* Extend */],\n            [/*start*/ 0xABE6, /*end*/ 0xABE7, 14 /* Extend */],\n            [/*start*/ 0xABE8, /*end*/ 0xABE8, 14 /* Extend */],\n            [/*start*/ 0xABE9, /*end*/ 0xABEA, 14 /* Extend */],\n            [/*start*/ 0xABEC, /*end*/ 0xABEC, 14 /* Extend */],\n            [/*start*/ 0xABED, /*end*/ 0xABED, 14 /* Extend */],\n            [/*start*/ 0xABF0, /*end*/ 0xABF9, 9 /* Numeric */],\n            [/*start*/ 0xAC00, /*end*/ 0xD7A3, 11 /* ALetter */],\n            [/*start*/ 0xD7B0, /*end*/ 0xD7C6, 11 /* ALetter */],\n            [/*start*/ 0xD7CB, /*end*/ 0xD7FB, 11 /* ALetter */],\n            [/*start*/ 0xFB00, /*end*/ 0xFB06, 11 /* ALetter */],\n            [/*start*/ 0xFB13, /*end*/ 0xFB17, 11 /* ALetter */],\n            [/*start*/ 0xFB1D, /*end*/ 0xFB1D, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB1E, /*end*/ 0xFB1E, 14 /* Extend */],\n            [/*start*/ 0xFB1F, /*end*/ 0xFB28, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB2A, /*end*/ 0xFB36, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB38, /*end*/ 0xFB3C, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB3E, /*end*/ 0xFB3E, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB40, /*end*/ 0xFB41, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB43, /*end*/ 0xFB44, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB46, /*end*/ 0xFB4F, 15 /* Hebrew_Letter */],\n            [/*start*/ 0xFB50, /*end*/ 0xFBB1, 11 /* ALetter */],\n            [/*start*/ 0xFBD3, /*end*/ 0xFD3D, 11 /* ALetter */],\n            [/*start*/ 0xFD50, /*end*/ 0xFD8F, 11 /* ALetter */],\n            [/*start*/ 0xFD92, /*end*/ 0xFDC7, 11 /* ALetter */],\n            [/*start*/ 0xFDF0, /*end*/ 0xFDFB, 11 /* ALetter */],\n            [/*start*/ 0xFE00, /*end*/ 0xFE0F, 14 /* Extend */],\n            [/*start*/ 0xFE10, /*end*/ 0xFE10, 7 /* MidNum */],\n            [/*start*/ 0xFE13, /*end*/ 0xFE13, 10 /* MidLetter */],\n            [/*start*/ 0xFE14, /*end*/ 0xFE14, 7 /* MidNum */],\n            [/*start*/ 0xFE20, /*end*/ 0xFE2F, 14 /* Extend */],\n            [/*start*/ 0xFE33, /*end*/ 0xFE34, 12 /* ExtendNumLet */],\n            [/*start*/ 0xFE4D, /*end*/ 0xFE4F, 12 /* ExtendNumLet */],\n            [/*start*/ 0xFE50, /*end*/ 0xFE50, 7 /* MidNum */],\n            [/*start*/ 0xFE52, /*end*/ 0xFE52, 8 /* MidNumLet */],\n            [/*start*/ 0xFE54, /*end*/ 0xFE54, 7 /* MidNum */],\n            [/*start*/ 0xFE55, /*end*/ 0xFE55, 10 /* MidLetter */],\n            [/*start*/ 0xFE70, /*end*/ 0xFE74, 11 /* ALetter */],\n            [/*start*/ 0xFE76, /*end*/ 0xFEFC, 11 /* ALetter */],\n            [/*start*/ 0xFEFF, /*end*/ 0xFEFF, 13 /* Format */],\n            [/*start*/ 0xFF07, /*end*/ 0xFF07, 8 /* MidNumLet */],\n            [/*start*/ 0xFF0C, /*end*/ 0xFF0C, 7 /* MidNum */],\n            [/*start*/ 0xFF0E, /*end*/ 0xFF0E, 8 /* MidNumLet */],\n            [/*start*/ 0xFF10, /*end*/ 0xFF19, 9 /* Numeric */],\n            [/*start*/ 0xFF1A, /*end*/ 0xFF1A, 10 /* MidLetter */],\n            [/*start*/ 0xFF1B, /*end*/ 0xFF1B, 7 /* MidNum */],\n            [/*start*/ 0xFF21, /*end*/ 0xFF3A, 11 /* ALetter */],\n            [/*start*/ 0xFF3F, /*end*/ 0xFF3F, 12 /* ExtendNumLet */],\n            [/*start*/ 0xFF41, /*end*/ 0xFF5A, 11 /* ALetter */],\n            [/*start*/ 0xFF66, /*end*/ 0xFF6F, 17 /* Katakana */],\n            [/*start*/ 0xFF70, /*end*/ 0xFF70, 17 /* Katakana */],\n            [/*start*/ 0xFF71, /*end*/ 0xFF9D, 17 /* Katakana */],\n            [/*start*/ 0xFF9E, /*end*/ 0xFF9F, 14 /* Extend */],\n            [/*start*/ 0xFFA0, /*end*/ 0xFFBE, 11 /* ALetter */],\n            [/*start*/ 0xFFC2, /*end*/ 0xFFC7, 11 /* ALetter */],\n            [/*start*/ 0xFFCA, /*end*/ 0xFFCF, 11 /* ALetter */],\n            [/*start*/ 0xFFD2, /*end*/ 0xFFD7, 11 /* ALetter */],\n            [/*start*/ 0xFFDA, /*end*/ 0xFFDC, 11 /* ALetter */],\n            [/*start*/ 0xFFF9, /*end*/ 0xFFFB, 13 /* Format */],\n            [/*start*/ 0x10000, /*end*/ 0x1000B, 11 /* ALetter */],\n            [/*start*/ 0x1000D, /*end*/ 0x10026, 11 /* ALetter */],\n            [/*start*/ 0x10028, /*end*/ 0x1003A, 11 /* ALetter */],\n            [/*start*/ 0x1003C, /*end*/ 0x1003D, 11 /* ALetter */],\n            [/*start*/ 0x1003F, /*end*/ 0x1004D, 11 /* ALetter */],\n            [/*start*/ 0x10050, /*end*/ 0x1005D, 11 /* ALetter */],\n            [/*start*/ 0x10080, /*end*/ 0x100FA, 11 /* ALetter */],\n            [/*start*/ 0x10140, /*end*/ 0x10174, 11 /* ALetter */],\n            [/*start*/ 0x101FD, /*end*/ 0x101FD, 14 /* Extend */],\n            [/*start*/ 0x10280, /*end*/ 0x1029C, 11 /* ALetter */],\n            [/*start*/ 0x102A0, /*end*/ 0x102D0, 11 /* ALetter */],\n            [/*start*/ 0x102E0, /*end*/ 0x102E0, 14 /* Extend */],\n            [/*start*/ 0x10300, /*end*/ 0x1031F, 11 /* ALetter */],\n            [/*start*/ 0x1032D, /*end*/ 0x10340, 11 /* ALetter */],\n            [/*start*/ 0x10341, /*end*/ 0x10341, 11 /* ALetter */],\n            [/*start*/ 0x10342, /*end*/ 0x10349, 11 /* ALetter */],\n            [/*start*/ 0x1034A, /*end*/ 0x1034A, 11 /* ALetter */],\n            [/*start*/ 0x10350, /*end*/ 0x10375, 11 /* ALetter */],\n            [/*start*/ 0x10376, /*end*/ 0x1037A, 14 /* Extend */],\n            [/*start*/ 0x10380, /*end*/ 0x1039D, 11 /* ALetter */],\n            [/*start*/ 0x103A0, /*end*/ 0x103C3, 11 /* ALetter */],\n            [/*start*/ 0x103C8, /*end*/ 0x103CF, 11 /* ALetter */],\n            [/*start*/ 0x103D1, /*end*/ 0x103D5, 11 /* ALetter */],\n            [/*start*/ 0x10400, /*end*/ 0x1044F, 11 /* ALetter */],\n            [/*start*/ 0x10450, /*end*/ 0x1049D, 11 /* ALetter */],\n            [/*start*/ 0x104A0, /*end*/ 0x104A9, 9 /* Numeric */],\n            [/*start*/ 0x104B0, /*end*/ 0x104D3, 11 /* ALetter */],\n            [/*start*/ 0x104D8, /*end*/ 0x104FB, 11 /* ALetter */],\n            [/*start*/ 0x10500, /*end*/ 0x10527, 11 /* ALetter */],\n            [/*start*/ 0x10530, /*end*/ 0x10563, 11 /* ALetter */],\n            [/*start*/ 0x10600, /*end*/ 0x10736, 11 /* ALetter */],\n            [/*start*/ 0x10740, /*end*/ 0x10755, 11 /* ALetter */],\n            [/*start*/ 0x10760, /*end*/ 0x10767, 11 /* ALetter */],\n            [/*start*/ 0x10800, /*end*/ 0x10805, 11 /* ALetter */],\n            [/*start*/ 0x10808, /*end*/ 0x10808, 11 /* ALetter */],\n            [/*start*/ 0x1080A, /*end*/ 0x10835, 11 /* ALetter */],\n            [/*start*/ 0x10837, /*end*/ 0x10838, 11 /* ALetter */],\n            [/*start*/ 0x1083C, /*end*/ 0x1083C, 11 /* ALetter */],\n            [/*start*/ 0x1083F, /*end*/ 0x10855, 11 /* ALetter */],\n            [/*start*/ 0x10860, /*end*/ 0x10876, 11 /* ALetter */],\n            [/*start*/ 0x10880, /*end*/ 0x1089E, 11 /* ALetter */],\n            [/*start*/ 0x108E0, /*end*/ 0x108F2, 11 /* ALetter */],\n            [/*start*/ 0x108F4, /*end*/ 0x108F5, 11 /* ALetter */],\n            [/*start*/ 0x10900, /*end*/ 0x10915, 11 /* ALetter */],\n            [/*start*/ 0x10920, /*end*/ 0x10939, 11 /* ALetter */],\n            [/*start*/ 0x10980, /*end*/ 0x109B7, 11 /* ALetter */],\n            [/*start*/ 0x109BE, /*end*/ 0x109BF, 11 /* ALetter */],\n            [/*start*/ 0x10A00, /*end*/ 0x10A00, 11 /* ALetter */],\n            [/*start*/ 0x10A01, /*end*/ 0x10A03, 14 /* Extend */],\n            [/*start*/ 0x10A05, /*end*/ 0x10A06, 14 /* Extend */],\n            [/*start*/ 0x10A0C, /*end*/ 0x10A0F, 14 /* Extend */],\n            [/*start*/ 0x10A10, /*end*/ 0x10A13, 11 /* ALetter */],\n            [/*start*/ 0x10A15, /*end*/ 0x10A17, 11 /* ALetter */],\n            [/*start*/ 0x10A19, /*end*/ 0x10A35, 11 /* ALetter */],\n            [/*start*/ 0x10A38, /*end*/ 0x10A3A, 14 /* Extend */],\n            [/*start*/ 0x10A3F, /*end*/ 0x10A3F, 14 /* Extend */],\n            [/*start*/ 0x10A60, /*end*/ 0x10A7C, 11 /* ALetter */],\n            [/*start*/ 0x10A80, /*end*/ 0x10A9C, 11 /* ALetter */],\n            [/*start*/ 0x10AC0, /*end*/ 0x10AC7, 11 /* ALetter */],\n            [/*start*/ 0x10AC9, /*end*/ 0x10AE4, 11 /* ALetter */],\n            [/*start*/ 0x10AE5, /*end*/ 0x10AE6, 14 /* Extend */],\n            [/*start*/ 0x10B00, /*end*/ 0x10B35, 11 /* ALetter */],\n            [/*start*/ 0x10B40, /*end*/ 0x10B55, 11 /* ALetter */],\n            [/*start*/ 0x10B60, /*end*/ 0x10B72, 11 /* ALetter */],\n            [/*start*/ 0x10B80, /*end*/ 0x10B91, 11 /* ALetter */],\n            [/*start*/ 0x10C00, /*end*/ 0x10C48, 11 /* ALetter */],\n            [/*start*/ 0x10C80, /*end*/ 0x10CB2, 11 /* ALetter */],\n            [/*start*/ 0x10CC0, /*end*/ 0x10CF2, 11 /* ALetter */],\n            [/*start*/ 0x10D00, /*end*/ 0x10D23, 11 /* ALetter */],\n            [/*start*/ 0x10D24, /*end*/ 0x10D27, 14 /* Extend */],\n            [/*start*/ 0x10D30, /*end*/ 0x10D39, 9 /* Numeric */],\n            [/*start*/ 0x10F00, /*end*/ 0x10F1C, 11 /* ALetter */],\n            [/*start*/ 0x10F27, /*end*/ 0x10F27, 11 /* ALetter */],\n            [/*start*/ 0x10F30, /*end*/ 0x10F45, 11 /* ALetter */],\n            [/*start*/ 0x10F46, /*end*/ 0x10F50, 14 /* Extend */],\n            [/*start*/ 0x10FE0, /*end*/ 0x10FF6, 11 /* ALetter */],\n            [/*start*/ 0x11000, /*end*/ 0x11000, 14 /* Extend */],\n            [/*start*/ 0x11001, /*end*/ 0x11001, 14 /* Extend */],\n            [/*start*/ 0x11002, /*end*/ 0x11002, 14 /* Extend */],\n            [/*start*/ 0x11003, /*end*/ 0x11037, 11 /* ALetter */],\n            [/*start*/ 0x11038, /*end*/ 0x11046, 14 /* Extend */],\n            [/*start*/ 0x11066, /*end*/ 0x1106F, 9 /* Numeric */],\n            [/*start*/ 0x1107F, /*end*/ 0x11081, 14 /* Extend */],\n            [/*start*/ 0x11082, /*end*/ 0x11082, 14 /* Extend */],\n            [/*start*/ 0x11083, /*end*/ 0x110AF, 11 /* ALetter */],\n            [/*start*/ 0x110B0, /*end*/ 0x110B2, 14 /* Extend */],\n            [/*start*/ 0x110B3, /*end*/ 0x110B6, 14 /* Extend */],\n            [/*start*/ 0x110B7, /*end*/ 0x110B8, 14 /* Extend */],\n            [/*start*/ 0x110B9, /*end*/ 0x110BA, 14 /* Extend */],\n            [/*start*/ 0x110BD, /*end*/ 0x110BD, 13 /* Format */],\n            [/*start*/ 0x110CD, /*end*/ 0x110CD, 13 /* Format */],\n            [/*start*/ 0x110D0, /*end*/ 0x110E8, 11 /* ALetter */],\n            [/*start*/ 0x110F0, /*end*/ 0x110F9, 9 /* Numeric */],\n            [/*start*/ 0x11100, /*end*/ 0x11102, 14 /* Extend */],\n            [/*start*/ 0x11103, /*end*/ 0x11126, 11 /* ALetter */],\n            [/*start*/ 0x11127, /*end*/ 0x1112B, 14 /* Extend */],\n            [/*start*/ 0x1112C, /*end*/ 0x1112C, 14 /* Extend */],\n            [/*start*/ 0x1112D, /*end*/ 0x11134, 14 /* Extend */],\n            [/*start*/ 0x11136, /*end*/ 0x1113F, 9 /* Numeric */],\n            [/*start*/ 0x11144, /*end*/ 0x11144, 11 /* ALetter */],\n            [/*start*/ 0x11145, /*end*/ 0x11146, 14 /* Extend */],\n            [/*start*/ 0x11150, /*end*/ 0x11172, 11 /* ALetter */],\n            [/*start*/ 0x11173, /*end*/ 0x11173, 14 /* Extend */],\n            [/*start*/ 0x11176, /*end*/ 0x11176, 11 /* ALetter */],\n            [/*start*/ 0x11180, /*end*/ 0x11181, 14 /* Extend */],\n            [/*start*/ 0x11182, /*end*/ 0x11182, 14 /* Extend */],\n            [/*start*/ 0x11183, /*end*/ 0x111B2, 11 /* ALetter */],\n            [/*start*/ 0x111B3, /*end*/ 0x111B5, 14 /* Extend */],\n            [/*start*/ 0x111B6, /*end*/ 0x111BE, 14 /* Extend */],\n            [/*start*/ 0x111BF, /*end*/ 0x111C0, 14 /* Extend */],\n            [/*start*/ 0x111C1, /*end*/ 0x111C4, 11 /* ALetter */],\n            [/*start*/ 0x111C9, /*end*/ 0x111CC, 14 /* Extend */],\n            [/*start*/ 0x111D0, /*end*/ 0x111D9, 9 /* Numeric */],\n            [/*start*/ 0x111DA, /*end*/ 0x111DA, 11 /* ALetter */],\n            [/*start*/ 0x111DC, /*end*/ 0x111DC, 11 /* ALetter */],\n            [/*start*/ 0x11200, /*end*/ 0x11211, 11 /* ALetter */],\n            [/*start*/ 0x11213, /*end*/ 0x1122B, 11 /* ALetter */],\n            [/*start*/ 0x1122C, /*end*/ 0x1122E, 14 /* Extend */],\n            [/*start*/ 0x1122F, /*end*/ 0x11231, 14 /* Extend */],\n            [/*start*/ 0x11232, /*end*/ 0x11233, 14 /* Extend */],\n            [/*start*/ 0x11234, /*end*/ 0x11234, 14 /* Extend */],\n            [/*start*/ 0x11235, /*end*/ 0x11235, 14 /* Extend */],\n            [/*start*/ 0x11236, /*end*/ 0x11237, 14 /* Extend */],\n            [/*start*/ 0x1123E, /*end*/ 0x1123E, 14 /* Extend */],\n            [/*start*/ 0x11280, /*end*/ 0x11286, 11 /* ALetter */],\n            [/*start*/ 0x11288, /*end*/ 0x11288, 11 /* ALetter */],\n            [/*start*/ 0x1128A, /*end*/ 0x1128D, 11 /* ALetter */],\n            [/*start*/ 0x1128F, /*end*/ 0x1129D, 11 /* ALetter */],\n            [/*start*/ 0x1129F, /*end*/ 0x112A8, 11 /* ALetter */],\n            [/*start*/ 0x112B0, /*end*/ 0x112DE, 11 /* ALetter */],\n            [/*start*/ 0x112DF, /*end*/ 0x112DF, 14 /* Extend */],\n            [/*start*/ 0x112E0, /*end*/ 0x112E2, 14 /* Extend */],\n            [/*start*/ 0x112E3, /*end*/ 0x112EA, 14 /* Extend */],\n            [/*start*/ 0x112F0, /*end*/ 0x112F9, 9 /* Numeric */],\n            [/*start*/ 0x11300, /*end*/ 0x11301, 14 /* Extend */],\n            [/*start*/ 0x11302, /*end*/ 0x11303, 14 /* Extend */],\n            [/*start*/ 0x11305, /*end*/ 0x1130C, 11 /* ALetter */],\n            [/*start*/ 0x1130F, /*end*/ 0x11310, 11 /* ALetter */],\n            [/*start*/ 0x11313, /*end*/ 0x11328, 11 /* ALetter */],\n            [/*start*/ 0x1132A, /*end*/ 0x11330, 11 /* ALetter */],\n            [/*start*/ 0x11332, /*end*/ 0x11333, 11 /* ALetter */],\n            [/*start*/ 0x11335, /*end*/ 0x11339, 11 /* ALetter */],\n            [/*start*/ 0x1133B, /*end*/ 0x1133C, 14 /* Extend */],\n            [/*start*/ 0x1133D, /*end*/ 0x1133D, 11 /* ALetter */],\n            [/*start*/ 0x1133E, /*end*/ 0x1133F, 14 /* Extend */],\n            [/*start*/ 0x11340, /*end*/ 0x11340, 14 /* Extend */],\n            [/*start*/ 0x11341, /*end*/ 0x11344, 14 /* Extend */],\n            [/*start*/ 0x11347, /*end*/ 0x11348, 14 /* Extend */],\n            [/*start*/ 0x1134B, /*end*/ 0x1134D, 14 /* Extend */],\n            [/*start*/ 0x11350, /*end*/ 0x11350, 11 /* ALetter */],\n            [/*start*/ 0x11357, /*end*/ 0x11357, 14 /* Extend */],\n            [/*start*/ 0x1135D, /*end*/ 0x11361, 11 /* ALetter */],\n            [/*start*/ 0x11362, /*end*/ 0x11363, 14 /* Extend */],\n            [/*start*/ 0x11366, /*end*/ 0x1136C, 14 /* Extend */],\n            [/*start*/ 0x11370, /*end*/ 0x11374, 14 /* Extend */],\n            [/*start*/ 0x11400, /*end*/ 0x11434, 11 /* ALetter */],\n            [/*start*/ 0x11435, /*end*/ 0x11437, 14 /* Extend */],\n            [/*start*/ 0x11438, /*end*/ 0x1143F, 14 /* Extend */],\n            [/*start*/ 0x11440, /*end*/ 0x11441, 14 /* Extend */],\n            [/*start*/ 0x11442, /*end*/ 0x11444, 14 /* Extend */],\n            [/*start*/ 0x11445, /*end*/ 0x11445, 14 /* Extend */],\n            [/*start*/ 0x11446, /*end*/ 0x11446, 14 /* Extend */],\n            [/*start*/ 0x11447, /*end*/ 0x1144A, 11 /* ALetter */],\n            [/*start*/ 0x11450, /*end*/ 0x11459, 9 /* Numeric */],\n            [/*start*/ 0x1145E, /*end*/ 0x1145E, 14 /* Extend */],\n            [/*start*/ 0x1145F, /*end*/ 0x1145F, 11 /* ALetter */],\n            [/*start*/ 0x11480, /*end*/ 0x114AF, 11 /* ALetter */],\n            [/*start*/ 0x114B0, /*end*/ 0x114B2, 14 /* Extend */],\n            [/*start*/ 0x114B3, /*end*/ 0x114B8, 14 /* Extend */],\n            [/*start*/ 0x114B9, /*end*/ 0x114B9, 14 /* Extend */],\n            [/*start*/ 0x114BA, /*end*/ 0x114BA, 14 /* Extend */],\n            [/*start*/ 0x114BB, /*end*/ 0x114BE, 14 /* Extend */],\n            [/*start*/ 0x114BF, /*end*/ 0x114C0, 14 /* Extend */],\n            [/*start*/ 0x114C1, /*end*/ 0x114C1, 14 /* Extend */],\n            [/*start*/ 0x114C2, /*end*/ 0x114C3, 14 /* Extend */],\n            [/*start*/ 0x114C4, /*end*/ 0x114C5, 11 /* ALetter */],\n            [/*start*/ 0x114C7, /*end*/ 0x114C7, 11 /* ALetter */],\n            [/*start*/ 0x114D0, /*end*/ 0x114D9, 9 /* Numeric */],\n            [/*start*/ 0x11580, /*end*/ 0x115AE, 11 /* ALetter */],\n            [/*start*/ 0x115AF, /*end*/ 0x115B1, 14 /* Extend */],\n            [/*start*/ 0x115B2, /*end*/ 0x115B5, 14 /* Extend */],\n            [/*start*/ 0x115B8, /*end*/ 0x115BB, 14 /* Extend */],\n            [/*start*/ 0x115BC, /*end*/ 0x115BD, 14 /* Extend */],\n            [/*start*/ 0x115BE, /*end*/ 0x115BE, 14 /* Extend */],\n            [/*start*/ 0x115BF, /*end*/ 0x115C0, 14 /* Extend */],\n            [/*start*/ 0x115D8, /*end*/ 0x115DB, 11 /* ALetter */],\n            [/*start*/ 0x115DC, /*end*/ 0x115DD, 14 /* Extend */],\n            [/*start*/ 0x11600, /*end*/ 0x1162F, 11 /* ALetter */],\n            [/*start*/ 0x11630, /*end*/ 0x11632, 14 /* Extend */],\n            [/*start*/ 0x11633, /*end*/ 0x1163A, 14 /* Extend */],\n            [/*start*/ 0x1163B, /*end*/ 0x1163C, 14 /* Extend */],\n            [/*start*/ 0x1163D, /*end*/ 0x1163D, 14 /* Extend */],\n            [/*start*/ 0x1163E, /*end*/ 0x1163E, 14 /* Extend */],\n            [/*start*/ 0x1163F, /*end*/ 0x11640, 14 /* Extend */],\n            [/*start*/ 0x11644, /*end*/ 0x11644, 11 /* ALetter */],\n            [/*start*/ 0x11650, /*end*/ 0x11659, 9 /* Numeric */],\n            [/*start*/ 0x11680, /*end*/ 0x116AA, 11 /* ALetter */],\n            [/*start*/ 0x116AB, /*end*/ 0x116AB, 14 /* Extend */],\n            [/*start*/ 0x116AC, /*end*/ 0x116AC, 14 /* Extend */],\n            [/*start*/ 0x116AD, /*end*/ 0x116AD, 14 /* Extend */],\n            [/*start*/ 0x116AE, /*end*/ 0x116AF, 14 /* Extend */],\n            [/*start*/ 0x116B0, /*end*/ 0x116B5, 14 /* Extend */],\n            [/*start*/ 0x116B6, /*end*/ 0x116B6, 14 /* Extend */],\n            [/*start*/ 0x116B7, /*end*/ 0x116B7, 14 /* Extend */],\n            [/*start*/ 0x116B8, /*end*/ 0x116B8, 11 /* ALetter */],\n            [/*start*/ 0x116C0, /*end*/ 0x116C9, 9 /* Numeric */],\n            [/*start*/ 0x1171D, /*end*/ 0x1171F, 14 /* Extend */],\n            [/*start*/ 0x11720, /*end*/ 0x11721, 14 /* Extend */],\n            [/*start*/ 0x11722, /*end*/ 0x11725, 14 /* Extend */],\n            [/*start*/ 0x11726, /*end*/ 0x11726, 14 /* Extend */],\n            [/*start*/ 0x11727, /*end*/ 0x1172B, 14 /* Extend */],\n            [/*start*/ 0x11730, /*end*/ 0x11739, 9 /* Numeric */],\n            [/*start*/ 0x11800, /*end*/ 0x1182B, 11 /* ALetter */],\n            [/*start*/ 0x1182C, /*end*/ 0x1182E, 14 /* Extend */],\n            [/*start*/ 0x1182F, /*end*/ 0x11837, 14 /* Extend */],\n            [/*start*/ 0x11838, /*end*/ 0x11838, 14 /* Extend */],\n            [/*start*/ 0x11839, /*end*/ 0x1183A, 14 /* Extend */],\n            [/*start*/ 0x118A0, /*end*/ 0x118DF, 11 /* ALetter */],\n            [/*start*/ 0x118E0, /*end*/ 0x118E9, 9 /* Numeric */],\n            [/*start*/ 0x118FF, /*end*/ 0x118FF, 11 /* ALetter */],\n            [/*start*/ 0x119A0, /*end*/ 0x119A7, 11 /* ALetter */],\n            [/*start*/ 0x119AA, /*end*/ 0x119D0, 11 /* ALetter */],\n            [/*start*/ 0x119D1, /*end*/ 0x119D3, 14 /* Extend */],\n            [/*start*/ 0x119D4, /*end*/ 0x119D7, 14 /* Extend */],\n            [/*start*/ 0x119DA, /*end*/ 0x119DB, 14 /* Extend */],\n            [/*start*/ 0x119DC, /*end*/ 0x119DF, 14 /* Extend */],\n            [/*start*/ 0x119E0, /*end*/ 0x119E0, 14 /* Extend */],\n            [/*start*/ 0x119E1, /*end*/ 0x119E1, 11 /* ALetter */],\n            [/*start*/ 0x119E3, /*end*/ 0x119E3, 11 /* ALetter */],\n            [/*start*/ 0x119E4, /*end*/ 0x119E4, 14 /* Extend */],\n            [/*start*/ 0x11A00, /*end*/ 0x11A00, 11 /* ALetter */],\n            [/*start*/ 0x11A01, /*end*/ 0x11A0A, 14 /* Extend */],\n            [/*start*/ 0x11A0B, /*end*/ 0x11A32, 11 /* ALetter */],\n            [/*start*/ 0x11A33, /*end*/ 0x11A38, 14 /* Extend */],\n            [/*start*/ 0x11A39, /*end*/ 0x11A39, 14 /* Extend */],\n            [/*start*/ 0x11A3A, /*end*/ 0x11A3A, 11 /* ALetter */],\n            [/*start*/ 0x11A3B, /*end*/ 0x11A3E, 14 /* Extend */],\n            [/*start*/ 0x11A47, /*end*/ 0x11A47, 14 /* Extend */],\n            [/*start*/ 0x11A50, /*end*/ 0x11A50, 11 /* ALetter */],\n            [/*start*/ 0x11A51, /*end*/ 0x11A56, 14 /* Extend */],\n            [/*start*/ 0x11A57, /*end*/ 0x11A58, 14 /* Extend */],\n            [/*start*/ 0x11A59, /*end*/ 0x11A5B, 14 /* Extend */],\n            [/*start*/ 0x11A5C, /*end*/ 0x11A89, 11 /* ALetter */],\n            [/*start*/ 0x11A8A, /*end*/ 0x11A96, 14 /* Extend */],\n            [/*start*/ 0x11A97, /*end*/ 0x11A97, 14 /* Extend */],\n            [/*start*/ 0x11A98, /*end*/ 0x11A99, 14 /* Extend */],\n            [/*start*/ 0x11A9D, /*end*/ 0x11A9D, 11 /* ALetter */],\n            [/*start*/ 0x11AC0, /*end*/ 0x11AF8, 11 /* ALetter */],\n            [/*start*/ 0x11C00, /*end*/ 0x11C08, 11 /* ALetter */],\n            [/*start*/ 0x11C0A, /*end*/ 0x11C2E, 11 /* ALetter */],\n            [/*start*/ 0x11C2F, /*end*/ 0x11C2F, 14 /* Extend */],\n            [/*start*/ 0x11C30, /*end*/ 0x11C36, 14 /* Extend */],\n            [/*start*/ 0x11C38, /*end*/ 0x11C3D, 14 /* Extend */],\n            [/*start*/ 0x11C3E, /*end*/ 0x11C3E, 14 /* Extend */],\n            [/*start*/ 0x11C3F, /*end*/ 0x11C3F, 14 /* Extend */],\n            [/*start*/ 0x11C40, /*end*/ 0x11C40, 11 /* ALetter */],\n            [/*start*/ 0x11C50, /*end*/ 0x11C59, 9 /* Numeric */],\n            [/*start*/ 0x11C72, /*end*/ 0x11C8F, 11 /* ALetter */],\n            [/*start*/ 0x11C92, /*end*/ 0x11CA7, 14 /* Extend */],\n            [/*start*/ 0x11CA9, /*end*/ 0x11CA9, 14 /* Extend */],\n            [/*start*/ 0x11CAA, /*end*/ 0x11CB0, 14 /* Extend */],\n            [/*start*/ 0x11CB1, /*end*/ 0x11CB1, 14 /* Extend */],\n            [/*start*/ 0x11CB2, /*end*/ 0x11CB3, 14 /* Extend */],\n            [/*start*/ 0x11CB4, /*end*/ 0x11CB4, 14 /* Extend */],\n            [/*start*/ 0x11CB5, /*end*/ 0x11CB6, 14 /* Extend */],\n            [/*start*/ 0x11D00, /*end*/ 0x11D06, 11 /* ALetter */],\n            [/*start*/ 0x11D08, /*end*/ 0x11D09, 11 /* ALetter */],\n            [/*start*/ 0x11D0B, /*end*/ 0x11D30, 11 /* ALetter */],\n            [/*start*/ 0x11D31, /*end*/ 0x11D36, 14 /* Extend */],\n            [/*start*/ 0x11D3A, /*end*/ 0x11D3A, 14 /* Extend */],\n            [/*start*/ 0x11D3C, /*end*/ 0x11D3D, 14 /* Extend */],\n            [/*start*/ 0x11D3F, /*end*/ 0x11D45, 14 /* Extend */],\n            [/*start*/ 0x11D46, /*end*/ 0x11D46, 11 /* ALetter */],\n            [/*start*/ 0x11D47, /*end*/ 0x11D47, 14 /* Extend */],\n            [/*start*/ 0x11D50, /*end*/ 0x11D59, 9 /* Numeric */],\n            [/*start*/ 0x11D60, /*end*/ 0x11D65, 11 /* ALetter */],\n            [/*start*/ 0x11D67, /*end*/ 0x11D68, 11 /* ALetter */],\n            [/*start*/ 0x11D6A, /*end*/ 0x11D89, 11 /* ALetter */],\n            [/*start*/ 0x11D8A, /*end*/ 0x11D8E, 14 /* Extend */],\n            [/*start*/ 0x11D90, /*end*/ 0x11D91, 14 /* Extend */],\n            [/*start*/ 0x11D93, /*end*/ 0x11D94, 14 /* Extend */],\n            [/*start*/ 0x11D95, /*end*/ 0x11D95, 14 /* Extend */],\n            [/*start*/ 0x11D96, /*end*/ 0x11D96, 14 /* Extend */],\n            [/*start*/ 0x11D97, /*end*/ 0x11D97, 14 /* Extend */],\n            [/*start*/ 0x11D98, /*end*/ 0x11D98, 11 /* ALetter */],\n            [/*start*/ 0x11DA0, /*end*/ 0x11DA9, 9 /* Numeric */],\n            [/*start*/ 0x11EE0, /*end*/ 0x11EF2, 11 /* ALetter */],\n            [/*start*/ 0x11EF3, /*end*/ 0x11EF4, 14 /* Extend */],\n            [/*start*/ 0x11EF5, /*end*/ 0x11EF6, 14 /* Extend */],\n            [/*start*/ 0x12000, /*end*/ 0x12399, 11 /* ALetter */],\n            [/*start*/ 0x12400, /*end*/ 0x1246E, 11 /* ALetter */],\n            [/*start*/ 0x12480, /*end*/ 0x12543, 11 /* ALetter */],\n            [/*start*/ 0x13000, /*end*/ 0x1342E, 11 /* ALetter */],\n            [/*start*/ 0x13430, /*end*/ 0x13438, 13 /* Format */],\n            [/*start*/ 0x14400, /*end*/ 0x14646, 11 /* ALetter */],\n            [/*start*/ 0x16800, /*end*/ 0x16A38, 11 /* ALetter */],\n            [/*start*/ 0x16A40, /*end*/ 0x16A5E, 11 /* ALetter */],\n            [/*start*/ 0x16A60, /*end*/ 0x16A69, 9 /* Numeric */],\n            [/*start*/ 0x16AD0, /*end*/ 0x16AED, 11 /* ALetter */],\n            [/*start*/ 0x16AF0, /*end*/ 0x16AF4, 14 /* Extend */],\n            [/*start*/ 0x16B00, /*end*/ 0x16B2F, 11 /* ALetter */],\n            [/*start*/ 0x16B30, /*end*/ 0x16B36, 14 /* Extend */],\n            [/*start*/ 0x16B40, /*end*/ 0x16B43, 11 /* ALetter */],\n            [/*start*/ 0x16B50, /*end*/ 0x16B59, 9 /* Numeric */],\n            [/*start*/ 0x16B63, /*end*/ 0x16B77, 11 /* ALetter */],\n            [/*start*/ 0x16B7D, /*end*/ 0x16B8F, 11 /* ALetter */],\n            [/*start*/ 0x16E40, /*end*/ 0x16E7F, 11 /* ALetter */],\n            [/*start*/ 0x16F00, /*end*/ 0x16F4A, 11 /* ALetter */],\n            [/*start*/ 0x16F4F, /*end*/ 0x16F4F, 14 /* Extend */],\n            [/*start*/ 0x16F50, /*end*/ 0x16F50, 11 /* ALetter */],\n            [/*start*/ 0x16F51, /*end*/ 0x16F87, 14 /* Extend */],\n            [/*start*/ 0x16F8F, /*end*/ 0x16F92, 14 /* Extend */],\n            [/*start*/ 0x16F93, /*end*/ 0x16F9F, 11 /* ALetter */],\n            [/*start*/ 0x16FE0, /*end*/ 0x16FE1, 11 /* ALetter */],\n            [/*start*/ 0x16FE3, /*end*/ 0x16FE3, 11 /* ALetter */],\n            [/*start*/ 0x1B000, /*end*/ 0x1B000, 17 /* Katakana */],\n            [/*start*/ 0x1B164, /*end*/ 0x1B167, 17 /* Katakana */],\n            [/*start*/ 0x1BC00, /*end*/ 0x1BC6A, 11 /* ALetter */],\n            [/*start*/ 0x1BC70, /*end*/ 0x1BC7C, 11 /* ALetter */],\n            [/*start*/ 0x1BC80, /*end*/ 0x1BC88, 11 /* ALetter */],\n            [/*start*/ 0x1BC90, /*end*/ 0x1BC99, 11 /* ALetter */],\n            [/*start*/ 0x1BC9D, /*end*/ 0x1BC9E, 14 /* Extend */],\n            [/*start*/ 0x1BCA0, /*end*/ 0x1BCA3, 13 /* Format */],\n            [/*start*/ 0x1D165, /*end*/ 0x1D166, 14 /* Extend */],\n            [/*start*/ 0x1D167, /*end*/ 0x1D169, 14 /* Extend */],\n            [/*start*/ 0x1D16D, /*end*/ 0x1D172, 14 /* Extend */],\n            [/*start*/ 0x1D173, /*end*/ 0x1D17A, 13 /* Format */],\n            [/*start*/ 0x1D17B, /*end*/ 0x1D182, 14 /* Extend */],\n            [/*start*/ 0x1D185, /*end*/ 0x1D18B, 14 /* Extend */],\n            [/*start*/ 0x1D1AA, /*end*/ 0x1D1AD, 14 /* Extend */],\n            [/*start*/ 0x1D242, /*end*/ 0x1D244, 14 /* Extend */],\n            [/*start*/ 0x1D400, /*end*/ 0x1D454, 11 /* ALetter */],\n            [/*start*/ 0x1D456, /*end*/ 0x1D49C, 11 /* ALetter */],\n            [/*start*/ 0x1D49E, /*end*/ 0x1D49F, 11 /* ALetter */],\n            [/*start*/ 0x1D4A2, /*end*/ 0x1D4A2, 11 /* ALetter */],\n            [/*start*/ 0x1D4A5, /*end*/ 0x1D4A6, 11 /* ALetter */],\n            [/*start*/ 0x1D4A9, /*end*/ 0x1D4AC, 11 /* ALetter */],\n            [/*start*/ 0x1D4AE, /*end*/ 0x1D4B9, 11 /* ALetter */],\n            [/*start*/ 0x1D4BB, /*end*/ 0x1D4BB, 11 /* ALetter */],\n            [/*start*/ 0x1D4BD, /*end*/ 0x1D4C3, 11 /* ALetter */],\n            [/*start*/ 0x1D4C5, /*end*/ 0x1D505, 11 /* ALetter */],\n            [/*start*/ 0x1D507, /*end*/ 0x1D50A, 11 /* ALetter */],\n            [/*start*/ 0x1D50D, /*end*/ 0x1D514, 11 /* ALetter */],\n            [/*start*/ 0x1D516, /*end*/ 0x1D51C, 11 /* ALetter */],\n            [/*start*/ 0x1D51E, /*end*/ 0x1D539, 11 /* ALetter */],\n            [/*start*/ 0x1D53B, /*end*/ 0x1D53E, 11 /* ALetter */],\n            [/*start*/ 0x1D540, /*end*/ 0x1D544, 11 /* ALetter */],\n            [/*start*/ 0x1D546, /*end*/ 0x1D546, 11 /* ALetter */],\n            [/*start*/ 0x1D54A, /*end*/ 0x1D550, 11 /* ALetter */],\n            [/*start*/ 0x1D552, /*end*/ 0x1D6A5, 11 /* ALetter */],\n            [/*start*/ 0x1D6A8, /*end*/ 0x1D6C0, 11 /* ALetter */],\n            [/*start*/ 0x1D6C2, /*end*/ 0x1D6DA, 11 /* ALetter */],\n            [/*start*/ 0x1D6DC, /*end*/ 0x1D6FA, 11 /* ALetter */],\n            [/*start*/ 0x1D6FC, /*end*/ 0x1D714, 11 /* ALetter */],\n            [/*start*/ 0x1D716, /*end*/ 0x1D734, 11 /* ALetter */],\n            [/*start*/ 0x1D736, /*end*/ 0x1D74E, 11 /* ALetter */],\n            [/*start*/ 0x1D750, /*end*/ 0x1D76E, 11 /* ALetter */],\n            [/*start*/ 0x1D770, /*end*/ 0x1D788, 11 /* ALetter */],\n            [/*start*/ 0x1D78A, /*end*/ 0x1D7A8, 11 /* ALetter */],\n            [/*start*/ 0x1D7AA, /*end*/ 0x1D7C2, 11 /* ALetter */],\n            [/*start*/ 0x1D7C4, /*end*/ 0x1D7CB, 11 /* ALetter */],\n            [/*start*/ 0x1D7CE, /*end*/ 0x1D7FF, 9 /* Numeric */],\n            [/*start*/ 0x1DA00, /*end*/ 0x1DA36, 14 /* Extend */],\n            [/*start*/ 0x1DA3B, /*end*/ 0x1DA6C, 14 /* Extend */],\n            [/*start*/ 0x1DA75, /*end*/ 0x1DA75, 14 /* Extend */],\n            [/*start*/ 0x1DA84, /*end*/ 0x1DA84, 14 /* Extend */],\n            [/*start*/ 0x1DA9B, /*end*/ 0x1DA9F, 14 /* Extend */],\n            [/*start*/ 0x1DAA1, /*end*/ 0x1DAAF, 14 /* Extend */],\n            [/*start*/ 0x1E000, /*end*/ 0x1E006, 14 /* Extend */],\n            [/*start*/ 0x1E008, /*end*/ 0x1E018, 14 /* Extend */],\n            [/*start*/ 0x1E01B, /*end*/ 0x1E021, 14 /* Extend */],\n            [/*start*/ 0x1E023, /*end*/ 0x1E024, 14 /* Extend */],\n            [/*start*/ 0x1E026, /*end*/ 0x1E02A, 14 /* Extend */],\n            [/*start*/ 0x1E100, /*end*/ 0x1E12C, 11 /* ALetter */],\n            [/*start*/ 0x1E130, /*end*/ 0x1E136, 14 /* Extend */],\n            [/*start*/ 0x1E137, /*end*/ 0x1E13D, 11 /* ALetter */],\n            [/*start*/ 0x1E140, /*end*/ 0x1E149, 9 /* Numeric */],\n            [/*start*/ 0x1E14E, /*end*/ 0x1E14E, 11 /* ALetter */],\n            [/*start*/ 0x1E2C0, /*end*/ 0x1E2EB, 11 /* ALetter */],\n            [/*start*/ 0x1E2EC, /*end*/ 0x1E2EF, 14 /* Extend */],\n            [/*start*/ 0x1E2F0, /*end*/ 0x1E2F9, 9 /* Numeric */],\n            [/*start*/ 0x1E800, /*end*/ 0x1E8C4, 11 /* ALetter */],\n            [/*start*/ 0x1E8D0, /*end*/ 0x1E8D6, 14 /* Extend */],\n            [/*start*/ 0x1E900, /*end*/ 0x1E943, 11 /* ALetter */],\n            [/*start*/ 0x1E944, /*end*/ 0x1E94A, 14 /* Extend */],\n            [/*start*/ 0x1E94B, /*end*/ 0x1E94B, 11 /* ALetter */],\n            [/*start*/ 0x1E950, /*end*/ 0x1E959, 9 /* Numeric */],\n            [/*start*/ 0x1EE00, /*end*/ 0x1EE03, 11 /* ALetter */],\n            [/*start*/ 0x1EE05, /*end*/ 0x1EE1F, 11 /* ALetter */],\n            [/*start*/ 0x1EE21, /*end*/ 0x1EE22, 11 /* ALetter */],\n            [/*start*/ 0x1EE24, /*end*/ 0x1EE24, 11 /* ALetter */],\n            [/*start*/ 0x1EE27, /*end*/ 0x1EE27, 11 /* ALetter */],\n            [/*start*/ 0x1EE29, /*end*/ 0x1EE32, 11 /* ALetter */],\n            [/*start*/ 0x1EE34, /*end*/ 0x1EE37, 11 /* ALetter */],\n            [/*start*/ 0x1EE39, /*end*/ 0x1EE39, 11 /* ALetter */],\n            [/*start*/ 0x1EE3B, /*end*/ 0x1EE3B, 11 /* ALetter */],\n            [/*start*/ 0x1EE42, /*end*/ 0x1EE42, 11 /* ALetter */],\n            [/*start*/ 0x1EE47, /*end*/ 0x1EE47, 11 /* ALetter */],\n            [/*start*/ 0x1EE49, /*end*/ 0x1EE49, 11 /* ALetter */],\n            [/*start*/ 0x1EE4B, /*end*/ 0x1EE4B, 11 /* ALetter */],\n            [/*start*/ 0x1EE4D, /*end*/ 0x1EE4F, 11 /* ALetter */],\n            [/*start*/ 0x1EE51, /*end*/ 0x1EE52, 11 /* ALetter */],\n            [/*start*/ 0x1EE54, /*end*/ 0x1EE54, 11 /* ALetter */],\n            [/*start*/ 0x1EE57, /*end*/ 0x1EE57, 11 /* ALetter */],\n            [/*start*/ 0x1EE59, /*end*/ 0x1EE59, 11 /* ALetter */],\n            [/*start*/ 0x1EE5B, /*end*/ 0x1EE5B, 11 /* ALetter */],\n            [/*start*/ 0x1EE5D, /*end*/ 0x1EE5D, 11 /* ALetter */],\n            [/*start*/ 0x1EE5F, /*end*/ 0x1EE5F, 11 /* ALetter */],\n            [/*start*/ 0x1EE61, /*end*/ 0x1EE62, 11 /* ALetter */],\n            [/*start*/ 0x1EE64, /*end*/ 0x1EE64, 11 /* ALetter */],\n            [/*start*/ 0x1EE67, /*end*/ 0x1EE6A, 11 /* ALetter */],\n            [/*start*/ 0x1EE6C, /*end*/ 0x1EE72, 11 /* ALetter */],\n            [/*start*/ 0x1EE74, /*end*/ 0x1EE77, 11 /* ALetter */],\n            [/*start*/ 0x1EE79, /*end*/ 0x1EE7C, 11 /* ALetter */],\n            [/*start*/ 0x1EE7E, /*end*/ 0x1EE7E, 11 /* ALetter */],\n            [/*start*/ 0x1EE80, /*end*/ 0x1EE89, 11 /* ALetter */],\n            [/*start*/ 0x1EE8B, /*end*/ 0x1EE9B, 11 /* ALetter */],\n            [/*start*/ 0x1EEA1, /*end*/ 0x1EEA3, 11 /* ALetter */],\n            [/*start*/ 0x1EEA5, /*end*/ 0x1EEA9, 11 /* ALetter */],\n            [/*start*/ 0x1EEAB, /*end*/ 0x1EEBB, 11 /* ALetter */],\n            [/*start*/ 0x1F130, /*end*/ 0x1F149, 11 /* ALetter */],\n            [/*start*/ 0x1F150, /*end*/ 0x1F169, 11 /* ALetter */],\n            [/*start*/ 0x1F170, /*end*/ 0x1F189, 11 /* ALetter */],\n            [/*start*/ 0x1F1E6, /*end*/ 0x1F1FF, 18 /* Regional_Indicator */],\n            [/*start*/ 0x1F3FB, /*end*/ 0x1F3FF, 14 /* Extend */],\n            [/*start*/ 0xE0001, /*end*/ 0xE0001, 13 /* Format */],\n            [/*start*/ 0xE0020, /*end*/ 0xE007F, 14 /* Extend */],\n            [/*start*/ 0xE0100, /*end*/ 0xE01EF, 14 /* Extend */],\n        ];\n    })(data = wordBreakers.data || (wordBreakers.data = {}));\n})(wordBreakers || (wordBreakers = {}));\n// Include the word-breaking data here:\n/// <reference path=\"./data.ts\" />\nvar wordBreakers;\n(function (wordBreakers) {\n    /**\n     * Word breaker based on Unicode Standard Annex #29, Section 4.1:\n     * Default Word Boundary Specification.\n     *\n     * @see http://unicode.org/reports/tr29/#Word_Boundaries\n     * @see https://github.com/eddieantonio/unicode-default-word-boundary/tree/v12.0.0\n     */\n    function default_(text) {\n        var boundaries = findBoundaries(text);\n        if (boundaries.length == 0) {\n            return [];\n        }\n        // All non-empty strings have at least TWO boundaries at the start and end of\n        // the string.\n        var spans = [];\n        for (var i = 0; i < boundaries.length - 1; i++) {\n            var start = boundaries[i];\n            var end = boundaries[i + 1];\n            var span = new LazySpan(text, start, end);\n            if (isNonSpace(span.text)) {\n                spans.push(span);\n                // Preserve a sequence-final space if it exists.  Needed to signal \"end of word\".\n            }\n            else if (i == boundaries.length - 2) { // if \"we just checked the final boundary\"...\n                // We don't want to return the whitespace itself; the correct token is simply ''.\n                span = new LazySpan(text, end, end);\n                spans.push(span);\n            }\n        }\n        return spans;\n    }\n    wordBreakers.default_ = default_;\n    var WORD_BREAK_PROPERTY = wordBreakers.data.WORD_BREAK_PROPERTY;\n    /**\n     * A span that does not cut out the substring until it absolutely has to!\n     */\n    var LazySpan = /** @class */ (function () {\n        function LazySpan(source, start, end) {\n            this._source = source;\n            this.start = start;\n            this.end = end;\n        }\n        Object.defineProperty(LazySpan.prototype, \"text\", {\n            get: function () {\n                return this._source.substring(this.start, this.end);\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(LazySpan.prototype, \"length\", {\n            get: function () {\n                return this.end - this.start;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return LazySpan;\n    }());\n    /**\n     * Returns true when the chunk does not solely consist of whitespace.\n     *\n     * @param chunk a chunk of text. Starts and ends at word boundaries.\n     */\n    function isNonSpace(chunk) {\n        return !Array.from(chunk).map(property).every(function (wb) { return (wb === 3 /* CR */ ||\n            wb === 1 /* LF */ ||\n            wb === 2 /* Newline */ ||\n            wb === 4 /* WSegSpace */); });\n    }\n    /**\n     * Yields a series of string indices where a word break should\n     * occur. That is, there should be a break BEFORE each string\n     * index yielded by this generator.\n     *\n     * @param text Text to find word boundaries in.\n     */\n    function findBoundaries(text) {\n        var _a, _b, _c;\n        // WB1 and WB2: no boundaries if given an empty string.\n        if (text.length === 0) {\n            // There are no boundaries in an empty string!\n            return [];\n        }\n        // This algorithm works by maintaining a sliding window of four SCALAR VALUES.\n        //\n        //  - Scalar values? JavaScript strings are NOT actually a string of\n        //    Unicode code points; some characters are made up of TWO\n        //    JavaScript indices. e.g.,\n        //        \"💩\".length === 2;\n        //        \"💩\"[0] === '\\uD83D';\n        //        \"💩\"[1] === '\\uDCA9';\n        //\n        //    These characters that are represented by TWO indices are\n        //    called \"surrogate pairs\". Since we don't want to be in the\n        //    \"middle\" of a character, make sure we're always advancing\n        //    by scalar values, and NOT indices. That means, we sometimes\n        //    need to advance by TWO indices, not just one.\n        //  - Four values? Some rules look at what's to the left of\n        //    left, and some look at what's to the right of right. So\n        //    keep track of this!\n        var boundaries = [];\n        var rightPos;\n        var lookaheadPos = 0; // lookahead, one scalar value to the right of right.\n        // Before the start of the string is also the start of the string.\n        var lookbehind;\n        var left = 19 /* sot */;\n        var right = 19 /* sot */;\n        var lookahead = wordbreakPropertyAt(0);\n        // Count RIs to make sure we're not splitting emoji flags:\n        var nConsecutiveRegionalIndicators = 0;\n        do {\n            // Shift all positions, one scalar value to the right.\n            rightPos = lookaheadPos;\n            lookaheadPos = positionAfter(lookaheadPos);\n            // Shift all properties, one scalar value to the right.\n            _a = [left, right, lookahead, wordbreakPropertyAt(lookaheadPos)], lookbehind = _a[0], left = _a[1], right = _a[2], lookahead = _a[3];\n            // Break at the start and end of text, unless the text is empty.\n            // WB1: Break at start of text...\n            if (left === 19 /* sot */) {\n                boundaries.push(rightPos);\n                continue;\n            }\n            // WB2: Break at the end of text...\n            if (right === 20 /* eot */) {\n                boundaries.push(rightPos);\n                break; // Reached the end of the string. We're done!\n            }\n            // WB3: Do not break within CRLF:\n            if (left === 3 /* CR */ && right === 1 /* LF */)\n                continue;\n            // WB3b: Otherwise, break after...\n            if (left === 2 /* Newline */ ||\n                left === 3 /* CR */ ||\n                left === 1 /* LF */) {\n                boundaries.push(rightPos);\n                continue;\n            }\n            // WB3a: ...and before newlines\n            if (right === 2 /* Newline */ ||\n                right === 3 /* CR */ ||\n                right === 1 /* LF */) {\n                boundaries.push(rightPos);\n                continue;\n            }\n            // TODO: WB3c is not implemented, due to its complex, error-prone\n            // implementation, requiring a ginormous regexp, and the fact that\n            // the only thing it does is prevent big emoji sequences from being\n            // split up, like 🧚🏼‍♂️\n            // https://www.unicode.org/Public/emoji/12.0/emoji-zwj-sequences.txt\n            // WB3d: Keep horizontal whitespace together\n            if (left === 4 /* WSegSpace */ && right == 4 /* WSegSpace */)\n                continue;\n            // WB4: Ignore format and extend characters\n            // This is to keep grapheme clusters together!\n            // See: Section 6.2: https://unicode.org/reports/tr29/#Grapheme_Cluster_and_Format_Rules\n            // N.B.: The rule about \"except after sot, CR, LF, and\n            // Newline\" already been by WB1, WB2, WB3a, and WB3b above.\n            while (right === 13 /* Format */ ||\n                right === 14 /* Extend */ ||\n                right === 16 /* ZWJ */) {\n                // Continue advancing in the string, as if these\n                // characters do not exist. DO NOT update left and\n                // lookbehind however!\n                _b = [lookaheadPos, positionAfter(lookaheadPos)], rightPos = _b[0], lookaheadPos = _b[1];\n                _c = [lookahead, wordbreakPropertyAt(lookaheadPos)], right = _c[0], lookahead = _c[1];\n            }\n            // In ignoring the characters in the previous loop, we could\n            // have fallen off the end of the string, so end the loop\n            // prematurely if that happens!\n            if (right === 20 /* eot */) {\n                boundaries.push(rightPos);\n                break;\n            }\n            // WB4 (continued): Lookahead must ALSO ignore these format,\n            // extend, ZWJ characters!\n            while (lookahead === 13 /* Format */ ||\n                lookahead === 14 /* Extend */ ||\n                lookahead === 16 /* ZWJ */) {\n                // Continue advancing in the string, as if these\n                // characters do not exist. DO NOT update left and right,\n                // however!\n                lookaheadPos = positionAfter(lookaheadPos);\n                lookahead = wordbreakPropertyAt(lookaheadPos);\n            }\n            // WB5: Do not break between most letters.\n            if (isAHLetter(left) && isAHLetter(right))\n                continue;\n            // Do not break across certain punctuation\n            // WB6: (Don't break before apostrophes in contractions)\n            if (isAHLetter(left) && isAHLetter(lookahead) &&\n                (right === 10 /* MidLetter */ || isMidNumLetQ(right)))\n                continue;\n            // WB7: (Don't break after apostrophes in contractions)\n            if (isAHLetter(lookbehind) && isAHLetter(right) &&\n                (left === 10 /* MidLetter */ || isMidNumLetQ(left)))\n                continue;\n            // WB7a\n            if (left === 15 /* Hebrew_Letter */ && right === 6 /* Single_Quote */)\n                continue;\n            // WB7b\n            if (left === 15 /* Hebrew_Letter */ && right === 5 /* Double_Quote */ &&\n                lookahead === 15 /* Hebrew_Letter */)\n                continue;\n            // WB7c\n            if (lookbehind === 15 /* Hebrew_Letter */ && left === 5 /* Double_Quote */ &&\n                right === 15 /* Hebrew_Letter */)\n                continue;\n            // Do not break within sequences of digits, or digits adjacent to letters.\n            // e.g., \"3a\" or \"A3\"\n            // WB8\n            if (left === 9 /* Numeric */ && right === 9 /* Numeric */)\n                continue;\n            // WB9\n            if (isAHLetter(left) && right === 9 /* Numeric */)\n                continue;\n            // WB10\n            if (left === 9 /* Numeric */ && isAHLetter(right))\n                continue;\n            // Do not break within sequences, such as 3.2, 3,456.789\n            // WB11\n            if (lookbehind === 9 /* Numeric */ && right === 9 /* Numeric */ &&\n                (left === 7 /* MidNum */ || isMidNumLetQ(left)))\n                continue;\n            // WB12\n            if (left === 9 /* Numeric */ && lookahead === 9 /* Numeric */ &&\n                (right === 7 /* MidNum */ || isMidNumLetQ(right)))\n                continue;\n            // WB13: Do not break between Katakana\n            if (left === 17 /* Katakana */ && right === 17 /* Katakana */)\n                continue;\n            // Do not break from extenders (e.g., U+202F NARROW NO-BREAK SPACE)\n            // WB13a\n            if ((isAHLetter(left) ||\n                left === 9 /* Numeric */ ||\n                left === 17 /* Katakana */ ||\n                left === 12 /* ExtendNumLet */) &&\n                right === 12 /* ExtendNumLet */)\n                continue;\n            // WB13b\n            if ((isAHLetter(right) ||\n                right === 9 /* Numeric */ ||\n                right === 17 /* Katakana */) && left === 12 /* ExtendNumLet */)\n                continue;\n            // WB15 & WB16:\n            // Do not break within emoji flag sequences. That is, do not break between\n            // regional indicator (RI) symbols if there is an odd number of RI\n            // characters before the break point.\n            if (right === 18 /* Regional_Indicator */) {\n                // Emoji flags are actually composed of TWO scalar values, each being a\n                // \"regional indicator\". These indicators correspond to Latin letters. Put\n                // two of them together, and they spell out an ISO 3166-1-alpha-2 country\n                // code. Since these always come in pairs, NEVER split the pairs! So, if\n                // we happen to be inside the middle of an odd numbered of\n                // Regional_Indicators, DON'T SPLIT IT!\n                nConsecutiveRegionalIndicators += 1;\n                if ((nConsecutiveRegionalIndicators % 2) == 1) {\n                    continue;\n                }\n            }\n            else {\n                nConsecutiveRegionalIndicators = 0;\n            }\n            // WB999: Otherwise, break EVERYWHERE (including around ideographs)\n            boundaries.push(rightPos);\n        } while (rightPos < text.length);\n        return boundaries;\n        ///// Internal utility functions /////\n        /**\n         * Returns the position of the start of the next scalar value. This jumps\n         * over surrogate pairs.\n         *\n         * If asked for the character AFTER the end of the string, this always\n         * returns the length of the string.\n         */\n        function positionAfter(pos) {\n            if (pos >= text.length) {\n                return text.length;\n            }\n            else if (isStartOfSurrogatePair(text[pos])) {\n                return pos + 2;\n            }\n            return pos + 1;\n        }\n        /**\n         * Return the value of the Word_Break property at the given string index.\n         * @param pos position in the text.\n         */\n        function wordbreakPropertyAt(pos) {\n            if (pos < 0) {\n                return 19 /* sot */; // Always \"start of string\" before the string starts!\n            }\n            else if (pos >= text.length) {\n                return 20 /* eot */; // Always \"end of string\" after the string ends!\n            }\n            else if (isStartOfSurrogatePair(text[pos])) {\n                // Surrogate pairs the next TWO items from the string!\n                return property(text[pos] + text[pos + 1]);\n            }\n            return property(text[pos]);\n        }\n        // Word_Break rule macros\n        // See: https://unicode.org/reports/tr29/#WB_Rule_Macros\n        function isAHLetter(prop) {\n            return prop === 11 /* ALetter */ ||\n                prop === 15 /* Hebrew_Letter */;\n        }\n        function isMidNumLetQ(prop) {\n            return prop === 8 /* MidNumLet */ ||\n                prop === 6 /* Single_Quote */;\n        }\n    }\n    function isStartOfSurrogatePair(character) {\n        var codeUnit = character.charCodeAt(0);\n        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;\n    }\n    /**\n     * Return the Word_Break property value for a character.\n     * Note that\n     * @param character a scalar value\n     */\n    function property(character) {\n        // This MUST be a scalar value.\n        // TODO: remove dependence on character.codepointAt()?\n        var codepoint = character.codePointAt(0);\n        return searchForProperty(codepoint, 0, WORD_BREAK_PROPERTY.length - 1);\n    }\n    /**\n     * Binary search for the word break property of a given CODE POINT.\n     */\n    function searchForProperty(codePoint, left, right) {\n        // All items that are not found in the array are assigned the 'Other' property.\n        if (right < left) {\n            return 0 /* Other */;\n        }\n        var midpoint = left + ~~((right - left) / 2);\n        var candidate = WORD_BREAK_PROPERTY[midpoint];\n        if (codePoint < candidate[0 /* Start */]) {\n            return searchForProperty(codePoint, left, midpoint - 1);\n        }\n        else if (codePoint > candidate[1 /* End */]) {\n            return searchForProperty(codePoint, midpoint + 1, right);\n        }\n        else {\n            // We found it!\n            return candidate[2 /* Value */];\n        }\n    }\n})(wordBreakers || (wordBreakers = {}));\n// We cannot export a member whose name is a reserved word when\n// implementing a namespace, BUT we can manually make the\n// assignment and **declare** it as part of the namespace.\nwordBreakers['default'] = wordBreakers.default_;\n//# sourceMappingURL=index.js.map\n}\n","/// <reference path=\"embedded_worker.d.ts\" />\n/// <reference path=\"worker-interface.d.ts\" />\n\nnamespace com.keyman.text.prediction {\n  // Unfortunately, importing like this loses all type information for the modules.\n  // It's that, or massively overhaul lm-layer to be module-based instead of\n  // namespace-based.\n  var fs = require(\"fs\");\n  var vm = require(\"vm\");\n\n  class VirtualizedWorkerContext {\n    // The LMLayerWorker installs itself to 'self', the expected Worker global, so we provide an alias.\n    self: VirtualizedWorkerContext;\n\n    constructor() {\n      this.self = this;\n    }\n\n    postMessage: (message: any, options: PostMessageOptions) => void;\n\n    importScripts(...scriptNames: string[]) {\n      /* Use of vm.createContext and script.runInContext allow us to avoid\n        * polluting the global scope with imports.  When we throw away the\n        * context object, imported scripts will be automatically GC'd.\n        */\n      for(let script of scriptNames) {\n        this.__importScriptString(fs.readFileSync(script, \"UTF-8\"));\n      }\n    }\n\n    __importScriptString(scriptStr: string) {\n      let context = vm.createContext(this);\n      var script = new vm.Script(scriptStr);\n      script.runInContext(context);\n    }\n  }\n\n  /**\n   * Note:  this does not create an actual Worker, separate process, or thread.  Everything will\n   *        be executed in-line on a virtualized context.\n   * \n   *        In the future, it might be nice to use Node's Worker Threads implementation.\n   */\n  export class VirtualizedWorker implements Worker {\n    private _workerContext: VirtualizedWorkerContext;\n\n    constructor(scriptStr: string) {\n      this._workerContext = new VirtualizedWorkerContext();\n      // Needs to exist before setting up the worker; must exist by `.install()`.\n      this._workerContext.postMessage = this.workerPostMessage.bind(this);\n\n      // Initialize the \"worker\".\n      this._workerContext.__importScriptString(scriptStr);\n    }\n\n    // Sends the worker's postMessage messages to the appropriate `onmessage` handler.\n    private workerPostMessage(message: unknown) {\n      if(this.onmessage) {\n        this.onmessage({data: message} as any as MessageEvent);\n      }\n    }\n\n    /**\n     * Accepts a callback function that will receive messages sent from the `VirtualizedWorker`'s `postMessage` function,\n     * much like the standard `Worker.onmessage`.\n     */\n    onmessage: (this: Worker, ev: MessageEvent) => any;\n\n    postMessage(message: any) {\n      let msgObj = {data: message};\n      let msgJSON = JSON.stringify(msgObj);\n\n      /* \n       * Execute the command within the virtualized worker's scope.  The worker's returned \n       * `postMessage` calls will still reach outside, as they have a reference to `this` via\n       * `postMessage` (which we've set to a bound `this.workerPostMessage`).\n       * \n       * Among other things, this will allow the worker to use its internal namespaces without issue.\n       */\n      let msgCommand = \"onmessage(\" + msgJSON + \")\";\n      this._workerContext.__importScriptString(msgCommand);\n    }\n\n    terminate(): void {\n      this._workerContext = null;\n    }\n  }\n}","///<reference path=\"virtualizedWorker.ts\" />\n\nnamespace com.keyman.text.prediction {\n  export class DefaultWorker {\n    static constructInstance(): Worker {\n      let scriptStr = LMLayer.unwrap(LMLayerWorkerCode);\n      let worker = new VirtualizedWorker(scriptStr);\n\n      return worker;\n    }\n  }\n}","// Implements Node's EventEmitter class and related module components in a near\n// browser-compatible way.  (Just requires a blank 'module' object on the window.)\n///<reference path=\"../../node_modules/eventemitter3/index.js\" />\n\n// Unfortunately, I can't get it to recognize type information properly\n// because we can't use require statements.  So, a small-scale manual definition.\ndeclare class EventEmitter {\n  /** Add a listener for a given event */\n  on(event: string, func: (...args: any[]) => boolean, context?: any);\n  /** Add a one-time listener for a given event */\n  once(event: string, func: (...args: any[]) => boolean, context?: any);\n  removeListener(event: string, func: (...args: any[]) => boolean, context?: any, once?: boolean);\n\n  // Defines their alternately-themed aliases.\n  addListener: typeof EventEmitter.prototype.on;\n  off: typeof EventEmitter.prototype.removeListener;\n\n  // Defines the actual event-raising function.\n  emit(eventName: string, ...args: any[]);\n}  ","/***\n   KeymanWeb 11.0\n   Copyright 2019 SIL International\n***/\n\ninterface StringConstructor {\n  kmwFromCharCode(cp0: number): string,\n  _kmwFromCharCode(cp0: number): string,\n  kmwEnableSupplementaryPlane(bEnable: boolean)\n}\n\ninterface String {\n  kmwCharCodeAt(codePointIndex: number): number,\n  kmwCharAt(codePointIndex: number) : string,\n  kmwIndexOf(searchValue: string, fromIndex?: number) : number,\n  kmwLastIndexOf(searchValue: string, fromIndex?: number) : number,\n  kmwSlice(beginSlice: number, endSlice: number) : string,\n  kmwSubstring(start: number, length: number) : string,\n  kmwSubstr(start: number, length?: number) : string,\n  kmwBMPSubstr(start: number, length?: number) : string,\n  kmwLength(): number,\n  kmwBMPLength(): number,\n  kmwNextChar(codeUnitIndex: number): number,\n  kmwBMPNextChar(codeUnitIndex: number): number,\n  kmwPrevChar(codeUnitIndex: number): number,\n  kmwBMPPrevChar(codeUnitIndex: number): number,\n  kmwCodePointToCodeUnit(codePointIndex: number) : number,\n  kmwBMPCodePointToCodeUnit(codePointIndex: number) : number,\n  kmwCodeUnitToCodePoint(codeUnitIndex: number) : number,\n  kmwBMPCodeUnitToCodePoint(codeUnitIndex: number) : number,\n  _kmwCharCodeAt(codePointIndex: number): number,\n  _kmwCharAt(codePointIndex: number) : string,\n  _kmwIndexOf(searchValue: string, fromIndex?: number) : number,\n  _kmwLastIndexOf(searchValue: string, fromIndex?: number) : number,\n  _kmwSlice(beginSlice: number, endSlice: number) : string,\n  _kmwSubstring(start: number, length?: number) : string,\n  _kmwSubstr(start: number, length?: number) : string,\n  _kmwLength(): number,\n  _kmwNextChar(codeUnitIndex: number): number,\n  _kmwPrevChar(codeUnitIndex: number): number,\n  _kmwCodePointToCodeUnit(codePointIndex: number) : number,\n  _kmwCodeUnitToCodePoint(codeUnitIndex: number) : number,\n}\n\n/**\n * Constructs a string from one or more Unicode character codepoint values \n * passed as integer parameters.\n * \n * @param  {number} cp0,...   1 or more Unicode codepoints, e.g. 0x0065, 0x10000\n * @return {string|null}      The new String object.\n */\nString.kmwFromCharCode = function(cp0) {\n  var chars = [], i;\n  for (i = 0; i < arguments.length; i++) {\n    var c = Number(arguments[i]);\n    if (!isFinite(c) || c < 0 || c > 0x10FFFF || Math.floor(c) !== c) {\n      throw new RangeError(\"Invalid code point \" + c);\n    }\n    if (c < 0x10000) {\n      chars.push(c);\n    } else {\n      c -= 0x10000;\n      chars.push((c >> 10) + 0xD800);\n      chars.push((c % 0x400) + 0xDC00);\n    }\n  }\n  return String.fromCharCode.apply(undefined, chars);\n}\n\n/**\n * Returns a number indicating the Unicode value of the character at the given \n * code point index, with support for supplementary plane characters.\n * \n * @param  {number}  codePointIndex  The code point index into the string (not \n                                     the code unit index) to return\n * @return {number}                  The Unicode character value\n */\nString.prototype.kmwCharCodeAt = function(codePointIndex) {\n  var str = String(this);\n  var codeUnitIndex = 0;\n  \n  if (codePointIndex < 0 || codePointIndex  >= str.length) {\n    return NaN;\n  }\n\n  for(var i = 0; i < codePointIndex; i++) {\n    codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n    if(codeUnitIndex === null) return NaN;\n  }\n  \n  var first = str.charCodeAt(codeUnitIndex);\n  if (first >= 0xD800 && first <= 0xDBFF && str.length > codeUnitIndex + 1) {\n    var second = str.charCodeAt(codeUnitIndex + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      return ((first - 0xD800) << 10) + (second - 0xDC00) + 0x10000;\n    }\n  }\n  return first;  \n}\n\n/**\n * Returns the code point index within the calling String object of the first occurrence\n * of the specified value, or -1 if not found.\n * \n * @param  {string}  searchValue    The value to search for\n * @param  {number}  [fromIndex]    Optional code point index to start searching from\n * @return {number}                 The code point index of the specified search value\n */\nString.prototype.kmwIndexOf = function(searchValue, fromIndex) {\n  var str = String(this);\n  var codeUnitIndex = str.indexOf(searchValue, fromIndex);\n  \n  if(codeUnitIndex < 0) {\n    return codeUnitIndex;\n  }\n  \n  var codePointIndex = 0;\n  for(var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i)) codePointIndex++;\n  return codePointIndex;\n}\n\n/**\n * Returns the code point index within the calling String object of the last occurrence \n * of the specified value, or -1 if not found.\n * \n * @param  {string}  searchValue    The value to search for\n * @param  {number}  fromIndex      Optional code point index to start searching from\n * @return {number}                 The code point index of the specified search value\n */\nString.prototype.kmwLastIndexOf = function(searchValue, fromIndex)\n{\n  var str = String(this);\n  var codeUnitIndex = str.lastIndexOf(searchValue, fromIndex);\n  \n  if(codeUnitIndex < 0) {\n    return codeUnitIndex;\n  }\n  \n  var codePointIndex = 0;\n  for(var i = 0; i !== null && i < codeUnitIndex; i = str.kmwNextChar(i)) codePointIndex++;\n  return codePointIndex;\n}\n\n/**\n * Returns the length of the string in code points, as opposed to code units.\n * \n * @return {number}                 The length of the string in code points\n */\nString.prototype.kmwLength = function() {\n  var str = String(this);\n  \n  if(str.length == 0) return 0;\n  \n  for(var i = 0, codeUnitIndex = 0; codeUnitIndex !== null; i++) \n    codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n  return i;\n}\n\n/**\n * Extracts a section of a string and returns a new string.\n * \n * @param  {number}  beginSlice    The start code point index in the string to \n *                                 extract from\n * @param  {number}  endSlice      Optional end code point index in the string\n *                                 to extract to\n * @return {string}                The substring as selected by beginSlice and\n *                                 endSlice\n */\nString.prototype.kmwSlice = function(beginSlice, endSlice) {\n  var str = String(this);\n  var beginSliceCodeUnit = str.kmwCodePointToCodeUnit(beginSlice);\n  var endSliceCodeUnit = str.kmwCodePointToCodeUnit(endSlice);\n  if(beginSliceCodeUnit === null || endSliceCodeUnit === null) \n    return '';\n  else\n    return str.slice(beginSliceCodeUnit, endSliceCodeUnit);\n}\n\n/**\n * Returns the characters in a string beginning at the specified location through\n * the specified number of characters.\n * \n * @param  {number}  start         The start code point index in the string to \n *                                 extract from\n * @param  {number=}  length        Optional length to extract\n * @return {string}                The substring as selected by start and length\n */\nString.prototype.kmwSubstr = function(start, length?)\n{\n  var str = String(this);\n  if(start < 0) \n  {\n    start = str.kmwLength() + start;\n  }\n\tif(start < 0) start = 0;\n  var startCodeUnit = str.kmwCodePointToCodeUnit(start);\n  var endCodeUnit = startCodeUnit;\n  \n  if(startCodeUnit === null) return '';\n  \n  if(arguments.length < 2) {\n    endCodeUnit = str.length;\n  } else {\n    for(var i = 0; i < length; i++) endCodeUnit = str.kmwNextChar(endCodeUnit);\n  }\n  if(endCodeUnit === null)\n    return str.substring(startCodeUnit);\n  else\n    return str.substring(startCodeUnit, endCodeUnit);\n}\n\n/**\n * Returns the characters in a string between two indexes into the string.\n * \n * @param  {number}  indexA        The start code point index in the string to \n *                                 extract from\n * @param  {number}  indexB        The end code point index in the string to \n *                                 extract to\n * @return {string}                The substring as selected by indexA and indexB\n */\nString.prototype.kmwSubstring = function(indexA, indexB)\n{\n  var str = String(this),indexACodeUnit,indexBCodeUnit;\n  \n  if(typeof(indexB) == 'undefined') \n  {\n    indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\n    indexBCodeUnit =  str.length;    \n  } \n  else\n  {\n    if(indexA > indexB) { var c = indexA; indexA = indexB; indexB = c; }\n  \n    indexACodeUnit = str.kmwCodePointToCodeUnit(indexA);\n    indexBCodeUnit = str.kmwCodePointToCodeUnit(indexB);\n  }\n  if(isNaN(indexACodeUnit) || indexACodeUnit === null) indexACodeUnit = 0;\n  if(isNaN(indexBCodeUnit) || indexBCodeUnit === null) indexBCodeUnit = str.length;\n\n  return str.substring(indexACodeUnit, indexBCodeUnit);\n}\n\n/*\n  Helper functions\n*/\n\n/**\n * Returns the code unit index for the next code point in the string, accounting for\n * supplementary pairs \n *\n * @param  {number|null}  codeUnitIndex  The code unit position to increment\n * @return {number|null}                 The index of the next code point in the string,\n *                                       in code units\n */\nString.prototype.kmwNextChar = function(codeUnitIndex) {\n  var str = String(this);\n\n  if(codeUnitIndex === null || codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {\n    return null;\n  }\n  \n  var first = str.charCodeAt(codeUnitIndex);\n  if (first >= 0xD800 && first <= 0xDBFF && str.length > codeUnitIndex + 1) {\n    var second = str.charCodeAt(codeUnitIndex + 1);\n    if (second >= 0xDC00 && second <= 0xDFFF) {\n      if(codeUnitIndex == str.length - 2) {\n        return null;\n      }\n      return codeUnitIndex + 2;\n    }\n  }\n  return codeUnitIndex + 1;\n}\n\n/**\n * Returns the code unit index for the previous code point in the string, accounting\n * for supplementary pairs \n *\n * @param  {number|null}  codeUnitIndex  The code unit position to decrement\n * @return {number|null}                 The index of the previous code point in the\n *                                       string, in code units\n*/\nString.prototype.kmwPrevChar = function(codeUnitIndex) {\n  var str = String(this);\n\n  if(codeUnitIndex == null || codeUnitIndex <= 0 || codeUnitIndex > str.length) {\n    return null;\n  }\n  \n  var second = str.charCodeAt(codeUnitIndex - 1);\n  if (second >= 0xDC00 && second <= 0xDFFF && codeUnitIndex > 1) {\n    var first = str.charCodeAt(codeUnitIndex - 2);\n    if(first >= 0xD800 && first <= 0xDBFF) {\n      return codeUnitIndex - 2;\n    }\n  }\n  return codeUnitIndex - 1;\n}\n\n/**\n * Returns the corresponding code unit index to the code point index passed\n *\n * @param  {number|null} codePointIndex  A code point index in the string\n * @return {number|null}                 The corresponding code unit index\n */\nString.prototype.kmwCodePointToCodeUnit = function(codePointIndex) {\n  \n  if(codePointIndex === null) return null;\n  \n  var str = String(this);\n  var codeUnitIndex = 0;\n  \n  if(codePointIndex < 0) {\n    codeUnitIndex = str.length;\n    for(var i = 0; i > codePointIndex; i--) \n      codeUnitIndex = str.kmwPrevChar(codeUnitIndex);\t\n    return codeUnitIndex;\n  }\n  \n  if(codePointIndex == str.kmwLength()) return str.length;\n  \n  for(var i = 0; i < codePointIndex; i++)\n    codeUnitIndex = str.kmwNextChar(codeUnitIndex);\n  return codeUnitIndex;\n}\n\n/**\n * Returns the corresponding code point index to the code unit index passed\n *\n * @param  {number|null}  codeUnitIndex  A code unit index in the string\n * @return {number|null}                 The corresponding code point index\n */\nString.prototype.kmwCodeUnitToCodePoint = function(codeUnitIndex) {\n  var str = String(this);\n  \n  if(codeUnitIndex === null)\n    return null;\n  else if(codeUnitIndex == 0)\n    return 0;\n  else if(codeUnitIndex < 0)     \n    return str.substr(codeUnitIndex).kmwLength();\n  else\n    return str.substr(0,codeUnitIndex).kmwLength();\n}\n\n/**\n * Returns the character at a the code point index passed\n *\n * @param  {number}  codePointIndex  A code point index in the string\n * @return {string}                  The corresponding character\n */\nString.prototype.kmwCharAt = function(codePointIndex) {\n  var str = String(this);\n  \n  if(codePointIndex >= 0) return str.kmwSubstr(codePointIndex,1); else return '';\n}\n\n/**\n * String prototype library extensions for basic plane characters, \n * to simplify enabling or disabling supplementary plane functionality (I3319)\n */\n \n/**\n * Returns the code unit index for the next code point in the string\n *\n * @param  {number}  codeUnitIndex    A code point index in the string\n * @return {number|null}                   The corresponding character\n */ \nString.prototype.kmwBMPNextChar = function(codeUnitIndex)\n{\n  var str = String(this);\n  if(codeUnitIndex < 0 || codeUnitIndex >= str.length - 1) {\n    return null;\n  }\n  return codeUnitIndex + 1;\n}  \n\n/**\n * Returns the code unit index for the previous code point in the string\n *\n * @param  {number}  codeUnitIndex    A code unit index in the string\n * @return {number|null}                   The corresponding character\n */ \nString.prototype.kmwBMPPrevChar = function(codeUnitIndex)\n{\n  var str = String(this);\n\n  if(codeUnitIndex <= 0 || codeUnitIndex > str.length) {\n    return null;\n  }\n  return codeUnitIndex - 1;\n}  \n\n/**\n * Returns the code unit index for a code point index\n *\n * @param  {number}  codePointIndex   A code point index in the string\n * @return {number}                   The corresponding character\n */ \nString.prototype.kmwBMPCodePointToCodeUnit = function(codePointIndex)\n{\n  return codePointIndex;\n}\n\n/**\n * Returns the code point index for a code unit index\n *\n * @param  {number}  codeUnitIndex    A code point index in the string\n * @return {number}                   The corresponding character\n */ \nString.prototype.kmwBMPCodeUnitToCodePoint = function(codeUnitIndex)\n{\n  return codeUnitIndex;\n}\n\n/**\n * Returns the length of a BMP string\n *\n * @return {number}                   The length in code points\n */ \nString.prototype.kmwBMPLength = function()\n{\n  var str = String(this);\n  return str.length;\n}\n\n\n/**\n * Returns a substring \n *\n * @param  {number}  n\n * @param  {number=}  ln\n * @return {string}                   \n */ \nString.prototype.kmwBMPSubstr = function(n,ln?)\n{\n  var str=String(this);\n  if(n > -1) \n    return str.substr(n,ln);\n  else\n    return str.substr(str.length+n,-n);  \n}\n\n/**\n * Enable or disable supplementary plane string handling\n *\n * @param  {boolean}  bEnable\n */ \nString.kmwEnableSupplementaryPlane = function(bEnable)\n{\n  var p=String.prototype;\n  String._kmwFromCharCode = bEnable ? String.kmwFromCharCode : String.fromCharCode;\n  p._kmwCharAt = bEnable ? p.kmwCharAt : p.charAt;\n  p._kmwCharCodeAt = bEnable ? p.kmwCharCodeAt : p.charCodeAt;\n  p._kmwIndexOf = bEnable ? p.kmwIndexOf :p.indexOf;\n  p._kmwLastIndexOf = bEnable ? p.kmwLastIndexOf : p.lastIndexOf ;\n  p._kmwSlice = bEnable ? p.kmwSlice : p.slice;\n  p._kmwSubstring = bEnable ? p.kmwSubstring : p.substring;\n  p._kmwSubstr = bEnable ? p.kmwSubstr : p.kmwBMPSubstr;\n  p._kmwLength = bEnable ? p.kmwLength : p.kmwBMPLength;\n  p._kmwNextChar = bEnable ? p.kmwNextChar : p.kmwBMPNextChar;\n  p._kmwPrevChar = bEnable ? p.kmwPrevChar : p.kmwBMPPrevChar;\n  p._kmwCodePointToCodeUnit = bEnable ? p.kmwCodePointToCodeUnit : p.kmwBMPCodePointToCodeUnit;\n  p._kmwCodeUnitToCodePoint = bEnable ? p.kmwCodeUnitToCodePoint : p.kmwBMPCodeUnitToCodePoint;\n}\n\n","namespace com.keyman.text {\n  export var Codes = {\n    // Define Keyman Developer modifier bit-flags (exposed for use by other modules)\n    modifierCodes: {\n      \"LCTRL\":0x0001,\n      \"RCTRL\":0x0002,\n      \"LALT\":0x0004,\n      \"RALT\":0x0008,\n      \"SHIFT\":0x0010,\n      \"CTRL\":0x0020,\n      \"ALT\":0x0040,\n      \"CAPS\":0x0100,\n      \"NO_CAPS\":0x0200,\n      \"NUM_LOCK\":0x0400,\n      \"NO_NUM_LOCK\":0x0800,\n      \"SCROLL_LOCK\":0x1000,\n      \"NO_SCROLL_LOCK\":0x2000,\n      \"VIRTUAL_KEY\":0x4000\n    },\n\n    modifierBitmasks: {\n      \"ALL\":0x007F,\n      \"ALT_GR_SIM\": (0x0001 | 0x0004),\n      \"CHIRAL\":0x001F,    // The base bitmask for chiral keyboards.  Includes SHIFT, which is non-chiral.\n      \"IS_CHIRAL\":0x000F, // Used to test if a bitmask uses a chiral modifier.\n      \"NON_CHIRAL\":0x0070 // The default bitmask, for non-chiral keyboards\n    },\n\n    stateBitmasks: {\n      \"ALL\":0x3F00,\n      \"CAPS\":0x0300,\n      \"NUM_LOCK\":0x0C00,\n      \"SCROLL_LOCK\":0x3000\n    },\n\n    // Define standard keycode numbers (exposed for use by other modules)\n    keyCodes: {\n      \"K_BKSP\":8,\"K_TAB\":9,\"K_ENTER\":13,\n      \"K_SHIFT\":16,\"K_CONTROL\":17,\"K_ALT\":18,\"K_PAUSE\":19,\"K_CAPS\":20,\n      \"K_ESC\":27,\"K_SPACE\":32,\"K_PGUP\":33,\n      \"K_PGDN\":34,\"K_END\":35,\"K_HOME\":36,\"K_LEFT\":37,\"K_UP\":38,\n      \"K_RIGHT\":39,\"K_DOWN\":40,\"K_SEL\":41,\"K_PRINT\":42,\"K_EXEC\":43,\n      \"K_INS\":45,\"K_DEL\":46,\"K_HELP\":47,\"K_0\":48,\n      \"K_1\":49,\"K_2\":50,\"K_3\":51,\"K_4\":52,\"K_5\":53,\"K_6\":54,\"K_7\":55,\n      \"K_8\":56,\"K_9\":57,\"K_A\":65,\"K_B\":66,\"K_C\":67,\"K_D\":68,\"K_E\":69,\n      \"K_F\":70,\"K_G\":71,\"K_H\":72,\"K_I\":73,\"K_J\":74,\"K_K\":75,\"K_L\":76,\n      \"K_M\":77,\"K_N\":78,\"K_O\":79,\"K_P\":80,\"K_Q\":81,\"K_R\":82,\"K_S\":83,\n      \"K_T\":84,\"K_U\":85,\"K_V\":86,\"K_W\":87,\"K_X\":88,\"K_Y\":89,\"K_Z\":90,\n      \"K_NP0\":96,\"K_NP1\":97,\"K_NP2\":98,\n      \"K_NP3\":99,\"K_NP4\":100,\"K_NP5\":101,\"K_NP6\":102,\n      \"K_NP7\":103,\"K_NP8\":104,\"K_NP9\":105,\"K_NPSTAR\":106,\n      \"K_NPPLUS\":107,\"K_SEPARATOR\":108,\"K_NPMINUS\":109,\"K_NPDOT\":110,\n      \"K_NPSLASH\":111,\"K_F1\":112,\"K_F2\":113,\"K_F3\":114,\"K_F4\":115,\n      \"K_F5\":116,\"K_F6\":117,\"K_F7\":118,\"K_F8\":119,\"K_F9\":120,\n      \"K_F10\":121,\"K_F11\":122,\"K_F12\":123,\"K_NUMLOCK\":144,\"K_SCROLL\":145,\n      \"K_LSHIFT\":160,\"K_RSHIFT\":161,\"K_LCONTROL\":162,\"K_RCONTROL\":163,\n      \"K_LALT\":164,\"K_RALT\":165,\n      \"K_COLON\":186,\"K_EQUAL\":187,\"K_COMMA\":188,\"K_HYPHEN\":189,\n      \"K_PERIOD\":190,\"K_SLASH\":191,\"K_BKQUOTE\":192,\n      \"K_LBRKT\":219,\"K_BKSLASH\":220,\"K_RBRKT\":221,\n      \"K_QUOTE\":222,\"K_oE2\":226,\"K_OE2\":226,\n      \"K_LOPT\":50001,\"K_ROPT\":50002,\n      \"K_NUMERALS\":50003,\"K_SYMBOLS\":50004,\"K_CURRENCIES\":50005,\n      \"K_UPPER\":50006,\"K_LOWER\":50007,\"K_ALPHA\":50008,\n      \"K_SHIFTED\":50009,\"K_ALTGR\":50010,\n      \"K_TABBACK\":50011,\"K_TABFWD\":50012\n    },\n\n    codesUS: [\n      ['0123456789',';=,-./`', '[\\\\]\\''],\n      [')!@#$%^&*(',':+<_>?~', '{|}\"']\n    ]\n  }\n}","namespace com.keyman.text {\n  export enum Browser {\n    Chrome = 'chrome',\n    Edge = 'edge',\n    Firefox = 'firefox',\n    Native = 'native', // Used by embedded mode\n    Opera = 'opera',\n    Safari = 'safari',\n    Other = 'other'\n  }\n\n  export enum OperatingSystem {\n    Windows = 'windows',\n    macOS = 'macosx',\n    Linux = 'linux',\n    Android = 'android',\n    iOS = 'ios',\n    Other = 'other'\n  }\n\n  export enum FormFactor {\n    Desktop = 'desktop',\n    Phone = 'phone',\n    Tablet = 'tablet'\n  }\n\n  /**\n   * This class provides an abstract version of com.keyman.Device that is core-friendly, \n   * containing only the information needed by web-core for text processing use, devoid\n   * of any direct references to the DOM.\n   */\n  export class EngineDeviceSpec {\n    readonly browser: Browser;\n    readonly formFactor: FormFactor;\n    readonly OS: OperatingSystem;\n    readonly touchable: boolean;\n\n    constructor(browser: string, formFactor: string, OS: string, touchable: boolean) {\n      switch(browser.toLowerCase() as Browser) {\n        case Browser.Chrome:\n        case Browser.Edge:\n        case Browser.Firefox:\n        case Browser.Native:\n        case Browser.Opera:\n        case Browser.Safari:\n          this.browser = browser.toLowerCase() as Browser;\n          break;\n        default:\n          this.browser = Browser.Other;\n      }\n\n      switch(formFactor.toLowerCase() as FormFactor) {\n        case FormFactor.Desktop:\n        case FormFactor.Phone:\n        case FormFactor.Tablet:\n          this.formFactor = formFactor.toLowerCase() as FormFactor;\n          break;\n        default:\n          throw (\"Invalid form factor specified for device: \" + formFactor);\n      }\n\n      switch(OS.toLowerCase() as OperatingSystem) {\n        case OperatingSystem.Windows.toLowerCase():\n        case OperatingSystem.macOS.toLowerCase():\n        case OperatingSystem.Linux.toLowerCase():\n        case OperatingSystem.Android.toLowerCase():\n        case OperatingSystem.iOS.toLowerCase():\n          this.OS = OS.toLowerCase() as OperatingSystem;\n          break;\n        default:\n          this.OS = OperatingSystem.Other;\n      }\n      \n      this.touchable = touchable;\n    }\n  }\n}","namespace com.keyman.text {\n  // Defines the base Deadkey-tracking object.\n  \n  export class Deadkey {\n    p: number;  // Position of deadkey\n    d: number;  // Numerical id of the deadkey\n    o: number;  // Ordinal value of the deadkey (resolves same-place conflicts)\n    matched: number;\n\n    static ordinalSeed: number = 0;\n\n    constructor(pos: number, id: number) {\n      this.p = pos;\n      this.d = id;\n      this.o = Deadkey.ordinalSeed++;\n    }\n\n    match(p: number, d: number): boolean {\n      var result:boolean = (this.p == p && this.d == d);\n\n      return result;\n    }\n\n    set(): void {\n      this.matched = 1;\n    }\n\n    reset(): void {\n      this.matched = 0;\n    }\n\n    before(other: Deadkey): boolean {\n      return this.o < other.o;\n    }\n\n    clone(): Deadkey {\n      let dk = new Deadkey(this.p, this.d);\n      dk.o = this.o;\n\n      return dk;\n    }\n\n    /**\n     * Sorts the deadkeys in reverse order.\n     */\n    static sortFunc = function(a: Deadkey, b: Deadkey) {\n      // We want descending order, so we want 'later' deadkeys first.\n      if(a.p != b.p) {\n        return b.p - a.p;\n      } else {\n        return b.o - a.o;\n      }\n    };\n  }\n\n  // Object-orients deadkey management.\n  export class DeadkeyTracker {\n    dks: Deadkey[] = [];\n\n    toSortedArray(): Deadkey[] {\n      this.dks = this.dks.sort(Deadkey.sortFunc);\n      return [].concat(this.dks);\n    }\n\n    clone(): DeadkeyTracker {\n      let dkt = new DeadkeyTracker();\n      let dks = this.toSortedArray();\n\n      // Make sure to clone the deadkeys themselves - the Deadkey object is mutable.\n      dkt.dks = [];\n      dks.forEach(function(value: Deadkey) {\n        dkt.dks.push(value.clone());\n      });\n\n      return dkt;\n    }\n  \n    /**\n     * Function     isMatch      \n     * Scope        Public\n     * @param       {number}      caretPos  current cursor position\n     * @param       {number}      n         expected offset of deadkey from cursor\n     * @param       {number}      d         deadkey\n     * @return      {boolean}               True if deadkey found selected context matches val\n     * Description  Match deadkey at current cursor position\n     */\n    isMatch(caretPos: number, n: number, d: number): boolean {\n      if(this.dks.length == 0) {\n        return false; // I3318\n      }\n\n      var sp=caretPos;\n      n = sp - n;\n      for(var i = 0; i < this.dks.length; i++) {\n        // Don't re-match an already-matched deadkey.  It's possible to have two identical \n        // entries, and they should be kept separately.\n        if(this.dks[i].match(n, d) && !this.dks[i].matched) {\n          this.dks[i].set();\n          // Assumption:  since we match the first possible entry in the array, we\n          // match the entry with the lower ordinal - the 'first' deadkey in the position.\n          return true; // I3318\n        }\n      }\n\n      this.resetMatched(); // I3318\n\n      return false;\n    }\n\n    add(dk: Deadkey) {\n      this.dks = this.dks.concat(dk);\n    }\n\n    remove(dk: Deadkey) {\n      var index = this.dks.indexOf(dk);\n      this.dks.splice(index, 1);\n    }\n\n    clear() {\n      this.dks = [];\n    }\n\n    resetMatched() {\n      for(let dk of this.dks) {\n        dk.reset();\n      }\n    }\n    \n    deleteMatched(): void {\n      for(var Li = 0; Li < this.dks.length; Li++) {\n        if(this.dks[Li].matched) {\n          this.dks.splice(Li--, 1); // Don't forget to decrement!\n        }\n      }\n    }\n\n    /**\n     * Function     adjustPositions (formerly _DeadkeyAdjustPos)\n     * Scope        Private\n     * @param       {number}      Lstart      start position in context\n     * @param       {number}      Ldelta      characters to adjust by   \n     * Description  Adjust saved positions of deadkeys in context\n     */\n    adjustPositions(Lstart: number, Ldelta: number): void {\n      if(Ldelta == 0) {\n        return;\n      }\n      \n      for(let dk of this.dks) {\n        if(dk.p > Lstart) {\n          dk.p += Ldelta;\n        }\n      }\n    }\n\n    count(): number {\n      return this.dks.length;\n    }\n  }\n}","// Defines KMW's string extension functions.\n///<reference path=\"../text/kmwstring.ts\" />\n// Defines deadkey management in a manner attachable to each element interface.\n///<reference path=\"../text/deadkeys.ts\" />\n// Defines the KeyEvent type.\n///<reference path=\"keyEvent.ts\" />\n\nnamespace com.keyman.text {\n  export class TextTransform implements Transform {\n    readonly insert: string;\n    readonly deleteLeft: number;\n    readonly deleteRight?: number;\n\n    constructor(insert: string, deleteLeft: number, deleteRight?: number) {\n      this.insert = insert;\n      this.deleteLeft = deleteLeft;\n      this.deleteRight = deleteRight || 0;\n    }\n\n    public static readonly nil = new TextTransform('', 0, 0);\n  }\n\n  export class Transcription {\n    readonly token: number;\n    readonly keystroke: KeyEvent;\n    readonly transform: Transform;\n    alternates: Alternate[]; // constructed after the rest of the transcription.\n    readonly preInput: Mock;\n\n    private static tokenSeed: number = 0;\n\n    constructor(keystroke: KeyEvent, transform: Transform, preInput: Mock, alternates?: Alternate[]/*, removedDks: Deadkey[], insertedDks: Deadkey[]*/) {\n      let token = this.token = Transcription.tokenSeed++;\n\n      this.keystroke = keystroke;\n      this.transform = transform;\n      this.alternates = alternates;\n      this.preInput = preInput;\n\n      this.transform.id = this.token;\n\n      // Assign the ID to each alternate, as well.\n      if(alternates) {\n        alternates.forEach(function(alt) {\n          alt.sample.id = token;\n        });\n      }\n    }\n  }\n\n  export type Alternate = ProbabilityMass<Transform>;\n\n  export abstract class OutputTarget {\n    private _dks: text.DeadkeyTracker;\n\n    constructor() {\n      this._dks = new text.DeadkeyTracker();\n    }\n\n    /**\n     * Signifies that this OutputTarget has no default key processing behaviors.  This should be false\n     * for OutputTargets backed by web elements like HTMLInputElement or HTMLTextAreaElement.\n     */\n    get isSynthetic(): boolean {\n      return true;\n    }\n\n    resetContext(): void {\n      this.deadkeys().clear();\n    }\n\n    deadkeys(): text.DeadkeyTracker {\n      return this._dks;\n    }\n\n    hasDeadkeyMatch(n: number, d: number): boolean {\n      return this.deadkeys().isMatch(this.getDeadkeyCaret(), n, d);\n    }\n\n    insertDeadkeyBeforeCaret(d: number) {\n      var dk: Deadkey = new Deadkey(this.getDeadkeyCaret(), d);\n      this.deadkeys().add(dk);\n    }\n\n    /**\n     * Should be called by each output target immediately before text mutation operations occur.\n     * \n     * Maintains solutions to old issues:  I3318,I3319\n     * @param {number} delta  Use negative values if characters were deleted, positive if characters were added.\n     */\n    protected adjustDeadkeys(delta: number) {\n      this.deadkeys().adjustPositions(this.getDeadkeyCaret(), delta); \n    }\n\n    /**\n     * Needed to properly clone deadkeys for use with Mock element interfaces toward predictive text purposes.\n     * @param {object}  dks   An existing set of deadkeys to deep-copy for use by this element interface.\n     */\n    protected setDeadkeys(dks: text.DeadkeyTracker) {\n      this._dks = dks.clone();\n    }\n\n    /**\n     * Determines the basic operations needed to reconstruct the current OutputTarget's text from the prior state specified\n     * by another OutputTarget based on their text and caret positions.\n     * \n     * This is designed for use as a \"before and after\" comparison to determine the effect of a single keyboard rule at a time.\n     * As such, it assumes that the caret is immediately after any inserted text.\n     * @param from An output target (preferably a Mock) representing the prior state of the input/output system.\n     */\n    buildTransformFrom(original: OutputTarget): Transform {\n      let to = this.getText();\n      let from = original.getText();\n\n      let fromCaret = original.getDeadkeyCaret();\n      let toCaret = this.getDeadkeyCaret();\n\n      // Step 1:  Determine the number of left-deletions.\n      for(var newCaret=0; newCaret < fromCaret; newCaret++) {\n        if(from._kmwCharAt(newCaret) != to._kmwCharAt(newCaret)) {\n          break;\n        }\n      }\n\n      let deletedLeft = fromCaret - newCaret;\n\n      // Step 2:  Determine the other properties.\n      // Since the 'after' OutputTarget's caret indicates the end of any inserted text, we\n      // can easily calculate the rest.\n      let insertedLength = toCaret - newCaret;\n      let delta = to._kmwSubstr(newCaret, insertedLength);\n\n      let undeletedRight = to._kmwLength() - toCaret;\n      let originalRight = from._kmwLength() - fromCaret;\n\n      return new TextTransform(delta, deletedLeft, originalRight - undeletedRight);\n    }\n\n    buildTranscriptionFrom(original: OutputTarget, keyEvent: KeyEvent, alternates?: Alternate[]): Transcription {\n      let transform = this.buildTransformFrom(original);\n\n      // If we ever decide to re-add deadkey tracking, this is the place for it.\n\n      return new Transcription(keyEvent, transform, Mock.from(original), alternates);\n    }\n\n    /**\n     * Restores the `OutputTarget` to the indicated state.  Designed for use with `Transcription.preInput`.\n     * @param original An `OutputTarget` (usually a `Mock`).\n     */\n    restoreTo(original: OutputTarget) {\n      //\n      this.setTextBeforeCaret(original.getTextBeforeCaret());\n      this.setTextAfterCaret(original.getTextAfterCaret());\n\n      // Also, restore the deadkeys!\n      this._dks = original._dks.clone();\n    }\n\n    apply(transform: Transform) {\n      if(transform.deleteRight) {\n        this.setTextAfterCaret(this.getTextAfterCaret()._kmwSubstr(transform.deleteRight));\n      }\n\n      if(transform.deleteLeft) {\n        this.deleteCharsBeforeCaret(transform.deleteLeft);\n      }\n\n      if(transform.insert) {\n        this.insertTextBeforeCaret(transform.insert);\n      }\n\n      // We assume that all deadkeys are invalidated after applying a Transform, since\n      // prediction implies we'll be completing a word, post-deadkeys.\n      this._dks.clear();\n    }\n\n    /**\n     * Helper to `restoreTo` - allows directly setting the 'before' context to that of another\n     * `OutputTarget`.\n     * @param s \n     */\n    protected setTextBeforeCaret(s: string): void {\n      // This one's easy enough to provide a default implementation for.\n      this.deleteCharsBeforeCaret(this.getTextBeforeCaret()._kmwLength());\n      this.insertTextBeforeCaret(s);\n    }\n\n    /**\n     * Helper to `restoreTo` - allows directly setting the 'after' context to that of another\n     * `OutputTarget`.\n     * @param s \n     */\n    protected abstract setTextAfterCaret(s: string): void;\n\n    /**\n     * Clears any selected text within the wrapper's element(s).\n     * Silently does nothing if no such text exists.\n     */\n    abstract clearSelection(): void;\n\n    /**\n     * Clears any cached selection-related state values.\n     */\n    abstract invalidateSelection(): void;\n    \n    /**\n     * Indicates whether or not the underlying element has its own selection (input, textarea)\n     * or is part of (or possesses) the DOM's active selection.\n     */\n    abstract hasSelection(): boolean;\n\n    /**\n     * Returns an index corresponding to the caret's position for use with deadkeys.\n     */\n    abstract getDeadkeyCaret(): number;\n    \n    /**\n     * Relative to the caret, gets the current context within the wrapper's element.\n     */\n    abstract getTextBeforeCaret(): string;\n\n    /**\n     * Relative to the caret (and/or active selection), gets the element's text after the caret,\n     * excluding any actively selected text that would be immediately replaced upon text entry.\n     */\n    abstract getTextAfterCaret(): string;\n\n    /**\n     * Gets the element's full text, including any text that is actively selected.\n     */\n    abstract getText(): string;\n\n    /**\n     * Performs context deletions (from the left of the caret) as needed by the KeymanWeb engine and\n     * corrects the location of any affected deadkeys.\n     * \n     * Does not delete deadkeys (b/c KMW 1 & 2 behavior maintenance).\n     * @param dn The number of characters to delete.  If negative, context will be left unchanged.\n     */\n    abstract deleteCharsBeforeCaret(dn: number): void;\n\n    /**\n     * Inserts text immediately before the caret's current position, moving the caret after the\n     * newly inserted text in the process along with any affected deadkeys.\n     * \n     * @param s Text to insert before the caret's current position.\n     */\n    abstract insertTextBeforeCaret(s: string): void;\n\n    /**\n     * Allows element-specific handling for ENTER key inputs.  Conceptually, this should usually\n     * correspond to `insertTextBeforeCaret('\\n'), but actual implementation will vary greatly among\n     * elements.\n     */\n    abstract handleNewlineAtCaret(): void;\n\n    /**\n     * Saves element-specific state properties prone to mutation, enabling restoration after\n     * text-output operations.\n     */\n    saveProperties() {\n      // Most element interfaces won't need anything here.\n    }\n\n    /**\n     * Restores previously-saved element-specific state properties.  Designed for use after text-output\n     * ops to facilitate more-seamless web-dev and user interactions.\n     */\n    restoreProperties(){\n      // Most element interfaces won't need anything here. \n    }\n\n    /**\n     * Generates a synthetic event on the underlying element, signalling that its value has changed.\n     */\n    abstract doInputEvent(): void;\n  }\n\n  // Due to some interesting requirements on compile ordering in TS,\n  // this needs to be in the same file as OutputTarget now.\n  export class Mock extends OutputTarget {\n    text: string;\n    caretIndex: number;\n\n    constructor(text?: string, caretPos?: number) {\n      super();\n\n      this.text = text ? text : \"\";\n      var defaultLength = this.text._kmwLength();\n      this.caretIndex = caretPos ? caretPos : defaultLength;\n    }\n\n    // Clones the state of an existing EditableElement, creating a Mock version of its state.\n    static from(outputTarget: OutputTarget) {\n      let preText = outputTarget.getTextBeforeCaret();\n      let caretIndex = preText._kmwLength();\n\n      // We choose to ignore (rather, pre-emptively remove) any actively-selected text,\n      // as since it's always removed instantly during any text mutation operations.\n      let clone = new Mock(preText + outputTarget.getTextAfterCaret(), caretIndex);\n\n      clone.setDeadkeys(outputTarget.deadkeys());\n\n      return clone;\n    }\n    \n    clearSelection(): void {\n      return;\n    }\n\n    invalidateSelection(): void {\n      return;\n    }\n\n    hasSelection(): boolean {\n      return true;\n    }\n\n    getDeadkeyCaret(): number {\n      return this.caretIndex;\n    }\n\n    setDeadkeyCaret(index: number) {\n      if(index < 0 || index > this.text._kmwLength()) {\n        throw new Error(\"Provided caret index is out of range.\");\n      }\n      this.caretIndex = index;\n    }\n\n    getTextBeforeCaret(): string {\n      return this.text.kmwSubstr(0, this.caretIndex);\n    }\n\n    getTextAfterCaret(): string {\n      return this.text.kmwSubstr(this.caretIndex);\n    }\n\n    getText(): string {\n      return this.text;\n    }\n\n    deleteCharsBeforeCaret(dn: number): void {\n      if(dn >= 0) {\n        if(dn > this.caretIndex) {\n          dn = this.caretIndex;\n        }\n        this.text = this.text.kmwSubstr(0, this.caretIndex - dn) + this.getTextAfterCaret();\n        this.caretIndex -= dn;\n      }\n    }\n\n    insertTextBeforeCaret(s: string): void {\n      this.text = this.getTextBeforeCaret() + s + this.getTextAfterCaret();\n      this.caretIndex += s.kmwLength();\n    }\n\n    handleNewlineAtCaret(): void {\n      this.insertTextBeforeCaret('\\n');\n    }\n\n    protected setTextAfterCaret(s: string): void {\n      this.text = this.getTextBeforeCaret() + s;\n    }\n\n    doInputEvent() {\n      // Mock isn't backed by an element, so it won't have any event listeners.\n    }\n  }\n}","/// <reference path=\"engineDeviceSpec.ts\" />\n/// <reference path=\"outputTarget.ts\" />\n\nnamespace com.keyman.text {\n  // Represents a probability distribution over a keyboard's keys.\n  // Defined here to avoid compilation issues.\n  export type KeyDistribution = {keyId: string, p: number}[];\n\n  /**\n   * This class is defined within its own file so that it can be loaded by code outside of KMW without\n   * having to actually load the entirety of KMW.\n   */\n  export class KeyEvent {\n    Ltarg: OutputTarget;\n    Lcode: number;\n    Lstates: number;\n    LmodifierChange?: boolean;\n    Lmodifiers: number;\n    LisVirtualKey: boolean;\n    vkCode: number;\n    kName: string;\n    kLayer?: string;   // The key's layer property\n    kbdLayer?: string; // The virtual keyboard's active layer\n    kNextLayer?: string;\n    \n    // Holds relevant event properties leading to construction of this KeyEvent.\n    source?: any; // Technically, KeyEvent|MouseEvent|Touch - but those are DOM types that must be kept out of headless mode.\n    // Holds a generated fat-finger distribution (when appropriate)\n    keyDistribution?: KeyDistribution;\n    \n    /**\n     * The device model for web-core to follow when processing the keystroke.\n     */\n    device: EngineDeviceSpec;\n\n    /**\n     * `true` if this event was produced by sources other than a DOM-based KeyboardEvent.\n     */\n    isSynthetic: boolean = true;\n  };\n}","namespace com.keyman.text {\n  /**\n   * Represents the commands and state changes that result from a matched keyboard rule.\n   */\n  export class RuleBehavior {\n    /**\n     * The before-and-after Transform from matching a keyboard rule.\n     */\n    transcription: Transcription;\n\n    /**\n     * Indicates whether or not a BEEP command was issued by the matched keyboard rule.\n     */\n    beep?: boolean;\n\n    /**\n     * A set of changed store values triggered by the matched keyboard rule.\n     */\n    setStore: {[id: number]: string} = {};\n\n    /**\n     * A set of variable stores with save requests triggered by the matched keyboard rule\n     */\n    saveStore: {[name: string]: VariableStore} = {};\n\n    /**\n     * Denotes a non-output default behavior; this should be evaluated later, against the true keystroke.\n     */\n    triggersDefaultCommand?: boolean;\n\n    /**\n     * Denotes error log messages generated when attempting to generate this behavior.\n     */\n    errorLog?: string;\n\n    /**\n     * Denotes warning log messages generated when attempting to generate this behavior.\n     */\n    warningLog?: string;\n\n    /**\n     * If predictive text is active, contains a Promise returning predictive Suggestions.\n     */\n    predictionPromise?: Promise<Suggestion[]>;\n\n    finalize(processor: KeyboardProcessor) {\n      let outputTarget = this.transcription.keystroke.Ltarg;\n\n      if(processor.beepHandler && this.beep) {\n        processor.beepHandler(outputTarget);\n      }\n\n      for(let storeID in this.setStore) {\n        let sysStore = processor.keyboardInterface.systemStores[storeID];\n        if(sysStore) {\n          try {\n            sysStore.set(this.setStore[storeID]);\n          } catch (error) {\n            if(processor.errorLogger) {\n              processor.errorLogger(\"Rule attempted to perform illegal operation - 'platform' may not be changed.\");\n            }\n          }\n        } else if(processor.warningLogger) {\n          processor.warningLogger(\"Unknown store affected by keyboard rule: \" + storeID);\n        }\n      }\n\n      if(processor.keyboardInterface.variableStoreSerializer) {\n        for(let storeID in this.saveStore) {\n          processor.keyboardInterface.variableStoreSerializer.saveStore(processor.activeKeyboard.id, storeID, this.saveStore[storeID]);\n        }\n      }\n\n      if(this.triggersDefaultCommand) {\n        let keyEvent = this.transcription.keystroke;\n        DefaultOutput.applyCommand(keyEvent);\n      }\n\n      if(processor.warningLogger && this.warningLog) {\n        processor.warningLogger(this.warningLog);\n      } else if(processor.errorLogger && this.errorLog) {\n        processor.errorLogger(this.errorLog);\n      }\n    }\n  }\n}","// Establishes key-code definitions.\n/// <reference path=\"codes.ts\" />\n// Defines our generalized \"KeyEvent\" class.\n/// <reference path=\"keyEvent.ts\" />\n\nnamespace com.keyman.text {\n  export enum EmulationKeystrokes {\n    Space = ' ',\n    Enter = '\\n',\n    Backspace = '\\b'\n  }\n\n  /**\n   * Defines a collection of static library functions that define KeymanWeb's default (implied) keyboard rule behaviors.\n   */\n  export class DefaultOutput {\n    private constructor() {\n    }\n\n    static codeForEvent(Lkc: KeyEvent) {\n      return Codes.keyCodes[Lkc.kName] || Lkc.Lcode;;\n    }\n\n    /**\n     * Serves as a default keycode lookup table.  This may be referenced safely by mnemonic handling without fear of side-effects.\n     * Also used by Processor.defaultRuleBehavior to generate output after filtering for special cases.\n     */\n    public static forAny(Lkc: KeyEvent, isMnemonic: boolean) {\n      var char = '';\n\n      // A pretty simple table of lookups, corresponding VERY closely to the original defaultKeyOutput.\n      if((char = DefaultOutput.forSpecialEmulation(Lkc)) != null) {\n        return char;\n      } else if(!isMnemonic && ((char = DefaultOutput.forNumpadKeys(Lkc)) != null)) {\n        return char;\n      } else if((char = DefaultOutput.forUnicodeKeynames(Lkc)) != null) {\n        return char;\n      } else if((char = DefaultOutput.forBaseKeys(Lkc)) != null) {\n        return char;\n      } else {\n        // // For headless and embeddded, we may well allow '\\t'.  It's DOM mode that has other uses.\n        // // Not originally defined for text output within defaultKeyOutput.\n        // // We can't enable it yet, as it'll cause hardware keystrokes in the DOM to output '\\t' rather\n        // // than rely on the browser-default handling.\n        let code = DefaultOutput.codeForEvent(Lkc);\n        switch(code) {\n        //   case Codes.keyCodes['K_TAB']:\n        //   case Codes.keyCodes['K_TABBACK']:\n        //   case Codes.keyCodes['K_TABFWD']:\n        //     return '\\t';\n          default:\n           return '';\n        }\n      }\n    }\n\n    /**\n     * isCommand - returns a boolean indicating if a non-text event should be triggered by the keystroke.\n     */\n    public static isCommand(Lkc: KeyEvent): boolean {\n      let code = DefaultOutput.codeForEvent(Lkc);\n\n      switch(code) {\n        // Should we ever implement them:\n        // case Codes.keyCodes['K_LEFT']:  // would not output text, but would alter the caret's position in the context.\n        // case Codes.keyCodes['K_RIGHT']:\n        //   return true;\n        default:\n          return false;\n      }\n    }\n\n    /**\n     * Used when a RuleBehavior represents a non-text \"command\" within the Engine.  This will generally \n     * trigger events that require context reset - often by moving the caret or by moving what OutputTarget\n     * the caret is in.  However, we let those events perform the actual context reset.\n     * \n     * Note:  is extended by DOM-aware KeymanWeb code.\n     */\n    public static applyCommand(Lkc: KeyEvent): void {\n      // Notes for potential default-handling extensions:\n      // \n      // switch(code) {\n        // // Problem:  clusters, and doing them right.\n        // // The commented-out code below should be a decent starting point, but clusters make it complex.\n        // // Mostly based on pre-12.0 code, but the general idea should be relatively clear.\n        //\n        // case Codes.keyCodes['K_LEFT']:\n        //   if(touchAlias) {\n        //     var caretPos = keymanweb.getTextCaret(Lelem);\n        //     keymanweb.setTextCaret(Lelem, caretPos - 1 >= 0 ? caretPos - 1 : 0);\n        //   }\n        //   break;\n        // case Codes.keyCodes['K_RIGHT']:\n        //   if(touchAlias) {\n        //     var caretPos = keymanweb.getTextCaret(Lelem);\n        //     keymanweb.setTextCaret(Lelem, caretPos + 1);\n        //   }\n        //   if(code == VisualKeyboard.keyCodes['K_RIGHT']) {\n        //     break;\n        //   }\n      // }\n      //\n      // Note that these would be useful even outside of a DOM context.\n    }\n\n    /**\n     * Codes matched here generally have default implementations when in a browser but require emulation\n     * for 'synthetic' `OutputTarget`s like `Mock`s, which have no default text handling.\n     */\n    public static forSpecialEmulation(Lkc: KeyEvent): EmulationKeystrokes {\n      let code = DefaultOutput.codeForEvent(Lkc);\n\n      switch(code) {\n        case Codes.keyCodes['K_BKSP']:\n          return EmulationKeystrokes.Backspace;\n        case Codes.keyCodes['K_ENTER']:\n          return EmulationKeystrokes.Enter;\n        // (Probably) only here for legacy reasons; it's always been handled alongside the other two.\n        case Codes.keyCodes['K_SPACE']:\n          return EmulationKeystrokes.Space;\n        // case Codes.keyCodes['K_DEL']:\n        //   return '\\u007f'; // 127, ASCII / Unicode control code for DEL.\n        default:\n          return null;\n      }\n    }\n\n    // Should not be used for mnenomic keyboards.  forAny()'s use of this method checks first.\n    public static forNumpadKeys(Lkc: KeyEvent) {\n      // Translate numpad keystrokes into their non-numpad equivalents\n      if(Lkc.Lcode >= Codes.keyCodes[\"K_NP0\"]  &&  Lkc.Lcode <= Codes.keyCodes[\"K_NPSLASH\"]) {\n        // Number pad, numlock on\n        if(Lkc.Lcode < 106) {\n          var Lch = Lkc.Lcode-48;\n        } else {\n          Lch = Lkc.Lcode-64;\n        }\n        let ch = String._kmwFromCharCode(Lch); //I3319\n        return ch;\n      } else {\n        return null;\n      }\n    }\n\n    // Test for fall back to U_xxxxxx key id\n    // For this first test, we ignore the keyCode and use the keyName\n    public static forUnicodeKeynames(Lkc: KeyEvent, ruleBehavior?: RuleBehavior) {\n      let keyName = Lkc.kName;\n\n      // Test for fall back to U_xxxxxx key id\n      // For this first test, we ignore the keyCode and use the keyName\n      if(!keyName || keyName.substr(0,2) != 'U_') {\n        return null;\n      }\n    \n      var codePoint = parseInt(keyName.substr(2,6), 16);\n      if (((0x0 <= codePoint) && (codePoint <= 0x1F)) || ((0x80 <= codePoint) && (codePoint <= 0x9F))) {\n        // Code points [U_0000 - U_001F] and [U_0080 - U_009F] refer to Unicode C0 and C1 control codes.\n        // Check the codePoint number and do not allow output of these codes via U_xxxxxx shortcuts.\n        if(ruleBehavior) {\n          ruleBehavior.errorLog = (\"Suppressing Unicode control code: U_00\" + codePoint.toString(16));\n        }\n        return null;\n      } else {\n        // String.fromCharCode() is inadequate to handle the entire range of Unicode\n        // Someday after upgrading to ES2015, can use String.fromCodePoint()\n        return String.kmwFromCharCode(codePoint);\n      }\n    }\n\n    // Test for otherwise unimplemented keys on the the base default & shift layers.\n    // Those keys must be blocked by keyboard rules if intentionally unimplemented; otherwise, this function will trigger.\n    public static forBaseKeys(Lkc: KeyEvent, ruleBehavior?: RuleBehavior) {\n      let n = Lkc.Lcode;\n      let keyShiftState = Lkc.Lmodifiers;\n\n      // check if exact match to SHIFT's code.  Only the 'default' and 'shift' layers should have default key outputs.\n      // TODO:  Extend to allow AltGr as well - better mnemonic support.\n      if(keyShiftState == Codes.modifierCodes['SHIFT']) {\n        keyShiftState = 1;\n      } else if(keyShiftState != 0) {\n        if(ruleBehavior) {\n          ruleBehavior.warningLog = \"KMW only defines default key output for the 'default' and 'shift' layers!\";\n        }\n        return null;\n      }\n\n      // Now that keyShiftState is either 0 or 1, we can use the following structure to determine the default output.\n      try {\n        if(n >= Codes.keyCodes['K_0'] && n <= Codes.keyCodes['K_9']) { // The number keys.\n          return Codes.codesUS[keyShiftState][0][n-Codes.keyCodes['K_0']];\n        } else if(n >= Codes.keyCodes['K_A'] && n <= Codes.keyCodes['K_Z']) { // The base letter keys\n          return String.fromCharCode(n+(keyShiftState?0:32));  // 32 is the offset from uppercase to lowercase.\n        } else if(n >= Codes.keyCodes['K_COLON'] && n <= Codes.keyCodes['K_BKQUOTE']) {\n          return Codes.codesUS[keyShiftState][1][n-Codes.keyCodes['K_COLON']];\n        } else if(n >= Codes.keyCodes['K_LBRKT'] && n <= Codes.keyCodes['K_QUOTE']) {\n          return Codes.codesUS[keyShiftState][2][n-Codes.keyCodes['K_LBRKT']];\n        }\n      } catch (e) {\n        if(ruleBehavior) {\n          ruleBehavior.errorLog = \"Error detected with default mapping for key:  code = \" + n + \", shift state = \" + (keyShiftState == 1 ? 'shift' : 'default');\n        }\n      }\n\n      return null;\n    }\n  }\n}\n","//Autogenerated file - do not modify!\nnamespace com.keyman.environment {\n  export var VERSION = \"14.0\";\n  export var BUILD = 52;\n}  \n\n","// Defines build-environment variables, as used for versioning.\n/// <reference path=\"../environment.inc.ts\" />\n\n// Ensure that this class contains no reference into core KMW code - it is referenced\n// by components intended to be modular and possible to separate from core KMW.\n\nnamespace com.keyman.utils {\n  // Dotted-decimal version\n  export class Version {\n    public static readonly CURRENT = new Version(com.keyman.environment.VERSION);\n\n    // Represents a default version value for keyboards compiled before this was compiled into keyboards.\n    // The exact version is unknown at this point, but the value is \"good enough\" for what we need.\n    public static readonly DEVELOPER_VERSION_FALLBACK = new Version([9, 0, 0]);\n\n    // For 12.0, the old default behavior of adding missing keycaps to the default layers was removed,\n    // as it results in unexpected, bug-like behavior for keyboard designers when it is unwanted.\n    public static readonly NO_DEFAULT_KEYCAPS = new Version([12, 0]);\n\n    public static readonly MAC_POSSIBLE_IPAD_ALIAS = new Version([10, 15]);\n\n    private readonly components: number[]\n\n    /**\n     * Parses version information, preparing it for use in comparisons.\n     * @param text Either a string representing a version number (ex: \"9.0.0\") or an array representing\n     *             its components (ex: [9, 0, 0]).\n     */\n    constructor(text: String | number[]) {\n      // If a keyboard doesn't specify a version, use the DEVELOPER_VERSION_FALLBACK values.\n      if(text === undefined || text === null) {\n        this.components = [].concat(Version.DEVELOPER_VERSION_FALLBACK.components);\n        return;\n      }\n\n      if(Array.isArray(text)) {\n        let components = text as number[];\n        if(components.length < 2) {\n          throw new Error(\"Version string must have at least a major and minor component!\");\n        } else {\n          this.components = [].concat(components);\n          return;\n        }\n      }\n\n      // else, standard constructor path.\n      let parts = text.split('.');\n      let componentArray: number[] = [];\n\n      if(parts.length < 2) {\n        throw new Error(\"Version string must have at least a major and minor component!\");\n      }\n\n      for(let i=0; i < parts.length; i++) {\n        let value = parseInt(parts[i], 10);\n        if(isNaN(value)) {\n          throw new Error(\"Version string components must be numerical!\");\n        }\n\n        componentArray.push(value);\n      }\n\n      this.components = componentArray;\n    }\n\n    get major(): number {\n      return this.components[0];\n    }\n\n    get minor(): number {\n      return this.components[1];\n    }\n\n    toString(): string {\n      return this.components.join('.');\n    }\n\n    toJSON(): string {\n      return this.toString();\n    }\n\n    equals(other: Version): boolean {\n      return this.compareTo(other) == 0;\n    }\n\n    precedes(other: Version): boolean {\n      return this.compareTo(other) < 0;\n    }\n\n    compareTo(other: Version): number {\n      // If the version info depth differs, we need a flag to indicate which instance is shorter.\n      var isShorter: boolean = this.components.length < other.components.length;\n      var maxDepth: number = (this.components.length < other.components.length) ? this.components.length : other.components.length;\n\n      var i: number;\n      for(i = 0; i < maxDepth; i++) {\n        let delta = this.components[i] - other.components[i];\n        if(delta != 0) {\n          return delta;\n        }\n      }\n\n      var longList = isShorter ? other.components : this.components;\n      do {\n        if(longList[i] > 0) {\n          return isShorter ? -1 : 1;\n        }\n        i++;\n      } while (i < longList.length);\n\n      // Equal.\n      return 0;\n    }\n  }\n}","namespace com.keyman.utils {\n  /**\n   * Function     deepCopy\n   * Scope        Private\n   * @param       {Object}      p           object to copy\n   * @param       {Array=}      c0          array member being copied\n   * @return      {Object}                  clone ('deep copy') of object\n   * Description  Makes an actual copy (not a reference) of an object, copying simple members,\n   *              arrays and member objects but not functions, so use with care!\n   */\n  export function deepCopy<T>(p:T, c0?): T {\n    var c = c0 || {};\n    for (var i in p) {\n      if(typeof p[i] === 'object' && p[i] != null) {\n        c[i] = (p[i].constructor === Array ) ? [] : {};\n        deepCopy(p[i],c[i]);\n      }\n      else {\n        c[i] = p[i];\n      }\n    }\n\n    return c;\n  }\n}","/***\n   KeymanWeb 10.0\n   Copyright 2017 SIL International\n***/\n\n///<reference path=\"../utils/version.ts\"/>\n///<reference path=\"../utils/deepCopy.ts\"/>\n\nnamespace com.keyman.keyboards {\n  let Codes = com.keyman.text.Codes;\n\n  export type KLS = {[layerName: string]: string[]};\n\n  // The following types provide type definitions for the full JSON format we use for visual keyboard definitions.\n  export type ButtonClass = number|\"0\"|\"1\"|\"2\"|\"3\"|\"4\"|\"5\"|\"6\"|\"7\"|\"8\"|\"9\"|\"10\"\n\n  export type LayoutKey = {\n    \"id\"?: string,\n    \"text\"?: string,\n    \"sp\"?: ButtonClass,\n    \"width\"?: string,\n    \"layer\"?: string, // Key derives any modifiers from the value set here if specified, not the actual display layer.\n    \"nextlayer\"?: string,\n    \"pad\"?: string,\n    \"sk\"?: LayoutKey[]\n  }\n  \n  export type LayoutRow = {\n    \"id\": string, // represents a number, though...\n    \"key\": LayoutKey[]\n  };\n\n  export type LayoutLayer = {\n    \"id\": string,\n    \"row\": LayoutRow[],\n\n    // Post-processing elements.\n    shiftKey?: LayoutKey,\n    capsKey?: LayoutKey,\n    numKey?: LayoutKey,\n    scrollKey?: LayoutKey\n    aligned?: boolean\n  }\n\n  export type LayoutFormFactor = {\n    \"font\": string,\n    \"layer\": LayoutLayer[],\n    keyLabels?: boolean,\n    isDefault?: boolean;\n  }\n\n  export type LayoutSpec = {\n    \"desktop\"?: LayoutFormFactor,\n    \"phone\"?: LayoutFormFactor,\n    \"tablet\"?: LayoutFormFactor\n  }\n  \n  // This class manages default layout construction for consumption by OSKs without a specified layout.\n  export class Layouts {\n    static dfltCodes=[\n      \"K_BKQUOTE\",\"K_1\",\"K_2\",\"K_3\",\"K_4\",\"K_5\",\"K_6\",\"K_7\",\"K_8\",\"K_9\",\"K_0\",\n      \"K_HYPHEN\",\"K_EQUAL\",\"K_*\",\"K_*\",\"K_*\",\"K_Q\",\"K_W\",\"K_E\",\"K_R\",\"K_T\",\n      \"K_Y\",\"K_U\",\"K_I\",\"K_O\",\"K_P\",\"K_LBRKT\",\"K_RBRKT\",\"K_BKSLASH\",\"K_*\",\n      \"K_*\",\"K_*\",\"K_A\",\"K_S\",\"K_D\",\"K_F\",\"K_G\",\"K_H\",\"K_J\",\"K_K\",\"K_L\",\n      \"K_COLON\",\"K_QUOTE\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_oE2\",\n      \"K_Z\",\"K_X\",\"K_C\",\"K_V\",\"K_B\",\"K_N\",\"K_M\",\"K_COMMA\",\"K_PERIOD\",\n      \"K_SLASH\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_*\",\"K_SPACE\"\n    ];\n\n    static dfltText='`1234567890-=\\xA7~~qwertyuiop[]\\\\~~~asdfghjkl;\\'~~~~~?zxcvbnm,./~~~~~ '\n      +'~!@#$%^&*()_+\\xA7~~QWERTYUIOP{}\\\\~~~ASDFGHJKL:\"~~~~~?ZXCVBNM<>?~~~~~ ';\n\n    static readonly DEFAULT_RAW_SPEC = {'F':'Tahoma', 'BK': Layouts.dfltText};\n\n    // Cross-reference with the ids in osk.setButtonClass.\n    static buttonClasses: {[name: string]: ButtonClass} = {\n      'DEFAULT':'0',\n      'SHIFT':'1',\n      'SHIFT-ON':'2',\n      'SPECIAL':'3',\n      'SPECIAL-ON':'4',\n      'DEADKEY':'8',\n      'BLANK':'9',\n      'HIDDEN':'10'\n    };\n\n    static modifierSpecials = {\n      'leftalt': '*LAlt*',\n      'rightalt': '*RAlt*',\n      'alt': '*Alt*',\n      'leftctrl': '*LCtrl*',\n      'rightctrl': '*RCtrl*',\n      'ctrl': '*Ctrl*',\n      'ctrl-alt': '*AltGr*',\n      'leftctrl-leftalt': '*LAltCtrl*',\n      'rightctrl-rightalt': '*RAltCtrl*',\n      'leftctrl-leftalt-shift': '*LAltCtrlShift*',\n      'rightctrl-rightalt-shift': '*RAltCtrlShift*',\n      'shift': '*Shift*',\n      'shift-alt': '*AltShift*',\n      'shift-ctrl': '*CtrlShift*',\n      'shift-ctrl-alt': '*AltCtrlShift*',\n      'leftalt-shift': '*LAltShift*',\n      'rightalt-shift': '*RAltShift*',\n      'leftctrl-shift': '*LCtrlShift*',\n      'rightctrl-shift': '*RCtrlShift*'\n    };\n    \n    /**\n    * Build a default layout for keyboards with no explicit layout\n    *\n    * @param   {Object}  PVK             keyboard object (as loaded)\n    * @param   {Object}  kbdDevVersion   object representing the version of Developer that compiled the keyboard\n    * @param   {number}  kbdBitmask      keyboard modifier bitmask\n    * @param   {string}  formFactor\n    * @return  {Object}\n    */\n    static buildDefaultLayout(PVK, keyboard: Keyboard, formFactor: string): LayoutFormFactor {\n      // Build a layout using the default for the device\n      var layoutType=formFactor;\n\n      if(typeof Layouts.dfltLayout[layoutType] != 'object') {\n        layoutType = 'desktop';\n      }\n\n      let kbdBitmask = Codes.modifierBitmasks['NON_CHIRAL'];\n      // An unfortunate dependency there.  Should probably also set a version within web-core for use.\n      let kbdDevVersion = utils.Version.CURRENT;\n      if(keyboard) {\n        kbdBitmask = keyboard.modifierBitmask;\n        kbdDevVersion = keyboard.compilerVersion;\n      }\n\n      if(!PVK) {\n        PVK = this.DEFAULT_RAW_SPEC;\n      }\n\n      // Clone the default layout object for this device\n      var layout: LayoutFormFactor = utils.deepCopy(Layouts.dfltLayout[layoutType]);\n\n      var n,layers=layout['layer'], keyLabels: KLS=PVK['KLS'], key102=PVK['K102'];\n      var i, j, k, m, row, rows: LayoutRow[], key: LayoutKey, keys: LayoutKey[];\n      var chiral: boolean = (kbdBitmask & Codes.modifierBitmasks.IS_CHIRAL) != 0;\n\n      var kmw10Plus = !(typeof keyLabels == 'undefined' || !keyLabels);\n      if(!kmw10Plus) {\n        // Save the processed key label information to the keyboard's general data.\n        // Makes things more efficient elsewhere and for reloading after keyboard swaps.\n        keyLabels = PVK['KLS'] = Layouts.processLegacyDefinitions(PVK['BK']);\n      }\n\n      // Identify key labels (e.g. *Shift*) that require the special OSK font\n      var specialLabel=/\\*\\w+\\*/;\n\n      // *** Step 1:  instantiate the layer objects. ***\n\n      // Get the list of valid layers, enforcing that the 'default' layer must be the first one processed.\n      var validIdList = Object.getOwnPropertyNames(keyLabels), invalidIdList = [];\n      validIdList.splice(validIdList.indexOf('default'), 1);\n      validIdList = [ 'default' ].concat(validIdList);\n\n      // Automatic AltGr emulation if the 'leftctrl-leftalt' layer is otherwise undefined.\n      if(keyboard && keyboard.emulatesAltGr) {\n        // We insert only the layers that need to be emulated.\n        if((validIdList.indexOf('leftctrl-leftalt') == -1) && validIdList.indexOf('rightalt') != -1) {\n          validIdList.push('leftctrl-leftalt');\n          keyLabels['leftctrl-leftalt'] = keyLabels['rightalt'];\n        }\n\n        if((validIdList.indexOf('leftctrl-leftalt-shift') == -1) && validIdList.indexOf('rightalt-shift') != -1) {\n          validIdList.push('leftctrl-leftalt-shift');\n          keyLabels['leftctrl-leftalt-shift'] = keyLabels['rightalt-shift'];\n        }\n      }\n\n      // For desktop devices, we must create all layers, even if invalid.\n      if(formFactor == 'desktop') {\n        invalidIdList = Layouts.generateLayerIds(chiral);\n\n        // Filter out all ids considered valid.  (We also don't want duplicates in the following list...)\n        for(n=0; n<invalidIdList.length; n++) {\n          if(validIdList.indexOf(invalidIdList[n]) != -1) {\n            invalidIdList.splice(n--, 1);\n          }\n        }\n      }\n\n      // This ensures all 'valid' layers are at the front of the layer array and managed by the main loop below.\n      // 'invalid' layers aren't handled by the loop and thus remain blank after it.\n      var idList = validIdList.concat(invalidIdList);\n\n      if(kmw10Plus && formFactor != 'desktop') { // KLS exists, so we know the exact layer set.\n        // Find the SHIFT key...\n        var shiftKey: LayoutKey = null;\n\n        rows = layers[0]['row'];\n        for(var r=0; r < rows.length; r++) {\n          keys = rows[r]['key'];\n          for(var c=0; c < keys.length; c++) {\n            key = keys[c];\n            if(key['id'] == 'K_SHIFT') {\n              shiftKey = key;\n            }\n          }\n        }\n\n        if(shiftKey) {\n          // Erase the legacy shifted subkey array.\n          shiftKey['sk'] = [];\n\n          for(var layerID in keyLabels) {            \n            if(layerID == 'default' || layerID == 'shift') {\n              // These two are accessible from the layer without subkeys.\n              continue;\n            }\n\n            // Create a new subkey for the specified layer so that it will be accessible via OSK.\n            var specialChar = Layouts.modifierSpecials[layerID]; \n            let subkey: LayoutKey = {\n              id: \"K_\" + specialChar,\n              text: specialChar,\n              sp: \"1\",\n              nextlayer: layerID\n            }\n            shiftKey['sk'].push(subkey);\n          }\n        } else {\n          // Seriously, this should never happen.  It's here for the debugging log only.\n          console.warn(\"Error in default layout - cannot find default Shift key!\");\n        }\n      }\n\n      for(n=0; n<idList.length; n++) {\n        // Populate non-default (shifted) keygroups\n        if(n > 0) {\n          layers[n]=utils.deepCopy(layers[0]);\n        }\n        layers[n]['id']=idList[n];\n        layers[n]['nextlayer']=idList[n]; // This would only be different for a dynamic keyboard\n\n        // Extraced into a helper method to improve readability.\n        Layouts.formatDefaultLayer(layers[n], chiral, formFactor, !!key102);\n      }\n\n      // *** Step 2: Layer objects now exist; time to fill them with the appropriate key labels and key styles ***\n      for(n=0; n<layers.length; n++) {\n        var layer=layers[n], kx, shiftKey: LayoutKey = null, nextKey=null, allText='';\n        var capsKey: LayoutKey = null, numKey: LayoutKey = null, scrollKey: LayoutKey = null;  // null if not in the OSK layout.\n        var layerSpec = keyLabels[layer['id']];\n        var isShift = layer['id'] == 'shift' ? 1 : 0;\n        var isDefault = layer['id'] == 'default' || isShift ? 1 : 0;\n\n        rows=layer['row'];\n        for(i=0; i<rows.length; i++) {\n          keys=rows[i]['key'];\n          for(j=0; j<keys.length; j++) {\n            key=keys[j];\n            kx=Layouts.dfltCodes.indexOf(key['id']);\n\n            // Only create keys for defined layers.  ('default' and 'shift' are always defined.)\n            if(layerSpec || isDefault) {\n              // Get keycap text from visual keyboard array, if defined in keyboard\n              if(layerSpec) {\n                if(kx >= 0 && kx < layerSpec.length) key['text']=layerSpec[kx];\n              }\n\n              // Legacy (pre 12.0) behavior:  fall back to US English keycap text as default for the base two layers\n              // if a key cap is not otherwise defined. (Any intentional 'ghost' keys must be explicitly defined.)\n              if(isDefault && kbdDevVersion.precedes(utils.Version.NO_DEFAULT_KEYCAPS)) {\n                if(key['id'] != 'K_SPACE' && kx+65 * isShift < Layouts.dfltText.length && key['text'] !== null) {\n                  key['text'] = key['text'] || Layouts.dfltText[kx+65*isShift];\n                }\n              }\n            }\n\n            // Leave any unmarked key caps as null strings\n            if(key['text'] !== null) {\n              key['text'] = key['text'] || '';\n            }\n\n            // Detect important tracking keys.\n            switch(key['id']) {\n              case \"K_SHIFT\":\n                shiftKey=key;\n                break;\n              case \"K_TAB\":\n                nextKey=key;\n                break;\n              case \"K_CAPS\":\n                capsKey=key;\n                break;\n              case \"K_NUMLOCK\":\n                numKey=key;\n                break;\n              case \"K_SCROLL\":\n                scrollKey=key;\n                break;\n            }\n\n            // Remove pop-up shift keys referencing invalid layers (Build 349)\n            if(key['sk'] != null) {\n              for(k=0; k<key['sk'].length; k++) {\n                if(validIdList.indexOf(key['sk'][k]['nextlayer']) == -1) {\n                  key['sk'].splice(k--, 1);\n                }\n              }\n\n              if(key['sk'].length == 0) {\n                key['sk']=null;\n              }\n            }\n          }\n        }\n\n        // We're done with the layer keys initialization pass.  Time to do post-analysis layer-level init where necessary.\n        layer.shiftKey=shiftKey;\n        layer.capsKey=capsKey;\n        layer.numKey=numKey;\n        layer.scrollKey=scrollKey;\n\n        // Set modifier key appearance and behaviour for non-desktop devices using the default layout\n        if(formFactor != 'desktop') {\n          if(n > 0 && shiftKey != null) {\n            shiftKey['sp']=Layouts.buttonClasses['SHIFT-ON'];\n            shiftKey['sk']=null;\n            shiftKey['text'] = Layouts.modifierSpecials[layers[n].id] ? Layouts.modifierSpecials[layers[n].id] : \"*Shift*\";\n          }\n        }\n      }\n\n      return layout;\n    }\n\n        /**\n     * Function     getLayerId\n     * Scope        Private\n     * @param       {number}      m     shift modifier code\n     * @return      {string}            layer string from shift modifier code (desktop keyboards)\n     * Description  Get name of layer from code, where the modifer order is determined by ascending bit-flag value.\n     */\n    static getLayerId(m: number): string {\n      let modifierCodes = Codes.modifierCodes;\n\n      var s='';\n      if(m == 0) {\n        return 'default';\n      } else {\n        if(m & modifierCodes['LCTRL']) {\n          s = (s.length > 0 ? s + '-' : '') + 'leftctrl';\n        }\n        if(m & modifierCodes['RCTRL']) {\n          s = (s.length > 0 ? s + '-' : '') + 'rightctrl';\n        }\n        if(m & modifierCodes['LALT']) {\n          s = (s.length > 0 ? s + '-' : '') + 'leftalt';\n        }\n        if(m & modifierCodes['RALT']) {\n          s = (s.length > 0 ? s + '-' : '') + 'rightalt';\n        }\n        if(m & modifierCodes['SHIFT']) {\n          s = (s.length > 0 ? s + '-' : '') + 'shift';\n        }\n        if(m & modifierCodes['CTRL']) {\n          s = (s.length > 0 ? s + '-' : '') + 'ctrl';\n        }\n        if(m & modifierCodes['ALT']) {\n          s = (s.length > 0 ? s + '-' : '') + 'alt';\n        }\n        return s;\n      }\n    }\n\n    /**\n     * Generates a list of potential layer ids for the specified chirality mode.\n     * \n     * @param   {boolean}   chiral    // Does the keyboard use chiral modifiers or not?\n     */\n    static generateLayerIds(chiral: boolean): string[] {\n      var layerCnt, offset;\n\n      if(chiral) {\n        layerCnt=32;\n        offset=0x01;\n      } else {\n        layerCnt=8;\n        offset=0x10;\n      }\n\n      var layerIds = [];\n\n      for(var i=0; i < layerCnt; i++) {\n        layerIds.push(Layouts.getLayerId(i * offset));\n      }\n\n      return layerIds;\n    }\n\n    /**\n     * Sets a formatting property for the modifier keys when constructing a default layout for a keyboard.\n     * \n     * @param   {Object}    layer   // One layer specification\n     * @param   {boolean}   chiral  // Whether or not the keyboard uses chiral modifier information.\n     * @param   {string}    formFactor  // The form factor of the device the layout is being constructed for.\n     * @param   {boolean}   key102      // Whether or not the extended key 102 should be hidden.\n     */\n    static formatDefaultLayer(layer: LayoutLayer, chiral: boolean, formFactor: string, key102: boolean) {\n      var layerId = layer['id'];\n      let buttonClasses = Layouts.buttonClasses;\n\n      // Correct appearance of state-dependent modifier keys according to group\n      for(var i=0; i<layer['row'].length; i++) {\n        var row=layer['row'][i];\n        var keys=row['key'];\n        for(var j=0; j<keys.length; j++) {\n          var key=keys[j];\n          switch(key['id']) {\n            case 'K_SHIFT':\n            case 'K_LSHIFT':\n            case 'K_RSHIFT':\n              if(layerId.indexOf('shift') != -1) {\n                key['sp'] = buttonClasses['SHIFT-ON'];\n              } \n              if((formFactor != 'desktop') && (layerId != 'default')) {\n                key['nextlayer']='default';\n              }\n              break;\n            case 'K_LCTRL':\n            case 'K_LCONTROL':\n              if(chiral) {\n                if(layerId.indexOf('leftctrl') != -1) {\n                  key['sp'] = buttonClasses['SHIFT-ON'];\n                }\n                break;\n              } \n            case 'K_RCTRL':\n            case 'K_RCONTROL':\n              if(chiral) {\n                if(layerId.indexOf('rightctrl') != -1) {\n                  key['sp'] = buttonClasses['SHIFT-ON'];\n                }\n                break;\n              }\n            case 'K_CONTROL':\n              if(layerId.indexOf('ctrl') != -1) {\n                if(!chiral || (layerId.indexOf('leftctrl') != -1 && layerId.indexOf('rightctrl') != -1)) {\n                  key['sp'] = buttonClasses['SHIFT-ON'];              \n                }\n              }\n              break;\n            case 'K_LALT':\n              if(chiral) {\n                if(layerId.indexOf('leftalt') != -1) {\n                  key['sp'] = buttonClasses['SHIFT-ON'];\n                }\n                break;\n              } \n            case 'K_RALT':\n              if(chiral) {\n                if(layerId.indexOf('rightalt') != -1) {\n                  key['sp'] = buttonClasses['SHIFT-ON'];\n                }\n                break;\n              } \n            case 'K_ALT':\n              if(layerId.indexOf('alt') != -1) {\n                if(!chiral || (layerId.indexOf('leftalt') != -1 && layerId.indexOf('rightalt') != -1)) {\n                  key['sp'] = buttonClasses['SHIFT-ON'];              \n                }\n              }\n              break;\n            case 'K_oE2':\n              if(typeof key102 == 'undefined' || !key102) {\n                if(formFactor == 'desktop') {\n                  keys.splice(j--, 1);\n                  keys[0]['width']='200';\n                } else {\n                  keys[j]['sp']=buttonClasses['HIDDEN'];\n                }\n              }\n              break;\n          }\n        }\n      }\n    }\n\n    /**\n     * Converts the legacy BK property from pre 10.0 into the KLS keyboard layer spec format,\n     * sparsifying it as possible to pre-emptively check invalid layers.\n     * \n     * @param   {Array}   BK      keyboard object (as loaded)\n     * @return  {Object}\n     */\n    static processLegacyDefinitions(BK: string[]): KLS {\n      //['default','shift','ctrl','shiftctrl','alt','shiftalt','ctrlalt','shiftctrlalt'];\n      var idList=Layouts.generateLayerIds(false); // Non-chiral.\n\n      var KLS: KLS = {};\n\n      // The old default:  eight auto-managed layers...\n      for(var n=0; n<idList.length; n++) {\n        var id = idList[n], arr = [], valid = false;\n\n        // ... with keycode mappings in blocks of 65.\n        for(var k=0; k < 65; k++) {\n          var index = k + 65 * n;\n          arr.push(BK[index]);\n\n          // The entry for K_SPACE's keycode tends to hold ' ' instead of '', which causes\n          // the whole layer to be treated as 'valid' if not included in the conditional.\n          if(index < BK.length && BK[index] != '' && k != Layouts.dfltCodes.indexOf('K_SPACE')) {\n            valid = true;\n          }\n        }\n\n        if(valid) {\n          KLS[id] = arr;\n        }\n      }\n\n      // There must always be at least a plain 'default' layer.  Array(65).fill('') would be preferable but isn't supported on IE, \n      // but buildDefaultLayer will set the defaults for these layers if no entry exists for them in the array due to length.\n      if(typeof KLS['default'] == 'undefined' || ! KLS['default']) {\n        KLS['default'] = [''];\n      }\n\n      // There must always be at least a plain 'shift' layer.\n      if(typeof KLS['shift'] == 'undefined' || ! KLS['shift']) {\n        KLS['shift'] = [''];\n      }\n\n      return KLS;\n    }\n\n    // Defines the default visual layout for a keyboard.\n    static dfltLayout: LayoutSpec = {\n        \"desktop\":\n        {\n            \"font\": \"Tahoma,Helvetica\",\n            \"layer\": [\n                {\n                    \"id\": \"default\",\n                    \"row\": [\n                        {\n                            \"id\": \"1\",\n                            \"key\": [\n                                { \"id\": \"K_BKQUOTE\" },\n                                { \"id\": \"K_1\" },\n                                { \"id\": \"K_2\" },\n                                { \"id\": \"K_3\" },\n                                { \"id\": \"K_4\" },\n                                { \"id\": \"K_5\" },\n                                { \"id\": \"K_6\" },\n                                { \"id\": \"K_7\" },\n                                { \"id\": \"K_8\" },\n                                { \"id\": \"K_9\" },\n                                { \"id\": \"K_0\" },\n                                { \"id\": \"K_HYPHEN\" },\n                                { \"id\": \"K_EQUAL\" },\n                                { \"id\": \"K_BKSP\", \"text\": \"*BkSp*\", \"sp\": \"1\", \"width\": \"130\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"2\",\n                            \"key\": [\n                                { \"id\": \"K_TAB\", \"text\": \"*Tab*\", \"sp\": \"1\", \"width\": \"130\" },\n                                { \"id\": \"K_Q\" },\n                                { \"id\": \"K_W\" },\n                                { \"id\": \"K_E\" },\n                                { \"id\": \"K_R\" },\n                                { \"id\": \"K_T\" },\n                                { \"id\": \"K_Y\" },\n                                { \"id\": \"K_U\" },\n                                { \"id\": \"K_I\" },\n                                { \"id\": \"K_O\" },\n                                { \"id\": \"K_P\" },\n                                { \"id\": \"K_LBRKT\" },\n                                { \"id\": \"K_RBRKT\" },\n                                { \"id\": \"K_BKSLASH\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"3\",\n                            \"key\": [\n                                { \"id\": \"K_CAPS\", \"text\": \"*Caps*\", \"sp\": \"1\", \"width\": \"165\" },\n                                { \"id\": \"K_A\" },\n                                { \"id\": \"K_S\" },\n                                { \"id\": \"K_D\" },\n                                { \"id\": \"K_F\" },\n                                { \"id\": \"K_G\" },\n                                { \"id\": \"K_H\" },\n                                { \"id\": \"K_J\" },\n                                { \"id\": \"K_K\" },\n                                { \"id\": \"K_L\" },\n                                { \"id\": \"K_COLON\" },\n                                { \"id\": \"K_QUOTE\" },\n                                { \"id\": \"K_ENTER\", \"text\": \"*Enter*\", \"sp\": \"1\", \"width\": \"165\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"4\",\n                            \"key\": [\n                                { \"id\": \"K_SHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"130\" },\n                                { \"id\": \"K_oE2\" },\n                                { \"id\": \"K_Z\" },\n                                { \"id\": \"K_X\" },\n                                { \"id\": \"K_C\" },\n                                { \"id\": \"K_V\" },\n                                { \"id\": \"K_B\" },\n                                { \"id\": \"K_N\" },\n                                { \"id\": \"K_M\" },\n                                { \"id\": \"K_COMMA\" },\n                                { \"id\": \"K_PERIOD\" },\n                                { \"id\": \"K_SLASH\" },\n                                { \"id\": \"K_RSHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"130\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"5\",\n                            \"key\": [\n                                { \"id\": \"K_LCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"170\" },\n                                { \"id\": \"K_LALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"160\" },\n                                { \"id\": \"K_SPACE\", \"text\": \"\", \"width\": \"770\" },\n                                { \"id\": \"K_RALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"160\" },\n                                { \"id\": \"K_RCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"170\" }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"tablet\":\n        {\n            \"font\": \"Tahoma,Helvetica\",\n            \"layer\": [\n                {\n                    \"id\": \"default\",\n                    \"row\": [\n                        {\n                            \"id\": \"0\",\n                            \"key\": [\n                                { \"id\": \"K_1\" },\n                                { \"id\": \"K_2\" },\n                                { \"id\": \"K_3\" },\n                                { \"id\": \"K_4\" },\n                                { \"id\": \"K_5\" },\n                                { \"id\": \"K_6\" },\n                                { \"id\": \"K_7\" },\n                                { \"id\": \"K_8\" },\n                                { \"id\": \"K_9\" },\n                                { \"id\": \"K_0\" },\n                                { \"id\": \"K_HYPHEN\" },\n                                { \"id\": \"K_EQUAL\" },\n                                { \"sp\": \"10\", \"width\": \"1\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"1\",\n                            \"key\": [\n                                { \"id\": \"K_Q\", \"pad\": \"25\" },\n                                { \"id\": \"K_W\" },\n                                { \"id\": \"K_E\" },\n                                { \"id\": \"K_R\" },\n                                { \"id\": \"K_T\" },\n                                { \"id\": \"K_Y\" },\n                                { \"id\": \"K_U\" },\n                                { \"id\": \"K_I\" },\n                                { \"id\": \"K_O\" },\n                                { \"id\": \"K_P\" },\n                                { \"id\": \"K_LBRKT\" },\n                                { \"id\": \"K_RBRKT\" },\n                                { \"sp\": \"10\", \"width\": \"1\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"2\",\n                            \"key\": [\n                                { \"id\": \"K_A\", \"pad\": \"50\" },\n                                { \"id\": \"K_S\" },\n                                { \"id\": \"K_D\" },\n                                { \"id\": \"K_F\" },\n                                { \"id\": \"K_G\" },\n                                { \"id\": \"K_H\" },\n                                { \"id\": \"K_J\" },\n                                { \"id\": \"K_K\" },\n                                { \"id\": \"K_L\" },\n                                { \"id\": \"K_COLON\" },\n                                { \"id\": \"K_QUOTE\" },\n                                { \"id\": \"K_BKSLASH\", \"width\": \"90\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"3\",\n                            \"key\": [\n                                { \"id\": \"K_oE2\", \"width\": \"90\" },\n                                { \"id\": \"K_Z\" },\n                                { \"id\": \"K_X\" },\n                                { \"id\": \"K_C\" },\n                                { \"id\": \"K_V\" },\n                                { \"id\": \"K_B\" },\n                                { \"id\": \"K_N\" },\n                                { \"id\": \"K_M\" },\n                                { \"id\": \"K_COMMA\" },\n                                { \"id\": \"K_PERIOD\" },\n                                { \"id\": \"K_SLASH\" },\n                                { \"id\": \"K_BKQUOTE\" },\n                                { \"sp\": \"10\", \"width\": \"1\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"4\",\n                            \"key\": [\n                                {\n                                    \"id\": \"K_SHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"200\", \"sk\": [\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl\" },\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*LCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftctrl\" },\n                                        { \"id\": \"K_RCONTROL\", \"text\": \"*RCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightctrl\" },\n                                        { \"id\": \"K_LALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"alt\" },\n                                        { \"id\": \"K_LALT\", \"text\": \"*LAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftalt\" },\n                                        { \"id\": \"K_RALT\", \"text\": \"*RAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightalt\" },\n                                        { \"id\": \"K_ALTGR\", \"text\": \"*AltGr*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl-alt\" }]\n                                },\n                                { \"id\": \"K_LOPT\", \"text\": \"*Menu*\", \"sp\": \"1\", \"width\": \"150\" },\n                                { \"id\": \"K_SPACE\", \"text\": \"\", \"width\": \"570\" },\n                                { \"id\": \"K_BKSP\", \"text\": \"*BkSp*\", \"sp\": \"1\", \"width\": \"150\" },\n                                { \"id\": \"K_ENTER\", \"text\": \"*Enter*\", \"sp\": \"1\", \"width\": \"200\" }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        },\n        \"phone\":\n        {\n            \"font\": \"Tahoma,Helvetica\",\n            \"layer\": [\n                {\n                    \"id\": \"default\",\n                    \"row\": [\n                        {\n                            \"id\": \"0\",\n                            \"key\": [\n                                { \"id\": \"K_1\" },\n                                { \"id\": \"K_2\" },\n                                { \"id\": \"K_3\" },\n                                { \"id\": \"K_4\" },\n                                { \"id\": \"K_5\" },\n                                { \"id\": \"K_6\" },\n                                { \"id\": \"K_7\" },\n                                { \"id\": \"K_8\" },\n                                { \"id\": \"K_9\" },\n                                { \"id\": \"K_0\" },\n                                { \"id\": \"K_HYPHEN\" },\n                                { \"id\": \"K_EQUAL\" },\n                                { \"sp\": \"10\", \"width\": \"1\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"1\",\n                            \"key\": [\n                                { \"id\": \"K_Q\", \"pad\": \"25\" },\n                                { \"id\": \"K_W\" },\n                                { \"id\": \"K_E\" },\n                                { \"id\": \"K_R\" },\n                                { \"id\": \"K_T\" },\n                                { \"id\": \"K_Y\" },\n                                { \"id\": \"K_U\" },\n                                { \"id\": \"K_I\" },\n                                { \"id\": \"K_O\" },\n                                { \"id\": \"K_P\" },\n                                { \"id\": \"K_LBRKT\" },\n                                { \"id\": \"K_RBRKT\" },\n                                { \"sp\": \"10\", \"width\": \"1\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"2\",\n                            \"key\": [\n                                { \"id\": \"K_A\", \"pad\": \"50\" },\n                                { \"id\": \"K_S\" },\n                                { \"id\": \"K_D\" },\n                                { \"id\": \"K_F\" },\n                                { \"id\": \"K_G\" },\n                                { \"id\": \"K_H\" },\n                                { \"id\": \"K_J\" },\n                                { \"id\": \"K_K\" },\n                                { \"id\": \"K_L\" },\n                                { \"id\": \"K_COLON\" },\n                                { \"id\": \"K_QUOTE\" },\n                                { \"id\": \"K_BKSLASH\", \"width\": \"90\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"3\",\n                            \"key\": [\n                                { \"id\": \"K_oE2\", \"width\": \"90\" },\n                                { \"id\": \"K_Z\" },\n                                { \"id\": \"K_X\" },\n                                { \"id\": \"K_C\" },\n                                { \"id\": \"K_V\" },\n                                { \"id\": \"K_B\" },\n                                { \"id\": \"K_N\" },\n                                { \"id\": \"K_M\" },\n                                { \"id\": \"K_COMMA\" },\n                                { \"id\": \"K_PERIOD\" },\n                                { \"id\": \"K_SLASH\" },\n                                { \"id\": \"K_BKQUOTE\" },\n                                { \"sp\": \"10\", \"width\": \"1\" }\n                            ]\n                        },\n                        {\n                            \"id\": \"4\",\n                            \"key\": [\n                                {\n                                    \"id\": \"K_SHIFT\", \"text\": \"*Shift*\", \"sp\": \"1\", \"width\": \"200\", \"sk\": [\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*Ctrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl\" },\n                                        { \"id\": \"K_LCONTROL\", \"text\": \"*LCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftctrl\" },\n                                        { \"id\": \"K_RCONTROL\", \"text\": \"*RCtrl*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightctrl\" },\n                                        { \"id\": \"K_LALT\", \"text\": \"*Alt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"alt\" },\n                                        { \"id\": \"K_LALT\", \"text\": \"*LAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"leftalt\" },\n                                        { \"id\": \"K_RALT\", \"text\": \"*RAlt*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"rightalt\" },\n                                        { \"id\": \"K_ALTGR\", \"text\": \"*AltGr*\", \"sp\": \"1\", \"width\": \"50\", \"nextlayer\": \"ctrl-alt\" }]\n                                },\n                                { \"id\": \"K_LOPT\", \"text\": \"*Menu*\", \"width\": \"150\", \"sp\": \"1\" },\n                                { \"id\": \"K_SPACE\", \"width\": \"570\", \"text\": \"\" },\n                                { \"id\": \"K_BKSP\", \"text\": \"*BkSp*\", \"width\": \"150\", \"sp\": \"1\" },\n                                { \"id\": \"K_ENTER\", \"text\": \"*Enter*\", \"width\": \"200\", \"sp\": \"1\" }\n                            ]\n                        }\n                    ]\n                }\n            ]\n        }\n    };\n  }\n}","namespace com.keyman.keyboards {\n  type KeyDistribution = text.KeyDistribution;\n\n\n  export class ActiveKey implements LayoutKey {\n\n    static readonly DEFAULT_PAD=15;          // Padding to left of key, in virtual units\n    static readonly DEFAULT_RIGHT_MARGIN=15; // Padding to right of right-most key, in virtual units\n    static readonly DEFAULT_KEY_WIDTH=100;   // Width of a key, if not specified, in virtual units\n\n    // Defines key defaults\n    static readonly DEFAULT_KEY = {\n      text: '',\n      width: ActiveKey.DEFAULT_KEY_WIDTH.toString(),\n      sp: '0',\n      pad: ActiveKey.DEFAULT_PAD.toString()\n    };\n\n    id?: string;\n    width?: string;\n    pad?: string;\n    layer: string;\n    displayLayer: string;\n    nextlayer: string;\n\n    private baseKeyEvent: text.KeyEvent;\n    isMnemonic: boolean = false;\n\n    proportionalX: number;\n    proportionalWidth: number;\n\n    static polyfill(key: LayoutKey, layout: ActiveLayout, displayLayer: string) {\n      // Add class functions to the existing layout object, allowing it to act as an ActiveLayout.\n      let dummy = new ActiveKey();\n      for(let prop in dummy) {\n        if(!key.hasOwnProperty(prop)) {\n          key[prop] = dummy[prop];\n        }\n      }\n\n      // Ensure subkeys are also properly extended.\n      if(key.sk) {\n        for(let subkey of key.sk) {\n          ActiveKey.polyfill(subkey, layout, displayLayer);\n        }\n      }\n\n      let aKey = key as ActiveKey;\n      aKey.displayLayer = displayLayer;\n      aKey.layer = aKey.layer || displayLayer;\n\n      // Compute the key's base KeyEvent properties for use in future event generation\n      aKey.constructBaseKeyEvent(layout, displayLayer);\n    }\n\n    private constructBaseKeyEvent(layout: ActiveLayout, displayLayer: string) {\n      // Get key name and keyboard shift state (needed only for default layouts and physical keyboard handling)\n      // Note - virtual keys should be treated case-insensitive, so we force uppercasing here.\n      let layer = this.layer || displayLayer || '';\n      let keyName= this.id ? this.id.toUpperCase() : null;\n\n      // Start:  mirrors _GetKeyEventProperties\n\n      // Override key shift state if specified for key in layout (corrected for popup keys KMEW-93)\n      let keyShiftState = text.KeyboardProcessor.getModifierState(layer);\n\n      // First check the virtual key, and process shift, control, alt or function keys\n      var Lkc: text.KeyEvent = {\n        Ltarg: null, // set later, in constructKeyEvent.\n        Lmodifiers: keyShiftState,\n        Lstates: 0,\n        Lcode: keyName ? text.Codes.keyCodes[keyName] : 0,\n        LisVirtualKey: true,\n        vkCode: 0,\n        kName: keyName,\n        kLayer: layer,\n        kbdLayer: displayLayer,\n        kNextLayer: this.nextlayer,\n        device: null,\n        isSynthetic: true\n      };\n\n      if(layout.keyboard) {\n        let keyboard = layout.keyboard;\n\n        // Include *limited* support for mnemonic keyboards (Sept 2012)\n        // If a touch layout has been defined for a mnemonic keyout, do not perform mnemonic mapping for rules on touch devices.\n        if(keyboard.isMnemonic && !(layout.isDefault && layout.formFactor != 'desktop')) {\n          if(Lkc.Lcode != text.Codes.keyCodes['K_SPACE']) { // exception required, March 2013\n            // Jan 2019 - interesting that 'K_SPACE' also affects the caps-state check...\n            Lkc.vkCode = Lkc.Lcode;\n            this.isMnemonic = true;\n          }\n        } else {\n          Lkc.vkCode=Lkc.Lcode;\n        }\n\n        // Support version 1.0 KeymanWeb keyboards that do not define positional vs mnemonic\n        if(!keyboard.definesPositionalOrMnemonic) {\n          // Not the best pattern, but currently safe - we don't look up any properties of any of the\n          // arguments in this use case, and the object's scope is extremely limited.\n          Lkc.Lcode = KeyMapping._USKeyCodeToCharCode(this.constructKeyEvent(null, null, null));\n          Lkc.LisVirtualKey=false;\n        }\n      }\n\n      this.baseKeyEvent = Lkc;\n    }\n\n    constructKeyEvent(keyboardProcessor: text.KeyboardProcessor, target: text.OutputTarget, device: text.EngineDeviceSpec): text.KeyEvent {\n      // Make a deep copy of our preconstructed key event, filling it out from there.\n      let Lkc = utils.deepCopy(this.baseKeyEvent);\n      Lkc.Ltarg = target;\n      Lkc.device = device;\n\n      if(this.isMnemonic) {\n        text.KeyboardProcessor.setMnemonicCode(Lkc, this.layer.indexOf('shift') != -1, keyboardProcessor ? keyboardProcessor.stateKeys['K_CAPS'] : false);\n      }\n\n      // Performs common pre-analysis for both 'native' and 'embedded' OSK key & subkey input events.\n      // This part depends on the keyboard processor's active state.\n      if(keyboardProcessor) {\n        keyboardProcessor.setSyntheticEventDefaults(Lkc);\n      }\n\n      return Lkc;\n    }\n  }\n\n  class ActiveRow implements LayoutRow {\n    // Identify key labels (e.g. *Shift*) that require the special OSK font\n    static readonly SPECIAL_LABEL=/\\*\\w+\\*/;\n\n    id: string;\n    key: ActiveKey[];\n\n    /**\n     * Used for calculating fat-fingering offsets.\n     */\n    proportionalY: number;\n\n    private constructor() {\n\n    }\n\n    static polyfill(row: LayoutRow, layout: ActiveLayout, displayLayer: string, totalWidth: number, proportionalY: number) {\n      // Apply defaults, setting the width and other undefined properties for each key\n      let keys=row['key'];\n      for(let j=0; j<keys.length; j++) {\n        let key=keys[j];\n        for(var tp in ActiveKey.DEFAULT_KEY) {\n          if(typeof key[tp] != 'string') {\n            key[tp]=ActiveKey.DEFAULT_KEY[tp];\n          }\n        }\n\n        // Modify the key type for special keys with non-standard labels\n        // to allow the keyboard font to ovveride the SpecialOSK font.\n        // Blank keys are no longer reclassed - can use before/after CSS to add text\n        switch(key['sp']) {\n          case '1':\n            if(!ActiveRow.SPECIAL_LABEL.test(key['text']) && key['text'] != '') {\n              key['sp']='3';\n            }\n            break;\n          case '2':\n            if(!ActiveRow.SPECIAL_LABEL.test(key['text']) && key['text'] != '') {\n              key['sp']='4';\n            }\n            break;\n        }\n\n        ActiveKey.polyfill(key, layout, displayLayer);\n      }\n\n      /* The calculations here are effectively 'virtualized'.  When used with the OSK, the VisualKeyboard\n       * will overwrite these values with their true runtime geometry.\n       *\n       * These calculations approximate those of the actual OSK (without fitting to a specific resolution)\n       * and are intended for use with layout testing (while headless) in the future.\n       */\n\n      // Calculate percentage-based scalings by summing defined widths and scaling each key to %.\n      // Save each percentage key width as a separate member (do *not* overwrite layout specified width!)\n      var keyPercent: number, padPercent: number, totalPercent=0;\n      for(let j=0; j<keys.length-1; j++) {\n        keyPercent=parseInt(keys[j]['width'],10)/totalWidth;\n        keys[j]['widthpc']=keyPercent;\n        padPercent=parseInt(keys[j]['pad'],10)/totalWidth;\n        keys[j]['padpc']=padPercent;\n\n        // compute center's default x-coord (used in headless modes)\n        (<ActiveKey> keys[j]).proportionalX = (totalPercent + padPercent + (keyPercent/2));\n        (<ActiveKey> keys[j]).proportionalWidth = keyPercent;\n\n        totalPercent += padPercent+keyPercent;\n      }\n\n      // Allow for right OSK margin (15 layout units)\n      let rightMargin = ActiveKey.DEFAULT_RIGHT_MARGIN/totalWidth;\n      totalPercent += rightMargin;\n\n      // If a single key, and padding is negative, add padding to right align the key\n      if(keys.length == 1 && parseInt(keys[0]['pad'],10) < 0) {\n        keyPercent=parseInt(keys[0]['width'],10)/totalWidth;\n        keys[0]['widthpc']=keyPercent;\n        totalPercent += keyPercent;\n        keys[0]['padpc']=1-totalPercent;\n\n        // compute center's default x-coord (used in headless modes)\n        (<ActiveKey> keys[0]).proportionalX = ((totalPercent - rightMargin) -  keyPercent/2);\n        (<ActiveKey> keys[0]).proportionalWidth = keyPercent;\n\n      } else if(keys.length > 0) {\n        let j=keys.length-1;\n        padPercent=parseInt(keys[j]['pad'],10)/totalWidth;\n        keys[j]['padpc']=padPercent;\n        totalPercent += padPercent;\n        keys[j]['widthpc'] = keyPercent = 1-totalPercent;\n\n        // compute center's default x-coord (used in headless modes)\n        (<ActiveKey> keys[j]).proportionalX = (1 - rightMargin) - keyPercent/2;\n        (<ActiveKey> keys[j]).proportionalWidth = keyPercent;\n      }\n\n      // Add class functions to the existing layout object, allowing it to act as an ActiveLayout.\n      let dummy = new ActiveRow();\n      for(let key in dummy) {\n        if(!row.hasOwnProperty(key)) {\n          row[key] = dummy[key];\n        }\n      }\n\n      let aRow = row as ActiveRow;\n      aRow.proportionalY = proportionalY;\n    }\n\n    populateKeyMap(map: {[keyId: string]: ActiveKey}) {\n      this.key.forEach(function(key: ActiveKey) {\n        if(key.id) {\n          map[key.id] = key;\n        }\n      });\n    }\n  }\n\n  export class ActiveLayer implements LayoutLayer {\n    row: ActiveRow[];\n    id: string;\n\n    totalWidth: number;\n\n    defaultKeyProportionalWidth: number;\n    rowProportionalHeight: number;\n\n    /**\n     * Facilitates mapping key id strings to their specification objects.\n     */\n    keyMap: {[keyId: string]: ActiveKey};\n\n    constructor() {\n\n    }\n\n    static polyfill(layer: LayoutLayer, layout: ActiveLayout) {\n      layer.aligned=false;\n\n      // Create a DIV for each row of the group\n      let rows=layer['row'];\n\n      // Calculate the maximum row width (in layout units)\n      var totalWidth=0;\n      for(let i=0; i<layer['row'].length; i++) {\n        var width=0;\n        let row=rows[i];\n        let keys=row['key'];\n        for(let j=0; j<keys.length; j++) {\n          let key=keys[j];\n\n          // Test for a trailing comma included in spec, added as null object by IE\n          if(key == null) {\n            keys.length = keys.length-1;\n          } else {\n            var kw, kp;\n            kw = (typeof key['width'] == 'string' && key['width'] != '') ? parseInt(key['width'],10) : ActiveKey.DEFAULT_KEY_WIDTH;\n            if(isNaN(kw) || kw == 0) kw = ActiveKey.DEFAULT_KEY_WIDTH;\n            key['width'] = kw.toString();\n            kp = (typeof key['pad'] == 'string' && key['pad'] != '') ? parseInt(key['pad'],10) : ActiveKey.DEFAULT_PAD;\n            if(isNaN(kp) || kp == 0) kp = ActiveKey.DEFAULT_PAD;  // KMEW-119\n            key['pad'] = kp.toString();\n            width += kw + kp;\n            //if(typeof key['width'] == 'string' && key['width'] != '') width += parseInt(key['width'],10); else width += DEFAULT_KEY_WIDTH;\n            //if(typeof key['pad'] == 'string' && key['pad'] != '') width += parseInt(key['pad'],10); else width += 5;\n          }\n        }\n        if(width > totalWidth) {\n          totalWidth = width;\n        }\n      }\n\n      // Add default right margin\n      if(layout.formFactor == 'desktop') {\n        totalWidth += 5; // TODO: resolve difference between touch and desktop; why don't we use ActiveKey.DEFAULT_RIGHT_MARGIN?\n      } else {\n        totalWidth += ActiveKey.DEFAULT_RIGHT_MARGIN;\n      }\n\n      let rowCount = layer.row.length;\n      for(let i=0; i<rowCount; i++) {\n        // Calculate proportional y-coord of row.  0 is at top with highest y-coord.\n        let rowProportionalY = (i + 0.5) / rowCount;\n        ActiveRow.polyfill(layer.row[i], layout, layer.id, totalWidth, rowProportionalY);\n      }\n\n      // Add class functions and properties to the existing layout object, allowing it to act as an ActiveLayout.\n      let dummy = new ActiveLayer();\n      for(let key in dummy) {\n        if(!layer.hasOwnProperty(key)) {\n          layer[key] = dummy[key];\n        }\n      }\n\n      let aLayer = layer as ActiveLayer;\n      aLayer.totalWidth = totalWidth;\n      aLayer.defaultKeyProportionalWidth = parseInt(ActiveKey.DEFAULT_KEY.width, 10) / totalWidth;\n      aLayer.rowProportionalHeight = 1.0 / rowCount;\n      aLayer.keyMap = aLayer.constructKeyMap();\n    }\n\n    private constructKeyMap(): {[keyId: string]: ActiveKey} {\n      let map: {[keyId: string]: ActiveKey} = {};\n      this.row.forEach(function(row: ActiveRow) {\n        row.populateKeyMap(map);\n      });\n\n      return map;\n    }\n\n    /**\n     * Builds a sorted-order array of most likely keys to be intended for a given touch.\n     * @param touchCoords A proportional (x, y) coordinate of the touch within the keyboard's geometry.\n     *                           Should be within [0, 0] to [1, 1].\n     * @param kbdScaleRatio The ratio of the keyboard's horizontal scale to its vertical scale.\n     *                           For a 400 x 200 keyboard, should be 2.\n     */\n    getTouchProbabilities(touchCoords: {x: number, y: number}, kbdScaleRatio: number): KeyDistribution {\n      let distribution = this.simpleTouchDistribution(touchCoords, kbdScaleRatio);\n      let list: {keyId: string, p: number}[] = [];\n\n      for(let key in distribution) {\n        list.push({keyId: key, p: distribution[key]});\n      }\n\n      return list.sort(function(a, b) {\n        return b.p - a.p; // Largest probability keys should be listed first.\n      })\n    }\n\n    /**\n     * Computes a probability distribution regarding the likelihood of a touch command being intended\n     * for each of the layout's keys.\n     * @param touchCoords A proportional (x, y) coordinate of the touch within the keyboard's geometry.\n     *                           Should be within [0, 0] to [1, 1].\n     * @param kbdScaleRatio The ratio of the keyboard's horizontal scale to its vertical scale.\n     *                           For a 400 x 200 keyboard, should be 2.\n     */\n    simpleTouchDistribution(touchCoords: {x: number, y: number}, kbdScaleRatio: number): {[keyId: string]: number} {\n      let keyDists = this.keyTouchDistances(touchCoords, kbdScaleRatio);\n      let keyProbs: {[keyId: string]: number} = {};\n\n      let totalMass = 0;\n\n      // Should we wish to allow multiple different transforms for distance -> probability, use a function parameter in place\n      // of the formula in the loop below.\n      for(let key in keyDists) {\n        totalMass += keyProbs[key] = 1 / (keyDists[key] + 1e-6); // Prevent div-by-0 errors.\n      }\n\n      for(let key in keyProbs) {\n        keyProbs[key] /= totalMass;\n      }\n\n      return keyProbs;\n    }\n\n    /**\n     * Computes a squared 'pseudo-distance' for the touch from each key.  (Not a proper metric.)\n     * Intended for use in generating a probability distribution over the keys based on the touch input.\n     * @param touchCoords A proportional (x, y) coordinate of the touch within the keyboard's geometry.\n     *                           Should be within [0, 0] to [1, 1].\n     * @param kbdScaleRatio The ratio of the keyboard's horizontal scale to its vertical scale.\n     *                           For a 400 x 200 keyboard, should be 2.\n     */\n    private keyTouchDistances(touchCoords: {x: number, y: number}, kbdScaleRatio: number): {[keyId: string]: number} {\n      let layer = this;\n\n      let keyDists: {[keyId: string]: number} = {};\n\n      // This double-nested loop computes a pseudo-distance for the touch from each key.  Quite useful for\n      // generating a probability distribution.\n      this.row.forEach(function(row: ActiveRow): void {\n        row.key.forEach(function(key: ActiveKey): void {\n          // If the key lacks an ID, just skip it.  Sometimes used for padding.\n          if(!key.id) {\n            return;\n          }\n          // These represent the within-key distance of the touch from the key's center.\n          // Both should be on the interval [0, 0.5].\n          let dx = Math.abs(touchCoords.x - key.proportionalX);\n          let dy = Math.abs(touchCoords.y - row.proportionalY);\n\n          // If the touch isn't within the key, these store the out-of-key distance\n          // from the closest point on the key being checked.\n          let distX: number, distY: number;\n\n          if(dx > 0.5 * key.proportionalWidth) {\n            distX = (dx - 0.5 * key.proportionalWidth);\n            dx = 0.5;\n          } else {\n            distX = 0;\n            dx /= key.proportionalWidth;\n          }\n\n          if(dy > 0.5 * layer.rowProportionalHeight) {\n            distY = (dy - 0.5 * layer.rowProportionalHeight);\n            dy = 0.5;\n          } else {\n            distY = 0;\n            dy /= layer.rowProportionalHeight;\n          }\n\n          // Now that the differentials are computed, it's time to do distance scaling.\n          //\n          // For out-of-key distance, we scale the X component by the keyboard's aspect ratio\n          // to get the actual out-of-key distance rather than proportional.\n          distX *= kbdScaleRatio;\n\n          // While the keys are rarely perfect squares, we map all within-key distance\n          // to a square shape.  (ALT/CMD should seem as close to SPACE as a 'B'.)\n          //\n          // For that square, we take the rowHeight as its edge lengths.\n          distX += dx * layer.rowProportionalHeight;\n          distY += dy * layer.rowProportionalHeight;\n\n          let distance = distX * distX + distY * distY;\n          keyDists[key.id] = distance;\n        });\n      });\n\n      return keyDists;\n    }\n\n    getKey(keyId: string) {\n      // Keys usually are specified in a \"long form\" prefixed with their layer's ID.\n      if(keyId.indexOf(this.id + '-') == 0) {\n        keyId = keyId.replace(this.id + '-', '');\n      }\n\n      return this.keyMap[keyId];\n    }\n  }\n\n  export class ActiveLayout implements LayoutFormFactor{\n    layer: ActiveLayer[];\n    font: string;\n    keyLabels: boolean;\n    isDefault?: boolean;\n    keyboard: Keyboard;\n    formFactor: text.FormFactor;\n\n    /**\n     * Facilitates mapping layer id strings to their specification objects.\n     */\n    layerMap: {[layerId: string]: ActiveLayer};\n\n    private constructor() {\n\n    }\n\n    getLayer(layerId: string): ActiveLayer {\n      return this.layerMap[layerId];\n    }\n\n    /**\n     *\n     * @param layout\n     * @param formFactor\n     */\n    static polyfill(layout: LayoutFormFactor, keyboard: Keyboard, formFactor: text.FormFactor): ActiveLayout {\n      if(layout == null) {\n        throw new Error(\"Cannot build an ActiveLayout for a null specification.\");\n      }\n\n      // Create a separate OSK div for each OSK layer, only one of which will ever be visible\n      var n: number, i: number;\n      var layers: LayoutLayer[], layer: LayoutLayer;\n      let layerMap: {[layerId: string]: ActiveLayer} = {};\n      var rows: LayoutRow[];\n\n      layers=layout['layer'];\n\n      // ***Delete any empty rows at the end added by compiler bug...\n      for(n=0; n<layers.length; n++) {\n        layer=layers[n]; rows=layer['row'];\n        for(i=rows.length; i>0; i--) {\n          if(rows[i-1]['key'].length > 0) {\n            break;\n          }\n        }\n\n        if(i < rows.length) {\n          rows.splice(i-rows.length,rows.length-i);\n        }\n      }\n      // ...remove to here when compiler bug fixed ***\n\n      // Add class functions to the existing layout object, allowing it to act as an ActiveLayout.\n      let dummy = new ActiveLayout();\n      for(let key in dummy) {\n        if(!layout.hasOwnProperty(key)) {\n          layout[key] = dummy[key];\n        }\n      }\n\n      let aLayout = layout as ActiveLayout;\n      aLayout.keyboard = keyboard;\n      aLayout.formFactor = formFactor;\n\n      for(n=0; n<layers.length; n++) {\n        ActiveLayer.polyfill(layers[n], aLayout);\n        layerMap[layers[n].id] = layers[n] as ActiveLayer;\n      }\n\n      aLayout.layerMap = layerMap;\n\n      return aLayout;\n    }\n  }\n}","/// <reference path=\"engineDeviceSpec.ts\" />\n\nnamespace com.keyman.text {\n  /**\n   * Defines common behaviors associated with system stores.\n   */\n  export abstract class SystemStore {\n    public readonly id: number;\n\n    constructor(id: number) {\n      this.id = id;\n    }\n\n    abstract matches(value: string): boolean;\n\n    set(value: string): void {\n      throw new Error(\"System store with ID \" + this.id + \" may not be directly set.\");\n    }\n  }\n\n  /**\n   * A handler designed to receive feedback whenever a system store's value is changed.\n   * @param source    The system store being mutated, before the value change occurs.\n   * @param newValue  The new value being set\n   * @returns         `false` / `undefined` to allow the change, `true` to block the change.\n   */\n  export type SystemStoreMutationHandler = (source: MutableSystemStore, newValue: string) => boolean;\n\n  export class MutableSystemStore extends SystemStore {\n    private _value: string;\n    handler?: SystemStoreMutationHandler = null;\n\n    constructor(id: number, defaultValue: string) {\n      super(id);\n      this._value = defaultValue;\n    }\n\n    get value() {\n      return this._value;\n    }\n\n    matches(value: string) {\n      return this._value == value;\n    }\n\n    set(value: string) {\n      if(this.handler) {\n        if(this.handler(this, value)) {\n          return;\n        }\n      }\n\n      this._value = value;\n    }\n  }\n\n  /**\n   * Handles checks against the current platform.\n   */\n  export class PlatformSystemStore extends SystemStore {\n    private readonly kbdInterface: KeyboardInterface;\n\n    constructor(keyboardInterface: KeyboardInterface) {\n      super(KeyboardInterface.TSS_PLATFORM);\n\n      this.kbdInterface = keyboardInterface;\n    }\n\n    matches(value: string) {\n      var i,constraint,constraints=value.split(' ');\n      let device = this.kbdInterface.activeDevice;\n\n      for(i=0; i<constraints.length; i++) {\n        constraint=constraints[i].toLowerCase();\n        switch(constraint) {\n          case 'touch':\n          case 'hardware':\n            if(device.touchable != (constraint == 'touch')) {\n              return false;\n            }\n            break;\n\n          case 'macos':\n          case 'mac':\n            constraint = 'macosx';\n            // fall through\n          case 'macosx':\n          case 'windows':\n          case 'android':\n          case 'ios':\n          case 'linux':\n            if(device.OS != constraint) {\n              return false;\n            }\n            break;\n\n          case 'tablet':\n          case 'phone':\n          case 'desktop':\n            if(device.formFactor != constraint) {\n              return false;\n            }\n            break;\n\n          case 'web':\n            if(device.browser == 'native') {\n              return false; // web matches anything other than 'native'\n            }\n            break;\n            \n          case 'native':\n            // This will return true for embedded KeymanWeb\n          case 'ie':\n          case 'chrome':\n          case 'firefox':\n          case 'safari':\n          case 'edge':\n          case 'opera':\n            if(device.browser != constraint) {\n              return false;\n            }\n            break;\n            \n          default:\n            return false;\n        }\n      }\n\n      // Everything we checked against was valid and had matches - it's a match!\n      return true;\n    }\n  }\n}","/// <reference path=\"deadkeys.ts\" />\n/// <reference path=\"ruleBehavior.ts\" />\n\n// Defines classes for handling system stores\n/// <reference path=\"systemStores.ts\" />\n\n/***\n   KeymanWeb 11.0\n   Copyright 2019 SIL International\n***/\n\nnamespace com.keyman.text {\n  //#region Helper type definitions\n\n  export class KeyInformation {\n    vk: boolean;\n    code: number;\n    modifiers: number;\n  }\n\n  /*\n  * Type alias definitions to reflect the parameters of the fullContextMatch() callback (KMW 10+).\n  * No constructors or methods since keyboards will not utilize the same backing prototype, and\n  * property names are shorthanded to promote minification.\n  */\n  type PlainKeyboardStore = string;\n\n  export type KeyboardStoreElement = (string|StoreNonCharEntry);\n  export type ComplexKeyboardStore = KeyboardStoreElement[]; \n\n  type KeyboardStore = PlainKeyboardStore | ComplexKeyboardStore;\n\n  export type VariableStore = {[name: string]: string};\n\n  type RuleChar = string;\n\n  class RuleDeadkey {\n    /** Discriminant field - 'd' for Deadkey.\n     */\n    ['t']: 'd';\n\n    /**\n     * Value:  the deadkey's ID.\n     */\n    ['d']: number; // For 'd'eadkey; also reflects the Deadkey class's 'd' property.\n  }\n\n  class ContextAny {\n    /** Discriminant field - 'a' for `any()`.\n     */\n    ['t']: 'a';\n\n    /**\n     * Value:  the store to search.\n     */\n    ['a']: KeyboardStore; // For 'a'ny statement.\n\n    /**\n     * If set to true, negates the 'any'.\n     */\n    ['n']: boolean|0|1;\n  }\n\n  class RuleIndex {\n    /** Discriminant field - 'i' for `index()`.\n     */\n    ['t']: 'i';\n    \n    /**\n     * Value: the Store from which to output\n     */\n    ['i']: KeyboardStore;\n    \n    /**\n     * Offset: the offset in context for the corresponding `any()`.\n     */\n    ['o']: number;\n  }\n\n  class ContextEx {\n    /** Discriminant field - 'c' for `context()`.\n     */\n    ['t']: 'c';\n    \n    /**\n     * Value:  The offset into the current rule's context to be matched.\n     */\n    ['c']: number; // For 'c'ontext statement.\n  }\n\n  class ContextNul {\n    /** Discriminant field - 'n' for `nul`\n     */\n    ['t']: 'n';\n  }\n\n  class StoreBeep {\n    /** Discriminant field - 'b' for `beep`\n     */\n    ['t']: 'b';\n  }\n\n  type ContextNonCharEntry = RuleDeadkey | ContextAny | RuleIndex | ContextEx | ContextNul;\n  type ContextEntry = RuleChar | ContextNonCharEntry;\n\n  type StoreNonCharEntry = RuleDeadkey | StoreBeep;\n\n  /**\n   * Cache of context storing and retrieving return values from KC\n   * Must be reset prior to each keystroke and after any text changes\n   * MCD 3/1/14   \n   **/         \n  class CachedContext {\n    _cache: string[][];\n    \n    reset(): void { \n      this._cache = []; \n    }\n\n    get(n: number, ln: number): string { \n      // return null; // uncomment this line to disable context caching\n      if(typeof this._cache[n] == 'undefined') {\n        return null;\n      } else if(typeof this._cache[n][ln] == 'undefined') {\n        return null;\n      }\n      return this._cache[n][ln];\n    }\n\n    set(n: number, ln: number, val: string): void { \n      if(typeof this._cache[n] == 'undefined') { \n        this._cache[n] = []; \n      } \n      this._cache[n][ln] = val; \n    }\n  };\n\n  type CachedExEntry = {valContext: (string|number)[], deadContext: text.Deadkey[]};\n  /** \n   * An extended version of cached context storing designed to work with \n   * `fullContextMatch` and its helper functions.\n   */\n  class CachedContextEx {\n    _cache: CachedExEntry[][];\n    \n    reset(): void {\n      this._cache = [];\n    }\n\n    get(n: number, ln: number): CachedExEntry {\n      // return null; // uncomment this line to disable context caching\n      if(typeof this._cache[n] == 'undefined') {\n        return null;\n      } else if(typeof this._cache[n][ln] == 'undefined') {\n        return null;\n      }\n      return this._cache[n][ln];\n    }\n\n    set(n: number, ln: number, val: CachedExEntry): void { \n      if(typeof this._cache[n] == 'undefined') { \n        this._cache[n] = []; \n      } \n      this._cache[n][ln] = val; \n    }\n  };\n\n  //#endregion\n\n  export class KeyboardInterface {\n    static readonly GLOBAL_NAME = 'KeymanWeb';\n\n    cachedContext: CachedContext = new CachedContext();\n    cachedContextEx: CachedContextEx = new CachedContextEx();\n\n    activeTargetOutput: OutputTarget;\n    ruleBehavior: RuleBehavior;\n\n    static readonly TSS_LAYER:    number = 33;\n    static readonly TSS_PLATFORM: number = 31;\n\n    systemStores: {[storeID: number]: SystemStore};\n\n    _AnyIndices:  number[] = [];    // AnyIndex - array of any/index match indices\n\n    // Must be accessible to some of the keyboard API methods.\n    activeKeyboard: any;\n    activeDevice: EngineDeviceSpec;\n\n    variableStoreSerializer?: VariableStoreSerializer;\n\n    constructor(variableStoreSerializer: VariableStoreSerializer = null) {\n      this.systemStores = {};\n      \n      this.systemStores[KeyboardInterface.TSS_PLATFORM] = new PlatformSystemStore(this);\n      this.systemStores[KeyboardInterface.TSS_LAYER] = new MutableSystemStore(KeyboardInterface.TSS_LAYER, 'default');\n\n      this.variableStoreSerializer = variableStoreSerializer;\n    }\n\n    /**\n     * Function     KSF\n     * Scope        Public\n     * \n     * Saves the document's current focus settings on behalf of the keyboard.  Often paired with insertText.\n     */    \n    saveFocus(): void { }\n\n    /**\n     * A text-insertion method used by custom OSKs for helpHTML interaction, like with sil_euro_latin.\n     * \n     * This function currently bypasses web-core's standard text handling control path and all predictive text processing.\n     * It also has DOM-dependencies that help ensure KMW's active OutputTarget retains focus during use.\n     */\n    insertText?: (Ptext: string, PdeadKey: number) => boolean;\n    \n    /**\n     * Function     registerKeyboard  KR                    \n     * Scope        Public\n     * @param       {Object}      Pk      Keyboard  object\n     * Description  Registers a keyboard with KeymanWeb once its script has fully loaded.\n     * \n     *              In web-core, this also activates the keyboard; in other modules, this method\n     *              may be replaced with other implementations.\n     */    \n    registerKeyboard(Pk): void {\n      // NOTE:  This implementation is web-core specific and is intentionally replaced, whole-sale, \n      //        by DOM-aware code.\n      let keyboard = new keyboards.Keyboard(Pk);\n      this.activeKeyboard = keyboard;\n    }\n\n    /**\n     * Used by DOM-aware KeymanWeb to add keyboard stubs, used by the `KeyboardManager` type \n     * to optimize resource use.\n     */    \n    registerStub?: (Pstub) => number;\n\n    /**\n     * Get *cached or uncached* keyboard context for a specified range, relative to caret\n     * \n     * @param       {number}      n       Number of characters to move back from caret\n     * @param       {number}      ln      Number of characters to return\n     * @param       {Object}      Pelem   Element to work with (must be currently focused element)\n     * @return      {string}              Context string \n     * \n     * Example     [abcdef|ghi] as INPUT, with the caret position marked by |:\n     *             KC(2,1,Pelem) == \"e\"\n     *             KC(3,3,Pelem) == \"def\"\n     *             KC(10,10,Pelem) == \"abcdef\"  i.e. return as much as possible of the requested string\n     */    \n    \n    context(n: number, ln: number, outputTarget: OutputTarget): string {\n      var v = this.cachedContext.get(n, ln);\n      if(v !== null) {\n        return v;\n      }\n      \n      var r = this.KC_(n, ln, outputTarget);\n      this.cachedContext.set(n, ln, r);\n      return r;\n    }\n\n    /**\n     * Get (uncached) keyboard context for a specified range, relative to caret\n     * \n     * @param       {number}      n       Number of characters to move back from caret\n     * @param       {number}      ln      Number of characters to return\n     * @param       {Object}      Pelem   Element to work with (must be currently focused element)\n     * @return      {string}              Context string \n     * \n     * Example     [abcdef|ghi] as INPUT, with the caret position marked by |:\n     *             KC(2,1,Pelem) == \"e\"\n     *             KC(3,3,Pelem) == \"def\"\n     *             KC(10,10,Pelem) == \"XXXXabcdef\"  i.e. return as much as possible of the requested string, where X = \\uFFFE\n     */    \n    private KC_(n: number, ln: number, outputTarget: OutputTarget): string {\n      var tempContext = '';\n\n      tempContext = outputTarget.getTextBeforeCaret();\n\n      if(tempContext._kmwLength() < n) {\n        tempContext = Array(n-tempContext._kmwLength()+1).join(\"\\uFFFE\") + tempContext;\n      }\n\n      return tempContext._kmwSubstr(-n)._kmwSubstr(0,ln);\n    }\n    \n    /**\n     * Function     nul           KN    \n     * Scope        Public\n     * @param       {number}      n       Length of context to check\n     * @param       {Object}      Ptarg   Element to work with (must be currently focused element)\n     * @return      {boolean}             True if length of context is less than or equal to n\n     * Description  Test length of context, return true if the length of the context is less than or equal to n\n     * \n     * Example     [abc|def] as INPUT, with the caret position marked by |:\n     *             KN(3,Pelem) == TRUE\n     *             KN(2,Pelem) == FALSE\n     *             KN(4,Pelem) == TRUE\n     */    \n    nul(n: number, outputTarget: OutputTarget): boolean {\n      var cx=this.context(n+1, 1, outputTarget);\n      \n      // With #31, the result will be a replacement character if context is empty.\n      return cx === \"\\uFFFE\";\n    }\n\n    /**\n     * Function     contextMatch  KCM   \n     * Scope        Public\n     * @param       {number}      n       Number of characters to move back from caret\n     * @param       {Object}      Ptarg   Focused element\n     * @param       {string}      val     String to match\n     * @param       {number}      ln      Number of characters to return\n     * @return      {boolean}             True if selected context matches val\n     * Description  Test keyboard context for match\n     */    \n    contextMatch(n: number, outputTarget: OutputTarget, val: string, ln: number): boolean {\n      var cx=this.context(n, ln, outputTarget);\n      if(cx === val) {\n        return true; // I3318\n      }\n      outputTarget.deadkeys().resetMatched(); // I3318\n      return false;\n    }\n\n    /**\n     * Builds the *cached or uncached* keyboard context for a specified range, relative to caret\n     * \n     * @param       {number}      n       Number of characters to move back from caret\n     * @param       {number}      ln      Number of characters to return\n     * @param       {Object}      Pelem   Element to work with (must be currently focused element)\n     * @return      {Array}               Context array (of strings and numbers) \n     */\n    private _BuildExtendedContext(n: number, ln: number, outputTarget: OutputTarget): CachedExEntry {\n      var cache: CachedExEntry = this.cachedContextEx.get(n, ln); \n      if(cache !== null) {\n        return cache;\n      } else {\n        // By far the easiest way to correctly build what we want is to start from the right and work to what we need.\n        // We may have done it for a similar cursor position before.\n        cache = this.cachedContextEx.get(n, n);\n        if(cache === null) {\n          // First, let's make sure we have a cloned, sorted copy of the deadkey array.\n          let unmatchedDeadkeys = outputTarget.deadkeys().toSortedArray(); // Is reverse-order sorted for us already.\n\n          // Time to build from scratch!\n          var index = 0;\n          cache = { valContext: [], deadContext: []};\n          while(cache.valContext.length < n) {\n            // As adapted from `deadkeyMatch`.\n            var sp = outputTarget.getDeadkeyCaret();\n            var deadPos = sp - index;\n            if(unmatchedDeadkeys.length > 0 && unmatchedDeadkeys[0].p > deadPos) {\n              // We have deadkeys at the right-hand side of the caret!  They don't belong in the context, so pop 'em off.\n              unmatchedDeadkeys.splice(0, 1);\n              continue;\n            } else if(unmatchedDeadkeys.length > 0 && unmatchedDeadkeys[0].p == deadPos) {\n              // Take the deadkey.\n              cache.deadContext[n-cache.valContext.length-1] = unmatchedDeadkeys[0];\n              cache.valContext = ([unmatchedDeadkeys[0].d] as (string|number)[]).concat(cache.valContext);\n              unmatchedDeadkeys.splice(0, 1);\n            } else {\n              // Take the character.  We get \"\\ufffe\" if it doesn't exist.\n              var kc = this.context(++index, 1, outputTarget);\n              cache.valContext = ([kc] as (string|number)[]).concat(cache.valContext);\n            }\n          }\n          this.cachedContextEx.set(n, n, cache);\n        }\n\n        // Now that we have the cache...\n        var subCache = cache;\n        subCache.valContext = subCache.valContext.slice(0, ln);\n        for(var i=0; i < subCache.valContext.length; i++) {\n          if(subCache[i] == '\\ufffe') {\n            subCache.valContext.splice(0, 1);\n            subCache.deadContext.splice(0, 1);\n          }\n        }\n\n        if(subCache.valContext.length == 0) {\n          subCache.valContext = ['\\ufffe'];\n          subCache.deadContext = [];\n        }\n\n        this.cachedContextEx.set(n, ln, subCache);\n\n        return subCache;\n      }\n    }\n\n    /**\n     * Function       fullContextMatch    KFCM\n     * Scope          Private\n     * @param         {number}    n       Number of characters to move back from caret\n     * @param         {Object}    Ptarg   Focused element\n     * @param         {Array}     rule    An array of ContextEntries to match.\n     * @return        {boolean}           True if the fully-specified rule context matches the current KMW state.\n     * \n     * A KMW 10+ function designed to bring KMW closer to Keyman Desktop functionality,\n     * near-directly modeling (externally) the compiled form of Desktop rules' context section.\n     */\n    fullContextMatch(n: number, outputTarget: OutputTarget, rule: ContextEntry[]): boolean {\n      // Stage one:  build the context index map.\n      var fullContext = this._BuildExtendedContext(n, rule.length, outputTarget);\n      var context = fullContext.valContext;\n      var deadContext = fullContext.deadContext;\n\n      var mismatch = false;\n\n      // This symbol internally indicates lack of context in a position.  (See KC_)\n      const NUL_CONTEXT = \"\\uFFFE\";\n\n      var assertNever = function(x: never): never {\n        // Could be accessed by improperly handwritten calls to `fullContextMatch`.\n        throw new Error(\"Unexpected object in fullContextMatch specification: \" + x);\n      }\n\n      // Stage two:  time to match against the rule specified.\n      for(var i=0; i < rule.length; i++) {\n        if(typeof rule[i] == 'string') {\n          var str = rule[i] as string;\n          if(str !== context[i]) {\n            mismatch = true;\n            break;\n          }\n        } else {\n          // TypeScript needs a cast to this intermediate type to do its discriminated union magic.\n          var r = rule[i] as ContextNonCharEntry;\n          switch(r.t) {\n            case 'd':\n              // We still need to set a flag here; \n              if(r['d'] !== context[i]) {\n                mismatch = true;\n              } else {\n                deadContext[i].set();\n              }\n              break;\n            case 'a':\n              var lookup: KeyboardStoreElement;\n\n              if(typeof context[i] == 'string') {\n                lookup = context[i] as string;\n              } else {\n                lookup = {'t': 'd', 'd': context[i] as number};\n              }\n\n              var result = this.any(i, lookup, r.a);\n\n              if(!r.n) { // If it's a standard 'any'...\n                if(!result) {\n                  mismatch = true;\n                } else if(deadContext[i] !== undefined) {\n                  // It's a deadkey match, so indicate that.\n                  deadContext[i].set();\n                }\n                // 'n' for 'notany'.  If we actually match or if we have nul context (\\uFFFE), notany fails.\n              } else if(r.n && (result || context[i] !== NUL_CONTEXT)) {\n                mismatch = true;\n              }\n              break;\n            case 'i':\n              // The context will never hold a 'beep.'\n              var ch = this._Index(r.i, r.o) as string | RuleDeadkey;\n\n              if(ch !== undefined && (typeof(ch) == 'string' ? ch : ch.d) !== context[i]) {\n                mismatch = true;\n              } else if(deadContext[i] !== undefined) {\n                deadContext[i].set();\n              }\n              break;\n            case 'c':            \n              if(context[r.c - 1] !== context[i]) {\n                mismatch = true;\n              } else if(deadContext[i] !== undefined) {\n                deadContext[i].set();\n              }\n              break;\n            case 'n':\n              // \\uFFFE is the internal 'no context here sentinel'.\n              if(context[i] != NUL_CONTEXT) {\n                mismatch = true;\n              }\n              break;\n            default:\n              assertNever(r);\n          }\n        }\n      }\n\n      if(mismatch) {\n        // Reset the matched 'any' indices, if any.\n        outputTarget.deadkeys().resetMatched();\n        this._AnyIndices = [];\n      }\n\n      return !mismatch;\n    }\n\n    /**\n     * Function     KIK      \n     * Scope        Public\n     * @param       {Object}  e   keystroke event\n     * @return      {boolean}     true if keypress event\n     * Description  Test if event as a keypress event\n     */    \n    isKeypress(e: KeyEvent): boolean {\n      if(this.activeKeyboard.isMnemonic) {   // I1380 - support KIK for positional layouts\n        return !e.LisVirtualKey;             // will now return true for U_xxxx keys, but not for T_xxxx keys\n      } else {\n        return KeyMapping._USKeyCodeToCharCode(e) ? true : false; // I1380 - support KIK for positional layouts\n      }\n    }\n    \n    /**\n     * Function     keyMatch      KKM      \n     * Scope        Public\n     * @param       {Object}      e           keystroke event\n     * @param       {number}      Lruleshift\n     * @param       {number}      Lrulekey\n     * @return      {boolean}                 True if key matches rule\n     * Description  Test keystroke with modifiers against rule\n     */    \n    keyMatch(e: KeyEvent, Lruleshift:number, Lrulekey:number): boolean {\n      var retVal = false; // I3318\n      var keyCode = (e.Lcode == 173 ? 189 : e.Lcode);  //I3555 (Firefox hyphen issue)\n\n      let bitmask = this.activeKeyboard.modifierBitmask;\n      let Codes = com.keyman.text.Codes;\n      var modifierBitmask = bitmask & Codes.modifierBitmasks[\"ALL\"];\n      var stateBitmask = bitmask & Codes.stateBitmasks[\"ALL\"];\n\n      if(e.vkCode > 255) {\n        keyCode = e.vkCode; // added to support extended (touch-hold) keys for mnemonic layouts\n      }\n        \n      if(e.LisVirtualKey || keyCode > 255) {\n        if((Lruleshift & 0x4000) == 0x4000 || (keyCode > 255)) { // added keyCode test to support extended keys\n          retVal = ((Lrulekey == keyCode) && ((Lruleshift & modifierBitmask) == e.Lmodifiers)); //I3318, I3555\n          retVal = retVal && this.stateMatch(e, Lruleshift & stateBitmask);\n        }\n      } else if((Lruleshift & 0x4000) == 0) {\n        retVal = (keyCode == Lrulekey); // I3318, I3555\n      }\n      if(!retVal) {\n        this.activeTargetOutput.deadkeys().resetMatched();  // I3318\n      }\n      return retVal; // I3318\n    };\n\n    /**\n     * Function     stateMatch    KSM\n     * Scope        Public\n     * @param       {Object}      e       keystroke event\n     * @param       {number}      Lstate  \n     * Description  Test keystroke against state key rules\n     */\n    stateMatch(e: KeyEvent, Lstate: number) {\n      return ((Lstate & e.Lstates) == Lstate);\n    }\n\n    /**\n     * Function     keyInformation  KKI\n     * Scope        Public\n     * @param       {Object}      e\n     * @return      {Object}              Object with event's virtual key flag, key code, and modifiers\n     * Description  Get object with extended key event information\n     */    \n    keyInformation(e: KeyEvent): KeyInformation {\n      var ei = new KeyInformation();\n      ei['vk'] = e.LisVirtualKey;\n      ei['code'] = e.Lcode;\n      ei['modifiers'] = e.Lmodifiers;\n      return ei;\n    };\n\n    /**\n     * Function     deadkeyMatch  KDM      \n     * Scope        Public\n     * @param       {number}      n       offset from current cursor position\n     * @param       {Object}      Ptarg   target element\n     * @param       {number}      d       deadkey\n     * @return      {boolean}             True if deadkey found selected context matches val\n     * Description  Match deadkey at current cursor position\n     */    \n    deadkeyMatch(n: number, outputTarget: OutputTarget, d: number): boolean {\n      return outputTarget.hasDeadkeyMatch(n, d);\n    }\n      \n    /**\n     * Function     beep          KB      \n     * Scope        Public\n     * @param       {Object}      Pelem     element to flash\n     * Description  Flash body as substitute for audible beep; notify embedded device to vibrate\n     */    \n    beep(outputTarget: OutputTarget): void {\n      this.resetContextCache();\n\n      // Denote as part of the matched rule's behavior.\n      this.ruleBehavior.beep = true;\n    }\n\n    _ExplodeStore(store: KeyboardStore): ComplexKeyboardStore {\n      if(typeof(store) == 'string') {\n        let cachedStores = this.activeKeyboard.explodedStores;\n\n        // Is the result cached?\n        if(cachedStores[store]) {\n          return cachedStores[store];\n        }\n\n        // Nope, so let's build its cache.\n        var result: ComplexKeyboardStore = [];\n        for(var i=0; i < store._kmwLength(); i++) {\n          result.push(store._kmwCharAt(i));\n        }\n\n        // Cache the result for later!\n        cachedStores[store] = result;\n        return result;\n      } else {\n        return store;\n      }\n    }\n    \n    /**\n     * Function     any           KA      \n     * Scope        Public\n     * @param       {number}      n     character position (index) \n     * @param       {string}      ch    character to find in string\n     * @param       {string}      s     'any' string   \n     * @return      {boolean}           True if character found in 'any' string, sets index accordingly\n     * Description  Test for character matching\n     */    \n    any(n: number, ch: KeyboardStoreElement, s: KeyboardStore): boolean {\n      if(ch == '') {\n        return false;\n      }\n      \n      s = this._ExplodeStore(s);\n      var Lix = -1;\n      for(var i=0; i < s.length; i++) {\n        if(typeof(s[i]) == 'string') {\n          if(s[i] == ch) {\n            Lix = i;\n            break;\n          }\n        } else if(s[i]['d'] === ch['d']) {\n          Lix = i;\n          break;\n        }\n      }\n      this._AnyIndices[n] = Lix;\n      return Lix >= 0;\n    }\n\n    /**\n     * Function     _Index\n     * Scope        Public \n     * @param       {string}      Ps      string\n     * @param       {number}      Pn      index\n     * Description  Returns the character from a store string according to the offset in the index array\n     */\n    _Index(Ps: KeyboardStore, Pn: number): KeyboardStoreElement {        \n      Ps = this._ExplodeStore(Ps);\n\n      if(this._AnyIndices[Pn-1] < Ps.length) {   //I3319\n        return Ps[this._AnyIndices[Pn-1]];\n      } else {\n        /* Should not be possible for a compiled keyboard, but may arise \n        * during the development of handwritten keyboards.\n        */\n        console.warn(\"Unmatched contextual index() statement detected in rule with index \" + Pn + \"!\");\n        return \"\";\n      }\n    }\n\n    /**\n     * Function     indexOutput   KIO\n     * Scope        Public\n     * @param       {number}      Pdn     no of character to overwrite (delete)\n     * @param       {string}      Ps      string\n     * @param       {number}      Pn      index\n     * @param       {Object}      Pelem   element to output to\n     * Description  Output a character selected from the string according to the offset in the index array\n     */\n    indexOutput(Pdn: number, Ps: KeyboardStore, Pn: number, outputTarget: OutputTarget): void {\n      this.resetContextCache();\n\n      var assertNever = function(x: never): never {\n        // Could be accessed by improperly handwritten calls to `fullContextMatch`.\n        throw new Error(\"Unexpected object in fullContextMatch specification: \" + x);\n      }\n\n      var indexChar = this._Index(Ps, Pn);\n      if(indexChar !== \"\") {\n        if(typeof indexChar == 'string' ) {\n          this.output(Pdn, outputTarget, indexChar);  //I3319\n        } else if(indexChar['t']) {\n          var storeEntry = indexChar as StoreNonCharEntry;\n\n          switch(storeEntry.t) {\n            case 'b': // Beep commands may appear within stores.\n              this.beep(outputTarget);\n              break;\n            case 'd':\n              this.deadkeyOutput(Pdn, outputTarget, indexChar['d']);\n              break;\n            default:\n              assertNever(storeEntry);\n          }\n        } else { // For keyboards developed during 10.0's alpha phase - t:'d' was assumed.\n          this.deadkeyOutput(Pdn, outputTarget, indexChar['d']);\n        }\n      } \n    }\n    \n    \n    /**\n     * Function     deleteContext KDC  \n     * Scope        Public\n     * @param       {number}      dn      number of context entries to overwrite\n     * @param       {Object}      Pelem   element to output to \n     * @param       {string}      s       string to output   \n     * Description  Keyboard output\n     */\n    deleteContext(dn: number, outputTarget: OutputTarget): void {\n      var context: CachedExEntry;\n\n      // We want to control exactly which deadkeys get removed.\n      if(dn > 0) {\n        context = this._BuildExtendedContext(dn, dn, outputTarget);\n        let nulCount = 0;\n\n        for(var i=0; i < context.valContext.length; i++) {\n          var dk = context.deadContext[i];\n\n          if(dk) {\n            // Remove deadkey in context.\n            outputTarget.deadkeys().remove(dk);\n\n            // Reduce our reported context size.\n            dn--;\n          } else if(context.valContext[i] == \"\\uFFFE\") {\n            // Count any `nul` sentinels that would contribute to our deletion count.\n            nulCount++;\n          }\n        }\n\n        // Prevent attempts to delete nul sentinels, as they don't exist in the actual context.\n        // (Addresses regression from KMW v 12.0 paired with Developer bug through same version)\n        let contextLength = context.valContext.length - nulCount;\n        if(dn > contextLength) {\n          dn = contextLength;\n        }\n      }\n\n      // If a matched deadkey hasn't been deleted, we don't WANT to delete it.\n      outputTarget.deadkeys().resetMatched();\n\n      // Why reinvent the wheel?  Delete the remaining characters by 'inserting a blank string'.\n      this.output(dn, outputTarget, '');\n    }\n\n    /**\n     * Function     output        KO  \n     * Scope        Public\n     * @param       {number}      dn      number of characters to overwrite\n     * @param       {Object}      Pelem   element to output to \n     * @param       {string}      s       string to output   \n     * Description  Keyboard output\n     */\n    output(dn: number, outputTarget: OutputTarget, s:string): void {\n      this.resetContextCache();\n\n      outputTarget.saveProperties();\n      outputTarget.clearSelection();\n      outputTarget.deadkeys().deleteMatched(); // I3318\n      if(dn >= 0) {\n        // Automatically manages affected deadkey positions.  Does not delete deadkeys b/c legacy behavior support.\n        outputTarget.deleteCharsBeforeCaret(dn);\n      }\n      // Automatically manages affected deadkey positions.\n      outputTarget.insertTextBeforeCaret(s);\n      outputTarget.restoreProperties();\n    }\n  \n    \n    /**\n     * Function     deadkeyOutput KDO      \n     * Scope        Public\n     * @param       {number}      Pdn     no of character to overwrite (delete) \n     * @param       {Object}      Pelem   element to output to \n     * @param       {number}      Pd      deadkey id\n     * Description  Record a deadkey at current cursor position, deleting Pdn characters first\n     */    \n    deadkeyOutput(Pdn: number, outputTarget: OutputTarget, Pd: number): void {\n      this.resetContextCache();\n\n      if(Pdn >= 0) {\n        this.output(Pdn, outputTarget,\"\");  //I3318 corrected to >=\n      }\n\n      outputTarget.insertDeadkeyBeforeCaret(Pd);\n      //    _DebugDeadKeys(Pelem, 'KDeadKeyOutput: dn='+Pdn+'; deadKey='+Pd);\n    }\n    \n    /**\n     * KIFS compares the content of a system store with a string value \n     * \n     * @param       {number}      systemId    ID of the system store to test (only TSS_LAYER currently supported)\n     * @param       {string}      strValue    String value to compare to\n     * @param       {Object}      Pelem       Currently active element (may be needed by future tests)     \n     * @return      {boolean}                 True if the test succeeds \n     */       \n    ifStore(systemId: number, strValue: string, outputTarget: OutputTarget): boolean {\n      var result=true;\n      let store = this.systemStores[systemId];\n      if(store) {\n        result = store.matches(strValue);\n      }\n      return result; //Moved from previous line, now supports layer selection, Build 350 \n    }\n\n    /**\n     * KSETS sets the value of a system store to a string  \n     * \n     * @param       {number}      systemId    ID of the system store to set (only TSS_LAYER currently supported)\n     * @param       {string}      strValue    String to set as the system store content \n     * @param       {Object}      Pelem       Currently active element (may be needed in future tests)     \n     * @return      {boolean}                 True if command succeeds\n     *                                        (i.e. for TSS_LAYER, if the layer is successfully selected)\n     * \n     * Note that option/variable stores are instead set within keyboard script code, as they only\n     * affect keyboard behavior.\n     */    \n    setStore(systemId: number, strValue: string, outputTarget: OutputTarget): boolean {\n      this.resetContextCache();\n      if(systemId == KeyboardInterface.TSS_LAYER) {\n        // Denote the changed store as part of the matched rule's behavior.\n        this.ruleBehavior.setStore[systemId] = strValue;\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * Load an option store value from a cookie or default value\n     * \n     * @param       {string}      kbdName     keyboard internal name\n     * @param       {string}      storeName   store (option) name, embedded in cookie name\n     * @param       {string}      dfltValue   default value\n     * @return      {string}                  current or default option value   \n     * \n     * This will only ever be called when the keyboard is loaded, as it is used by keyboards\n     * to initialize a store value on the keyboard's script object.\n     */    \n    loadStore(kbdName: string, storeName:string, dfltValue:string): string {\n      this.resetContextCache();\n      if(this.variableStoreSerializer) {\n        let cValue = this.variableStoreSerializer.loadStore(kbdName, storeName);\n        return cValue[storeName] || dfltValue;\n      } else {\n        return dfltValue;\n      }\n    }\n\n    /**\n     * Save an option store value to a cookie \n     * \n     * @param       {string}      storeName   store (option) name, embedded in cookie name\n     * @param       {string}      optValue    option value to save\n     * @return      {boolean}                 true if save successful\n     * \n     * Note that a keyboard will freely manipulate the value of its variable stores on the\n     * script object within its own code.  This function's use is merely to _persist_ that\n     * value across sessions, providing a custom user default for later uses of the keyboard.\n     */    \n    saveStore(storeName:string, optValue:string): boolean {\n      this.resetContextCache();\n      var kbd=this.activeKeyboard;\n      if(!kbd || typeof kbd.id == 'undefined' || kbd.id == '') {\n        return false;\n      }\n\n      // And the lookup under that entry looks for the value under the store name, again.\n      let valueObj: VariableStore = {};\n      valueObj[storeName] = optValue;\n\n      // Null-check in case of invocation during unit-test\n      if(this.ruleBehavior) {\n        this.ruleBehavior.saveStore[storeName] = valueObj;\n      } else {\n        // We're in a unit-test environment, directly invoking this method from outside of a keyboard.\n        // In this case, we should immediately commit the change.\n        this.variableStoreSerializer.saveStore(this.activeKeyboard.id, storeName, valueObj);\n      }\n      return true;\n    }\n\n    resetContextCache(): void {\n      this.cachedContext.reset();\n      this.cachedContextEx.reset();\n    }\n\n    defaultBackspace(outputTarget: OutputTarget) {\n      this.output(1, outputTarget, \"\");\n    }\n\n    /**\n     * Function     processKeystroke\n     * Scope        Private\n     * @param       {Object}        element     The page element receiving input\n     * @param       {Object}        keystroke   The input keystroke (with its properties) to be mapped by the keyboard.\n     * Description  Encapsulates calls to keyboard input processing.\n     * @returns     {number}        0 if no match is made, otherwise 1.\n     */\n    processKeystroke(outputTarget: OutputTarget, keystroke: KeyEvent): RuleBehavior {\n      // Clear internal state tracking data from prior keystrokes.\n      if(!outputTarget) {\n        throw \"No target specified for keyboard output!\";\n      } else if(!this.activeKeyboard) {\n        throw \"No active keyboard for keystroke processing!\";\n      }\n\n      outputTarget.invalidateSelection();\n\n      outputTarget.deadkeys().resetMatched();       // I3318    \n      this.resetContextCache();\n\n      // Capture the initial state of the OutputTarget before any rules are matched.\n      let preInput = Mock.from(outputTarget);\n      \n      // Establishes the results object, allowing corresponding commands to set values here as appropriate.\n      this.ruleBehavior = new RuleBehavior();\n\n      // Ensure the settings are in place so that KIFS/ifState activates and deactivates\n      // the appropriate rule(s) for the modeled device.\n      this.activeDevice = keystroke.device;\n\n      // Calls the start-group of the active keyboard.\n      this.activeTargetOutput = outputTarget;\n      var matched = this.activeKeyboard.process(outputTarget, keystroke);\n      this.activeTargetOutput = null;\n\n      if(!matched) {\n        return null;\n      }\n\n      // Finalize the rule's results.\n      this.ruleBehavior.transcription = outputTarget.buildTranscriptionFrom(preInput, keystroke);\n\n      // Clear our result-tracking variable to prevent any possible pollution for future processing.\n      let behavior = this.ruleBehavior;\n      this.ruleBehavior = null;\n\n      return behavior;\n    }\n\n    // Publishes the KeyboardInterface's shorthand API names.\n    // Note that this may need to be called multiple times; a keyboard-processor consumer\n    // may extend or overwrite some of the callbacks after this method's initial call.\n    static __publishShorthandAPI() {\n      // Keyboard callbacks\n      let prototype = this.prototype;\n\n      var exportKBCallback = function(miniName: string, longName: string) {\n        prototype[miniName] = prototype[longName];\n      }\n\n      exportKBCallback('KSF', 'saveFocus');\n      exportKBCallback('KBR', 'beepReset');\n      exportKBCallback('KT', 'insertText');\n      exportKBCallback('KR', 'registerKeyboard');\n      exportKBCallback('KRS', 'registerStub');\n      exportKBCallback('KC', 'context');\n      exportKBCallback('KN', 'nul');\n      exportKBCallback('KCM', 'contextMatch');\n      exportKBCallback('KFCM', 'fullContextMatch');\n      exportKBCallback('KIK', 'isKeypress');\n      exportKBCallback('KKM', 'keyMatch');\n      exportKBCallback('KSM', 'stateMatch');\n      exportKBCallback('KKI', 'keyInformation');\n      exportKBCallback('KDM', 'deadkeyMatch');\n      exportKBCallback('KB', 'beep');\n      exportKBCallback('KA', 'any');\n      exportKBCallback('KDC', 'deleteContext');\n      exportKBCallback('KO', 'output');\n      exportKBCallback('KDO', 'deadkeyOutput');\n      exportKBCallback('KIO', 'indexOutput');\n      exportKBCallback('KIFS', 'ifStore');\n      exportKBCallback('KSETS', 'setStore');\n      exportKBCallback('KLOAD', 'loadStore');\n      exportKBCallback('KSAVE', 'saveStore');\n    }\n  }\n\n  (function() {\n    // This will be the only call within the keyboard-processor module.\n    KeyboardInterface.__publishShorthandAPI();\n  }());\n}","/// <reference path=\"defaultLayouts.ts\" />\n/// <reference path=\"activeLayout.ts\" />\n/// <reference path=\"../text/kbdInterface.ts\" />\n\nnamespace com.keyman.keyboards {\n  /**\n   * Stores preprocessed properties of a keyboard for quick retrieval later.\n   */\n  class CacheTag {\n    stores: {[storeName: string]: text.ComplexKeyboardStore};\n\n    constructor() {\n      this.stores = {};\n    }\n  }\n\n  export enum LayoutState {\n    NOT_LOADED = undefined,\n    POLYFILLED = 1,\n    CALIBRATED = 2\n  }\n\n  /**\n   * Acts as a wrapper class for Keyman keyboards compiled to JS, providing type information\n   * and keyboard-centered functionality in an object-oriented way without modifying the \n   * wrapped keyboard itself.\n   */\n  export class Keyboard {\n    public static DEFAULT_SCRIPT_OBJECT = {\n      'gs': function(outputTarget, keystroke) { return false; }, // no matching rules; rely on defaultRuleOutput entirely\n      'KI': '', // The currently-existing default keyboard ID; we already have checks that focus against this.\n      'KN': '',\n      'KV': Layouts.DEFAULT_RAW_SPEC,\n      'KM': 0 // May not be the best default, but this matches current behavior when there is no activeKeyboard.\n    }\n\n    /**\n     * This is the object provided to KeyboardInterface.registerKeyboard - that is, the keyboard\n     * being wrapped.\n     * \n     * TODO:  Make this private instead.  But there are a LOT of references that must be rooted out first.\n     */\n    public readonly scriptObject: any;\n    private layoutStates: {[layout: string]: LayoutState};\n\n    constructor(keyboardScript: any) {\n      if(keyboardScript) {\n        this.scriptObject = keyboardScript;\n      } else {\n        this.scriptObject = Keyboard.DEFAULT_SCRIPT_OBJECT;\n      }\n      this.layoutStates = {};\n    }\n\n    /**\n     * Calls the keyboard's `gs` function, which represents the keyboard source's group(main).\n     */\n    process(outputTarget: text.OutputTarget, keystroke: text.KeyEvent): boolean {\n      return this.scriptObject['gs'](outputTarget, keystroke);\n    }\n\n    get isHollow(): boolean {\n      return this.scriptObject == Keyboard.DEFAULT_SCRIPT_OBJECT;\n    }\n\n    get id(): string {\n      return this.scriptObject['KI'];\n    }\n\n    get name(): string {\n      return this.scriptObject['KN'];\n    }\n\n    get displaysUnderlyingKeys(): boolean {\n      // Returns false if undefined or false-like (including 0), true otherwise.\n      return !!this.scriptObject['KDU'];\n    }\n\n    // TODO:  Better typing.\n    private get _legacyLayoutSpec(): any {\n      return this.scriptObject['KV'];  // used with buildDefaultLayout; layout must be constructed at runtime.\n    }\n\n    // May return null if no layouts exist or have been initialized.\n    private get _layouts(): {[formFactor: string]: LayoutFormFactor} {\n      return this.scriptObject['KVKL'];  // This one is compiled by Developer's visual keyboard layout editor.\n    }\n\n    private set _layouts(value) {\n      this.scriptObject['KVKL'] = value;\n    }\n\n    get compilerVersion(): utils.Version {\n      return new utils.Version(this.scriptObject['KVER']);\n    }\n\n    get isMnemonic(): boolean {\n      return !!this.scriptObject['KM'];\n    }\n\n    get definesPositionalOrMnemonic(): boolean {\n      return typeof this.scriptObject['KM'] != 'undefined';\n    }\n\n    /**\n     * HTML help text which is a one liner intended for the status bar of the desktop OSK originally.\n     * \n     * Reference: https://help.keyman.com/developer/language/reference/kmw_helptext\n     */\n    get helpText(): string {\n      return this.scriptObject['KH'];\n    }\n\n    get hasHelpHTML(): boolean {\n      return !!this.scriptObject['KHF'];\n    }\n\n    /**\n     * Replaces the OSK with custom HTML, which may be interactive (like with sil_euro_latin).\n     * \n     * Reference: https://help.keyman.com/developer/language/reference/kmw_helpfile\n     */\n    insertHelpHTML(e: any) {\n      // e:  Expects the OSKManager's _Box element.  We don't add type info here b/c it would\n      //     reference the DOM.\n      this.scriptObject['KHF'](e);\n    }\n\n    get oskStyling(): string {\n      return this.scriptObject['KCSS'];\n    }\n\n    /**\n     * true if this keyboard uses a (legacy) pick list (Chinese, Japanese, Korean, etc.)\n     * \n     * TODO:  Make a property on keyboards (say, `isPickList` / `KPL`) to signal this when we\n     *        get around to better, generalized picker-list support.\n     */    \n    get isCJK(): boolean { // I3363 (Build 301)\n      var lg: string;\n      if(typeof(this.scriptObject['KLC']) != 'undefined') {\n        lg = this.scriptObject['KLC'];\n      } else if(typeof(this.scriptObject['LanguageCode']) != 'undefined') {\n        lg = this.scriptObject['LanguageCode'];\n      }\n      \n      // While some of these aren't proper BCP-47 language codes, the CJK keyboards predate our use of BCP-47.\n      // So, we preserve the old ISO 639-3 codes, as that's what the keyboards are matching against.\n      return ((lg == 'cmn') || (lg == 'jpn') || (lg == 'kor'));\n    }\n\n    get isRTL(): boolean {\n      return !!this.scriptObject['KRTL'];\n    }\n\n    /**\n     * Obtains the currently-active modifier bitmask for the active keyboard.\n     */\n    get modifierBitmask(): number {\n      // NON_CHIRAL is the default bitmask if KMBM is not defined.\n      // We always need a bitmask to compare against, as seen in `isChiral`.\n      return this.scriptObject['KMBM'] || text.Codes.modifierBitmasks['NON_CHIRAL'];\n    }\n\n    get isChiral(): boolean {\n      return !!(this.modifierBitmask & text.Codes.modifierBitmasks['IS_CHIRAL']);\n    }\n\n    get desktopFont(): string {\n      if(this.scriptObject['KV']) {\n        return this.scriptObject['KV']['F'];\n      } else {\n        return null;\n      }\n    }\n\n    private get cacheTag(): CacheTag {\n      let tag = this.scriptObject['_kmw'];\n\n      if(!tag) {\n        tag = new CacheTag();\n        this.scriptObject['_kmw'] = tag;\n      }\n\n      return tag; \n    }\n\n    get explodedStores(): {[storeName: string]: text.ComplexKeyboardStore} {\n      return this.cacheTag.stores;\n    }\n\n    /**\n     * Signifies whether or not a layout or OSK should include AltGr / Right-alt emulation for this keyboard.\n     * @param   {Object=}   keyLabels\n     * @return  {boolean}\n     */\n    get emulatesAltGr(): boolean {\n      let modifierCodes = text.Codes.modifierCodes;\n\n      // If we're not chiral, we're not emulating.\n      if(!this.isChiral) {\n        return false;\n      }\n\n      if(this._legacyLayoutSpec == null) {\n        return false;\n      }\n      \n      // Only exists in KMW 10.0+, but before that Web had no chirality support, so... return false.\n      let layers = this._legacyLayoutSpec['KLS'];\n      if(!layers) {\n        return false;\n      }\n\n      var emulationMask = modifierCodes['LCTRL'] | modifierCodes['LALT'];\n      var unshiftedEmulationLayer = layers[Layouts.getLayerId(emulationMask)];\n      var shiftedEmulationLayer = layers[Layouts.getLayerId(modifierCodes['SHIFT'] | emulationMask)];\n      \n      // buildDefaultLayout ensures that these are aliased to the original modifier set being emulated.\n      // As a result, we can directly test for reference equality.\n      //\n      // This allows us to still return `true` after creating the layers for emulation; during keyboard\n      // construction, the two layers should be null for AltGr emulation to succeed.\n      if(unshiftedEmulationLayer != null && \n          unshiftedEmulationLayer != layers[Layouts.getLayerId(modifierCodes['RALT'])]) {\n        return false;\n      }\n\n      if(shiftedEmulationLayer != null && \n          shiftedEmulationLayer != layers[Layouts.getLayerId(modifierCodes['RALT'] | modifierCodes['SHIFT'])]) {\n        return false;\n      }\n\n      // It's technically possible for the OSK to not specify anything while allowing chiral input.  A last-ditch catch:\n      var bitmask = this.modifierBitmask;\n      if((bitmask & emulationMask) != emulationMask) {\n        // At least one of the emulation modifiers is never used by the keyboard!  We can confirm everything's safe.\n        return true;\n      }\n\n      if(unshiftedEmulationLayer == null && shiftedEmulationLayer == null) {\n        // We've run out of things to go on; we can't detect if chiral AltGr emulation is intended or not.\n        // TODO:  handle this again!\n        // if(!osk.altGrWarning) {\n        //   console.warn(\"Could not detect if AltGr emulation is safe, but defaulting to active emulation!\")\n        //   // Avoid spamming the console with warnings on every call of the method.\n        //   osk.altGrWarning = true;\n        // }\n        return true;\n      }\n      return true;\n    }\n\n    usesDesktopLayoutOnDevice(device: text.EngineDeviceSpec) {\n      if(this.scriptObject['KVKL']) {\n        // A custom mobile layout is defined... but are we using it?\n        return device.formFactor == text.FormFactor.Desktop;\n      } else {\n        return true;\n      }\n    }\n\n    /**\n     * @param       {number}    _PCommand     event code (16,17,18) or 0\n     * @param       {Object}    _PTarget      target element\n     * @param       {number}    _PData        1 or 0    \n     * Notifies keyboard of keystroke or other event\n     */    \n    notify(_PCommand: number, _PTarget: text.OutputTarget, _PData: number) { // I2187\n      // Good example use case - the Japanese CJK-picker keyboard\n      if(typeof(this.scriptObject['KNS']) == 'function') {\n        this.scriptObject['KNS'](_PCommand, _PTarget, _PData);\n      }\n    }\n\n    private findOrConstructLayout(formFactor: text.FormFactor): LayoutFormFactor {\n      if(this._layouts) {\n        // Search for viable layouts.  `null` is allowed for desktop form factors when help text is available,\n        // so we check explicitly against `undefined`.\n        if(this._layouts[formFactor] !== undefined) {\n          return this._layouts[formFactor];\n        } else if(formFactor == text.FormFactor.Phone && this._layouts[text.FormFactor.Tablet]) {\n          return this._layouts[text.FormFactor.Phone] = this._layouts[text.FormFactor.Tablet];\n        } else if(formFactor == text.FormFactor.Tablet && this._layouts[text.FormFactor.Phone]) {\n          return this._layouts[text.FormFactor.Tablet] = this._layouts[text.FormFactor.Phone];\n        }\n      }\n\n      // No pre-built layout available; time to start constructing it via defaults.\n      // First, if we have non-default keys specified by the ['BK'] array, we've got\n      // enough to work with to build a default layout.\n      let rawSpecifications: any = null;  // TODO:  better typing, same type as this._legacyLayoutSpec.\n      if(this._legacyLayoutSpec != null && this._legacyLayoutSpec['KLS']) { // KLS is only specified whenever there are non-default keys.\n        rawSpecifications = this._legacyLayoutSpec;\n      } else if(this._legacyLayoutSpec != null && this._legacyLayoutSpec['BK'] != null) {\n        var keyCaps=this._legacyLayoutSpec['BK'];\n        for(var i=0; i<keyCaps.length; i++) {\n          if(keyCaps[i].length > 0) {\n            rawSpecifications = this._legacyLayoutSpec;\n            break;\n          }\n        }\n      }\n\n      // If we don't have key definitions to use for a layout but also lack help text or are a touch-based layout,\n      // we make a default layout anyway.  We have to show display something usable.\n      if(!rawSpecifications && (this.helpText == '' || formFactor != text.FormFactor.Desktop)) {\n        rawSpecifications = {'F':'Tahoma', 'BK': Layouts.dfltText};\n      }\n\n      // Regardless of success, we'll want to initialize the field that backs the property; \n      // may as well cache the default layout we just built, or a 'null' if it shouldn't exist..\n      if(!this._layouts) {\n        this._layouts = {};\n      }\n\n      // Final check - do we construct a layout, or is this a case where helpText / insertHelpHTML should take over?\n      if(rawSpecifications) {\n        // Now to generate a layout from our raw specifications.\n        let layout = this._layouts[formFactor] = Layouts.buildDefaultLayout(rawSpecifications, this, formFactor);\n        layout.isDefault = true;\n        return layout;\n      } else {\n        // The fact that it doesn't exist will indicate that help text/HTML should be inserted instead.\n        this._layouts[formFactor] = null; // provides a cached value for the check at the top of this method.\n        return null;\n      }\n    }\n\n    /**\n     * Returns an ActiveLayout object representing the keyboard's layout for this form factor.  May return null if a custom desktop \"help\" OSK is defined, as with sil_euro_latin.\n     * \n     * In such cases, please use either `helpText` or `insertHelpHTML` instead.\n     * @param formFactor {string} The desired form factor for the layout.\n     */\n    public layout(formFactor: text.FormFactor): ActiveLayout {\n      let rawLayout = this.findOrConstructLayout(formFactor);\n\n      if(rawLayout) {\n        // Prevents accidentally reprocessing layouts; it's a simple enough check.\n        if(this.layoutStates[formFactor] == LayoutState.NOT_LOADED) {\n          rawLayout = ActiveLayout.polyfill(rawLayout, this, formFactor);\n          this.layoutStates[formFactor] = LayoutState.POLYFILLED;\n        }\n\n        return rawLayout as ActiveLayout;\n      } else {\n        return null;\n      }\n    }\n\n    public markLayoutCalibrated(formFactor: text.FormFactor) {\n      if(this.layoutStates[formFactor] != LayoutState.NOT_LOADED) {\n        this.layoutStates[formFactor] = LayoutState.CALIBRATED;\n      }\n    }\n\n    public getLayoutState(formFactor: text.FormFactor) {\n      return this.layoutStates[formFactor];\n    }\n  }\n}","/***\n   KeymanWeb 11.0\n   Copyright 2019 SIL International\n***/\nnamespace com.keyman {\n\n  class KeyMap {\n    [keycode: string]: number;\n  }\n\n  class BrowserKeyMaps {\n    FF:     KeyMap = new KeyMap();\n    Safari: KeyMap = new KeyMap();\n    Opera:  KeyMap = new KeyMap();\n\n    constructor() {\n      //ffie['k109'] = 189; // -    // These two number-pad VK rules are *not* correct for more recent FF! JMD 8/11/12\n      //ffie['k107'] = 187; // =    // FF 3.0 // I2062\n      this.FF['k61'] = 187;  // =   // FF 2.0\n      this.FF['k59'] = 186;  // ;\n    }\n  }\n\n  class LanguageKeyMaps {\n    [languageCode: string]: KeyMap;\n\n    // // Here are some old legacy definitions that were no longer referenced but are likely related:\n    // static _BaseLayoutEuro: {[code: string]: string} = {\n    //   'se': '\\u00a71234567890+´~~~QWERTYUIOP\\u00c5\\u00a8\\'~~~ASDFGHJKL\\u00d6\\u00c4~~~~~<ZXCVBNM,.-~~~~~ ',  // Swedish\n    //   'uk': '`1234567890-=~~~QWERTYUIOP[]#~~~ASDFGHJKL;\\'~~~~~\\\\ZXCVBNM,./~~~~~ ' // UK\n\n    constructor() {\n      /* I732 START - 13/03/2007 MCD: Swedish: Start mapping of keystroke to US keyboard #2 */\n      // Swedish key map\n      this['se'] = new KeyMap();\n      this['se']['k220'] =  192; // `\n      this['se']['k187'] =  189; // -\n      this['se']['k219'] =  187; // =\n      this['se']['k221'] =  219; // [\n      this['se']['k186'] =  221; // ]\n      this['se']['k191'] =  220; // \\\n      this['se']['k192'] =  186; // ;\n      this['se']['k189'] =  191; // /\n\n      this['uk'] = new KeyMap();  // I1299\n      this['uk']['k223'] =  192; // // ` U+00AC (logical not) =>  ` ~\n      this['uk']['k192'] =  222; // ' @  =>  ' \"\n      this['uk']['k222'] =  226; // # ~  => K_oE2     // I1504 - UK keyboard mixup #, \\\n      this['uk']['k220'] =  220; // \\ |  => \\ |       // I1504 - UK keyboard mixup #, \\\n    }\n  }\n\n  export class KeyMapping {\n    static readonly browserMap: BrowserKeyMaps = new BrowserKeyMaps();\n    static readonly languageMap: LanguageKeyMaps = new LanguageKeyMaps();\n\n    private static _usCharCodes: KeyMap[];\n\n    private constructor() {\n      // Do not construct this class.\n    }\n\n    private static _usCodeInit() {\n      var s0=new KeyMap(),s1=new KeyMap();\n\n      s0['k192'] = 96;\n      s0['k49'] = 49;\n      s0['k50'] = 50;\n      s0['k51'] = 51;\n      s0['k52'] = 52;\n      s0['k53'] = 53;\n      s0['k54'] = 54;\n      s0['k55'] = 55;\n      s0['k56'] = 56;\n      s0['k57'] = 57;\n      s0['k48'] = 48;\n      s0['k189'] = 45;\n      s0['k187'] = 61;\n      s0['k81'] = 113;\n      s0['k87'] = 119;\n      s0['k69'] = 101;\n      s0['k82'] = 114;\n      s0['k84'] = 116;\n      s0['k89'] = 121;\n      s0['k85'] = 117;\n      s0['k73'] = 105;\n      s0['k79'] = 111;\n      s0['k80'] = 112;\n      s0['k219'] = 91;\n      s0['k221'] = 93;\n      s0['k220'] = 92;\n      s0['k65'] = 97;\n      s0['k83'] = 115;\n      s0['k68'] = 100;\n      s0['k70'] = 102;\n      s0['k71'] = 103;\n      s0['k72'] = 104;\n      s0['k74'] = 106;\n      s0['k75'] = 107;\n      s0['k76'] = 108;\n      s0['k186'] = 59;\n      s0['k222'] = 39;\n      s0['k90'] = 122;\n      s0['k88'] = 120;\n      s0['k67'] = 99;\n      s0['k86'] = 118;\n      s0['k66'] = 98;\n      s0['k78'] = 110;\n      s0['k77'] = 109;\n      s0['k188'] = 44;\n      s0['k190'] = 46;\n      s0['k191'] = 47;\n\n      s1['k192'] = 126;\n      s1['k49'] = 33;\n      s1['k50'] = 64;\n      s1['k51'] = 35;\n      s1['k52'] = 36;\n      s1['k53'] = 37;\n      s1['k54'] = 94;\n      s1['k55'] = 38;\n      s1['k56'] = 42;\n      s1['k57'] = 40;\n      s1['k48'] = 41;\n      s1['k189'] = 95;\n      s1['k187'] = 43;\n      s1['k81'] = 81;\n      s1['k87'] = 87;\n      s1['k69'] = 69;\n      s1['k82'] = 82;\n      s1['k84'] = 84;\n      s1['k89'] = 89;\n      s1['k85'] = 85;\n      s1['k73'] = 73;\n      s1['k79'] = 79;\n      s1['k80'] = 80;\n      s1['k219'] = 123;\n      s1['k221'] = 125;\n      s1['k220'] = 124;\n      s1['k65'] = 65;\n      s1['k83'] = 83;\n      s1['k68'] = 68;\n      s1['k70'] = 70;\n      s1['k71'] = 71;\n      s1['k72'] = 72;\n      s1['k74'] = 74;\n      s1['k75'] = 75;\n      s1['k76'] = 76;\n      s1['k186'] = 58;\n      s1['k222'] = 34;\n      s1['k90'] = 90;\n      s1['k88'] = 88;\n      s1['k67'] = 67;\n      s1['k86'] = 86;\n      s1['k66'] = 66;\n      s1['k78'] = 78;\n      s1['k77'] = 77;\n      s1['k188'] = 60;\n      s1['k190'] = 62;\n      s1['k191'] = 63;\n\n      KeyMapping._usCharCodes = [s0,s1];\n    }\n\n    /**\n     * Function     _USKeyCodeToCharCode\n     * Scope        Private\n     * @param       {Event}     Levent      KMW event object\n     * @return      {number}                Character code \n     * Description Translate keyboard codes to standard US layout codes\n     */    \n    static _USKeyCodeToCharCode(Levent: com.keyman.text.KeyEvent) {\n      return KeyMapping.usCharCodes[Levent.Lmodifiers & 0x10 ? 1 : 0]['k'+Levent.Lcode];\n    };\n\n    public static get usCharCodes() {\n      if(!KeyMapping._usCharCodes) {\n        KeyMapping._usCodeInit();\n      }\n\n      return KeyMapping._usCharCodes;\n    }\n  }\n}","namespace com.keyman.utils {\n  /**\n   * Returns the base global object available to the current JS platform.\n   * - In browsers, returns `window`.\n   * - In WebWorkers, returns `self`.\n   * - In Node, returns `global`.\n   */\n  export function getGlobalObject(): typeof globalThis {\n    // Evergreen browsers have started defining 'globalThis'.  \n    // Refer to https://devblogs.microsoft.com/typescript/announcing-typescript-3-4/#type-checking-for-globalthis\n    // and its referenced polyfill.  Said polyfill is very complex, so we opt for this far leaner variant.\n    if(typeof globalThis != 'undefined') {\n      return globalThis;  // Not available in IE or older Edge versions\n      // @ts-ignore (TS will throw errors for whatever platform we're not compiling for.)\n    } else if(typeof window != 'undefined') {\n      // @ts-ignore\n      return window; // The browser-based classic\n      // @ts-ignore\n    } else if(typeof self != 'undefined') {\n      // @ts-ignore\n      return self; // WebWorker global\n    } else {\n      // Assumption - if neither of the above exist, we're in Node, for unit-testing.\n      // Node doesn't have as many methods and properties as the other two, but what \n      // matters for us is that it's the base global.\n      //\n      // Some other headless JS solutions use 'this' instead, but Node's enough for our needs.\n      // @ts-ignore\n      return (global as any) as typeof globalThis;\n    }\n  }\n}","// Includes KMW string extension declarations.\n/// <reference path=\"kmwstring.ts\" />\n// Establishes key-code definitions.\n/// <reference path=\"codes.ts\" />\n// Defines our generalized \"KeyEvent\" class.\n/// <reference path=\"keyEvent.ts\" />\n// Defines the RuleBehavior keyboard-processing return object.\n/// <reference path=\"ruleBehavior.ts\" />\n// Defines default key handling behaviors.\n/// <reference path=\"defaultOutput.ts\" />\n// Defines the keyboard wrapper object.\n/// <reference path=\"../keyboards/keyboard.ts\" />\n// Defines built-in keymapping.\n/// <reference path=\"keyMapping.ts\" />\n// Defines a core-compatible 'Device' analogue for use in keyEvent processing\n/// <reference path=\"engineDeviceSpec.ts\" />\n// Defines the getGlobalObject() utility method.\n/// <reference path=\"../utils/globalObject.ts\" />\n\nnamespace com.keyman.text {\n  export type BeepHandler = (outputTarget: OutputTarget) => void;\n  export type LogMessageHandler = (str: string) => void;\n\n  export interface VariableStoreSerializer {\n    loadStore(keyboardID: string, storeName: string): VariableStore;\n    saveStore(keyboardID: string, storeName: string, storeMap: VariableStore);\n  }\n\n  export interface ProcessorInitOptions {\n    baseLayout?: string;\n    variableStoreSerializer?: VariableStoreSerializer;\n  }\n\n  export class KeyboardProcessor {\n    public static readonly DEFAULT_OPTIONS: ProcessorInitOptions = {\n      baseLayout: 'us'\n    }\n\n    // Tracks the simulated value for supported state keys, allowing the OSK to mirror a physical keyboard for them.\n    // Using the exact keyCode name from the Codes definitions will allow for certain optimizations elsewhere in the code.\n    stateKeys = {\n      \"K_CAPS\":false,\n      \"K_NUMLOCK\":false,\n      \"K_SCROLL\":false\n    };\n\n    // Tracks the most recent modifier state information in order to quickly detect changes\n    // in keyboard state not otherwise captured by the hosting page in the browser.\n    // Needed for AltGr simulation.\n    modStateFlags: number = 0;\n\n    keyboardInterface: KeyboardInterface;\n\n    baseLayout: string;\n\n    // Callbacks for various feedback types\n    beepHandler?: BeepHandler;\n    warningLogger?: LogMessageHandler;\n    errorLogger?: LogMessageHandler;\n\n    constructor(options?: ProcessorInitOptions) {\n      if(!options) {\n        options = KeyboardProcessor.DEFAULT_OPTIONS;\n      }\n\n      this.baseLayout = options.baseLayout || KeyboardProcessor.DEFAULT_OPTIONS.baseLayout;\n      this.keyboardInterface = new KeyboardInterface(options.variableStoreSerializer);\n      this.installInterface();\n    }\n\n    private installInterface() {\n      // TODO:  replace 'window' with a (currently-unwritten) utility call that retrieves \n      //        the global object (whether browser, Node, WebWorker).\n      //\n      //        We must ensure that the keyboard can find the API functions at the expected place.\n      let globalThis = utils.getGlobalObject();\n      globalThis[KeyboardInterface.GLOBAL_NAME] = this.keyboardInterface;\n\n      // Ensure that the active keyboard is set on the keyboard interface object.\n      if(this.activeKeyboard) {\n        this.keyboardInterface.activeKeyboard = this.activeKeyboard;\n      }\n    }\n\n    public get activeKeyboard(): keyboards.Keyboard {\n      return this.keyboardInterface.activeKeyboard;\n    }\n\n    public set activeKeyboard(keyboard: keyboards.Keyboard) {\n      this.keyboardInterface.activeKeyboard = keyboard;\n\n      // All old deadkeys and keyboard-specific cache should immediately be invalidated\n      // on a keyboard change.\n      this.resetContext();\n    }\n\n    get layerStore(): MutableSystemStore {\n      return this.keyboardInterface.systemStores[KeyboardInterface.TSS_LAYER] as MutableSystemStore;\n    }\n\n    public get layerId(): string {\n      return this.layerStore.value;\n    }\n\n    // Note:  will trigger an 'event' callback designed to notify the OSK of layer changes.\n    public set layerId(value: string) {\n      this.layerStore.set(value);\n    }\n\n    /**\n     * Get the default RuleBehavior for the specified key, attempting to mimic standard browser defaults \n     * where and when appropriate.\n     *\n     * @param   {object}  Lkc  The pre-analyzed key event object\n     * @param   {boolean} usingOSK\n     * @return  {string}\n     */\n    defaultRuleBehavior(Lkc: KeyEvent): RuleBehavior {\n      let outputTarget = Lkc.Ltarg;\n      let preInput = Mock.from(outputTarget);\n      let ruleBehavior = new RuleBehavior();\n\n      let matched = false;\n      var char = '';\n      var special: EmulationKeystrokes;\n      if(Lkc.isSynthetic || outputTarget.isSynthetic) {\n        matched = true;  // All the conditions below result in matches until the final else, which restores the expected default\n                         // if no match occurs.\n\n        if(DefaultOutput.isCommand(Lkc)) {\n          // Note this in the rule behavior, return successfully.  We'll consider applying it later.\n          ruleBehavior.triggersDefaultCommand = true;\n\n          // We'd rather let the browser handle these keys, but we're using emulated keystrokes, forcing KMW\n          // to emulate default behavior here.\n        } else if((special = DefaultOutput.forSpecialEmulation(Lkc)) != null) { \n          switch(special) {\n            case EmulationKeystrokes.Backspace:\n              this.keyboardInterface.defaultBackspace(outputTarget);\n              break;\n            case EmulationKeystrokes.Enter:\n              outputTarget.handleNewlineAtCaret();\n              break;\n            case EmulationKeystrokes.Space:\n              this.keyboardInterface.output(0, outputTarget, ' ');\n              break;\n            // case '\\u007f': // K_DEL\n              // // For (possible) future implementation.\n              // // Would recommend (conceptually) equaling K_RIGHT + K_BKSP, the former of which would technically be a 'command'.\n            default:\n              // In case we extend the allowed set, but forget to implement its handling case above.\n              ruleBehavior.errorLog = \"Unexpected 'special emulation' character (\\\\u\" + (special as String).kmwCharCodeAt(0).toString(16) + \") went unhandled!\";\n          } \n        } else {\n          // Back to the standard default, pending normal matching.\n          matched = false;\n        }\n      }\n\n      let isMnemonic = this.activeKeyboard && this.activeKeyboard.isMnemonic;\n\n      if(!matched) {\n        if((char = DefaultOutput.forAny(Lkc, isMnemonic)) != null) {\n          special = DefaultOutput.forSpecialEmulation(Lkc)\n          if(special == EmulationKeystrokes.Backspace) {\n            // A browser's default backspace may fail to delete both parts of an SMP character.\n            this.keyboardInterface.defaultBackspace(Lkc.Ltarg);\n          } else if(special || DefaultOutput.isCommand(Lkc)) { // Filters out 'commands' like TAB.\n            // We only do the \"for special emulation\" cases under the condition above... aside from backspace\n            // Let the browser handle those.\n            return null;\n          } else {\n            this.keyboardInterface.output(0, outputTarget, char);\n          }\n        } else {\n          // No match, no default RuleBehavior.\n          return null;\n        }\n      }\n\n      // Shortcut things immediately if there were issues generating this rule behavior.\n      if(ruleBehavior.errorLog) {\n        return ruleBehavior;\n      }\n\n      let transcription = outputTarget.buildTranscriptionFrom(preInput, Lkc);\n      ruleBehavior.transcription = transcription;\n\n      return ruleBehavior;\n    }\n\n    setSyntheticEventDefaults(Lkc: text.KeyEvent) {\n      // Set the flags for the state keys.\n      Lkc.Lstates |= this.stateKeys['K_CAPS']    ? Codes.modifierCodes['CAPS'] : Codes.modifierCodes['NO_CAPS'];\n      Lkc.Lstates |= this.stateKeys['K_NUMLOCK'] ? Codes.modifierCodes['NUM_LOCK'] : Codes.modifierCodes['NO_NUM_LOCK'];\n      Lkc.Lstates |= this.stateKeys['K_SCROLL']  ? Codes.modifierCodes['SCROLL_LOCK'] : Codes.modifierCodes['NO_SCROLL_LOCK'];\n\n      // Set LisVirtualKey to false to ensure that nomatch rule does fire for U_xxxx keys\n      if(Lkc.kName.substr(0,2) == 'U_') {\n        Lkc.LisVirtualKey=false;\n      }\n\n      // Get code for non-physical keys (T_KOKAI, U_05AB etc)\n      if(typeof Lkc.Lcode == 'undefined') {\n        Lkc.Lcode = this.getVKDictionaryCode(Lkc.kName);// Updated for Build 347\n        if(!Lkc.Lcode) {\n          // Special case for U_xxxx keys. This vk code will never be used\n          // in a keyboard, so we use this to ensure that keystroke processing\n          // occurs for the key.\n          Lkc.Lcode = 1; \n        }\n      }\n\n      // Handles modifier states when the OSK is emulating rightalt through the leftctrl-leftalt layer.\n      if((Lkc.Lmodifiers & Codes.modifierBitmasks['ALT_GR_SIM']) == Codes.modifierBitmasks['ALT_GR_SIM'] && this.activeKeyboard.emulatesAltGr) {\n        Lkc.Lmodifiers &= ~Codes.modifierBitmasks['ALT_GR_SIM'];\n        Lkc.Lmodifiers |= Codes.modifierCodes['RALT'];\n      }\n    }\n\n    processKeystroke(keyEvent: KeyEvent, outputTarget: OutputTarget): RuleBehavior {\n      var matchBehavior: RuleBehavior;\n\n      // Pass this key code and state to the keyboard program\n      if(this.activeKeyboard && keyEvent.Lcode != 0) {\n        /*\n         * The `this.installInterface()` call is insurance against something I've seen in unit tests when things break a bit.\n         *\n         * Currently, when a KMW shutdown doesn't go through properly or completely, sometimes we end up with parallel\n         * versions of KMW running, and an old, partially-shutdown one will \"snipe\" a command meant for the most-recent \n         * one's test. So, installing here ensures that the active Processor has its matching KeyboardInterface ready, \n         * even should that occur.\n         */\n        this.installInterface();\n        matchBehavior = this.keyboardInterface.processKeystroke(outputTarget, keyEvent);\n      }\n\n      if(!matchBehavior) {\n        // Restore the virtual key code if a mnemonic keyboard is being used\n        // If no vkCode value was stored, maintain the original Lcode value.\n        keyEvent.Lcode=keyEvent.vkCode || keyEvent.Lcode;\n\n        // Handle unmapped keys, including special keys\n        // The following is physical layout dependent, so should be avoided if possible.  All keys should be mapped.\n        this.keyboardInterface.activeTargetOutput = outputTarget;\n\n        // Match against the 'default keyboard' - rules to mimic the default string output when typing in a browser.\n        // Many keyboards rely upon these 'implied rules'.\n        matchBehavior = this.defaultRuleBehavior(keyEvent);\n\n        this.keyboardInterface.activeTargetOutput = null;\n      }\n\n      return matchBehavior;\n    }\n\n    // FIXME:  makes some bad assumptions.\n    static setMnemonicCode(Lkc: KeyEvent, shifted: boolean, capsActive: boolean) {\n      // K_SPACE is not handled by defaultKeyOutput for physical keystrokes unless using touch-aliased elements.\n      // It's also a \"exception required, March 2013\" for clickKey, so at least they both have this requirement.\n      if(Lkc.Lcode != Codes.keyCodes['K_SPACE']) {\n        // So long as the key name isn't prefixed with 'U_', we'll get a default mapping based on the Lcode value.\n        // We need to determine the mnemonic base character - for example, SHIFT + K_PERIOD needs to map to '>'.\n        let mappingEvent: KeyEvent = new KeyEvent();\n        for(var key in Lkc) {\n          mappingEvent[key] = Lkc[key];\n        }\n        \n        // To facilitate storing relevant commands, we should probably reverse-lookup\n        // the actual keyname instead.\n        mappingEvent.kName = 'K_xxxx';\n        mappingEvent.Ltarg = new Mock(); // helps prevent breakage for mnemonics.\n        mappingEvent.Lmodifiers = (shifted ? 0x10 : 0);  // mnemonic lookups only exist for default & shift layers.\n        var mappedChar: string = DefaultOutput.forAny(mappingEvent, true);\n        \n        /* First, save a backup of the original code.  This one won't needlessly trigger keyboard\n         * rules, but allows us to replicate/emulate commands after rule processing if needed.\n         * (Like backspaces)\n         */\n        Lkc.vkCode = Lkc.Lcode;\n        if(mappedChar) {\n          // Will return 96 for 'a', which is a keycode corresponding to Codes.keyCodes('K_NP1') - a numpad key.\n          // That stated, we're in mnemonic mode - this keyboard's rules are based on the char codes.\n          Lkc.Lcode = mappedChar.charCodeAt(0);\n        } else {\n          // Don't let command-type keys (like K_DEL, which will output '.' otherwise!)\n          // trigger keyboard rules.\n          delete Lkc.Lcode;\n        }\n      }\n\n      if(capsActive) {\n        // TODO:  Needs fixing - does not properly mirror physical keystrokes, as Lcode range 96-111 corresponds\n        // to numpad keys!  (Physical keyboard section has its own issues here.)\n        if((Lkc.Lcode >= 65 && Lkc.Lcode <= 90) /* 'A' - 'Z' */ || (Lkc.Lcode >= 97 && Lkc.Lcode <= 122) /* 'a' - 'z' */) {\n          Lkc.Lmodifiers ^= 0x10;  // Flip the 'shifted' bit, so it'll act as the opposite key.\n          Lkc.Lcode ^= 0x20; // Flips the 'upper' vs 'lower' bit for the base 'a'-'z' ASCII alphabetics.\n        }\n      }\n    }\n\n    /**\n     * Get modifier key state from layer id\n     *\n     * @param       {string}      layerId       layer id (e.g. ctrlshift)\n     * @return      {number}                    modifier key state (desktop keyboards)\n     */\n    static getModifierState(layerId: string): number {\n      var modifier=0;\n      if(layerId.indexOf('shift') >= 0) {\n        modifier |= Codes.modifierCodes['SHIFT'];\n      }\n\n      // The chiral checks must not be directly exclusive due each other to visual OSK feedback.\n      var ctrlMatched=false;\n      if(layerId.indexOf('leftctrl') >= 0) {\n        modifier |= Codes.modifierCodes['LCTRL'];\n        ctrlMatched=true;\n      } \n      if(layerId.indexOf('rightctrl') >= 0) {\n        modifier |= Codes.modifierCodes['RCTRL'];\n        ctrlMatched=true;\n      } \n      if(layerId.indexOf('ctrl')  >= 0 && !ctrlMatched) {\n        modifier |= Codes.modifierCodes['CTRL'];\n      }\n\n      var altMatched=false;\n      if(layerId.indexOf('leftalt') >= 0) {\n        modifier |= Codes.modifierCodes['LALT'];\n        altMatched=true;\n      } \n      if(layerId.indexOf('rightalt') >= 0) {\n        modifier |= Codes.modifierCodes['RALT'];\n        altMatched=true;\n      } \n      if(layerId.indexOf('alt')  >= 0 && !altMatched) {\n        modifier |= Codes.modifierCodes['ALT'];\n      }\n\n      return modifier;\n    }\n\n    /**\n     * @summary Look up a custom virtual key code in the virtual key code dictionary KVKD.  On first run, will build the dictionary.\n     *\n     * `VKDictionary` is constructed from the keyboard's `KVKD` member. This list is constructed \n     * at compile-time and is a list of 'additional' virtual key codes, starting at 256 (i.e. \n     * outside the range of standard virtual key codes). These additional codes are both \n     * `[T_xxx]` and `[U_xxxx]` custom key codes from the Keyman keyboard language. However, \n     * `[U_xxxx]` keys only generate an entry in `KVKD` if there is a corresponding rule that \n     * is associated with them in the keyboard rules. If the `[U_xxxx]` key code is only \n     * referenced as the id of a key in the touch layout, then it does not get an entry in \n     * the `KVKD` property.\n     *\n     * @private\n     * @param       {string}      keyName   custom virtual key code to lookup in the dictionary\n     * @return      {number}                key code > 255 on success, or 0 if not found\n     */\n    getVKDictionaryCode(keyName: string) {\n      var activeKeyboard = this.activeKeyboard;\n      if(!activeKeyboard.scriptObject['VKDictionary']) {\n        var a=[];\n        if(typeof activeKeyboard.scriptObject['KVKD'] == 'string') {\n          // Build the VK dictionary\n          // TODO: Move the dictionary build into the compiler -- so compiler generates code such as following.  \n          // Makes the VKDictionary member unnecessary.\n          //       this.KVKD={\"K_ABC\":256,\"K_DEF\":257,...};\n          var s=activeKeyboard.scriptObject['KVKD'].split(' ');\n          for(var i=0; i<s.length; i++) {\n            a[s[i].toUpperCase()]=i+256; // We force upper-case since virtual keys should be case-insensitive.\n          }\n        }\n        activeKeyboard.scriptObject['VKDictionary']=a;\n      }\n\n      var res=activeKeyboard.scriptObject['VKDictionary'][keyName.toUpperCase()];\n      return res ? res : 0;\n    }\n\n    /**\n     * Function     _UpdateVKShift\n     * Scope        Private\n     * @param       {Object}            e     OSK event\n     * @param       {number}            v     keyboard shift state\n     * @param       {(boolean|number)}  d     set (1) or clear(0) shift state bits\n     * @return      {boolean}                 Always true\n     * Description  Updates the current shift state within KMW, updating the OSK's visualization thereof.\n     */\n    _UpdateVKShift(e: KeyEvent, v: number, d: boolean|number): boolean {\n      var keyShiftState=0, lockStates=0, i;\n\n      var lockNames  = ['CAPS', 'NUM_LOCK', 'SCROLL_LOCK'];\n      var lockKeys   = ['K_CAPS', 'K_NUMLOCK', 'K_SCROLL'];\n\n      if(!this.activeKeyboard) {\n        return true;\n      }\n\n      if(e) {\n        // read shift states from Pevent\n        keyShiftState = e.Lmodifiers;\n        lockStates = e.Lstates;\n\n        // Are we simulating AltGr?  If it's a simulation and not real, time to un-simulate for the OSK.\n        if(this.activeKeyboard.isChiral && (this.activeKeyboard.emulatesAltGr) && \n            (this.modStateFlags & Codes.modifierBitmasks['ALT_GR_SIM']) == Codes.modifierBitmasks['ALT_GR_SIM']) {\n          keyShiftState |= Codes.modifierBitmasks['ALT_GR_SIM'];\n          keyShiftState &= ~Codes.modifierCodes['RALT'];\n        }\n\n        for(i=0; i < lockNames.length; i++) {\n          if(lockStates & Codes.stateBitmasks[lockNames[i]]) {\n            this.stateKeys[lockKeys[i]] = lockStates & Codes.modifierCodes[lockNames[i]];\n          }\n        }\n      } else if(d) {\n        keyShiftState |= v;\n\n        for(i=0; i < lockNames.length; i++) {\n          if(v & Codes.stateBitmasks[lockNames[i]]) {\n            this.stateKeys[lockKeys[i]] = true;\n          }\n        }\n      } else {\n        keyShiftState &= ~v;\n\n        for(i=0; i < lockNames.length; i++) {\n          if(v & Codes.stateBitmasks[lockNames[i]]) {\n            this.stateKeys[lockKeys[i]] = false;\n          }\n        }\n      }\n\n      this.layerId = this.getLayerId(keyShiftState);\n      return true;\n    }\n\n    getLayerId(modifier: number): string {\n      return keyboards.Layouts.getLayerId(modifier);\n    }\n\n    /**\n     * Select the OSK's next keyboard layer based upon layer switching keys as a default\n     * The next layer will be determined from the key name unless otherwise specifed\n     *\n     *  @param  {string}                    keyName     key identifier\n     *  @param  {number|string|undefined}   nextLayerIn optional next layer identifier\n     *  @return {boolean}                               return true if keyboard layer changed\n     */\n    selectLayer(keyEvent: KeyEvent, fromNameOnly: boolean = false): boolean {\n      let keyName = keyEvent.kName;\n      var nextLayer = fromNameOnly ? null : keyEvent.kNextLayer;\n      var isChiral = this.activeKeyboard && this.activeKeyboard.isChiral;\n\n      // Layer must be identified by name, not number (27/08/2015)\n      if(typeof nextLayer == 'number') {\n        nextLayer = this.getLayerId(nextLayer * 0x10);\n      }\n\n      // Identify next layer, if required by key\n      if(!nextLayer) {\n        switch(keyName) {\n          case 'K_LSHIFT':\n          case 'K_RSHIFT':\n          case 'K_SHIFT':\n            nextLayer = 'shift';\n            break;\n          case 'K_LCONTROL':\n          case 'K_LCTRL':\n            if(isChiral) {\n              nextLayer = 'leftctrl';\n              break;\n            }\n          case 'K_RCONTROL':\n          case 'K_RCTRL':\n            if(isChiral) {\n              nextLayer = 'rightctrl';\n              break;\n            }\n          case 'K_CTRL':\n            nextLayer = 'ctrl';\n            break;\n          case 'K_LMENU':\n          case 'K_LALT':\n            if(isChiral) {\n              nextLayer = 'leftalt';\n              break;\n            }\n          case 'K_RMENU':\n          case 'K_RALT':\n            if(isChiral) {\n              nextLayer = 'rightalt';\n              break;\n            }\n          case 'K_ALT':\n            nextLayer = 'alt';\n            break;\n          case 'K_ALTGR':\n            if(isChiral) {\n              nextLayer = 'leftctrl-rightalt';\n            } else {\n              nextLayer = 'ctrl-alt';\n            }\n            break;\n          case 'K_CURRENCIES':\n          case 'K_NUMERALS':\n          case 'K_SHIFTED':\n          case 'K_UPPER':\n          case 'K_LOWER':\n          case 'K_SYMBOLS':\n            nextLayer = 'default';\n            break;\n        }\n      }\n\n      // If no key corresponding to a layer transition is pressed, maintain the current layer.\n      if(!nextLayer) {\n        return false;\n      }\n\n      // Change layer and refresh OSK\n      this.updateLayer(keyEvent, nextLayer);\n\n      return true;\n    }\n\n    /**\n     * Sets the new layer id, allowing for toggling shift/ctrl/alt while preserving the remainder\n     * of the modifiers represented by the current layer id (where applicable)\n     *\n     * @param       {string}      id      layer id (e.g. ctrlshift)\n     */\n    updateLayer(keyEvent: KeyEvent, id: string) {\n      let activeLayer = this.layerId;\n      var s = activeLayer;\n\n      // Do not change layer unless needed (27/08/2015)\n      if(id == activeLayer && keyEvent.device.formFactor != FormFactor.Desktop) {\n        return false;\n      }\n\n      var idx=id;\n      var i;\n\n      if(keyEvent.device.formFactor == FormFactor.Desktop) {\n        // Need to test if target layer is a standard layer (based on the plain 'default')\n        var replacements= ['leftctrl', 'rightctrl', 'ctrl', 'leftalt', 'rightalt', 'alt', 'shift'];\n\n        for(i=0; i < replacements.length; i++) {\n          // Don't forget to remove the kebab-case hyphens!\n          idx=idx.replace(replacements[i] + '-', '');\n          idx=idx.replace(replacements[i],'');\n        }\n\n        // If we are presently on the default layer, drop the 'default' and go straight to the shifted mode.\n        // If on a common symbolic layer, drop out of symbolic mode and go straight to the shifted mode.\n        if(activeLayer == 'default' || activeLayer == 'numeric' || activeLayer == 'symbol' || activeLayer == 'currency' || idx != '') {\n          s = id;\n        }\n        // Otherwise, we are based upon a layer that accepts modifier variations.\n        // Modify the layer according to the current state and key pressed.\n        //\n        // TODO:  Consider:  should this ever be allowed for a base layer other than 'default'?  If not,\n        // if(idx == '') with accompanying if-else structural shift would be a far better test here.\n        else {\n          // Save our current modifier state.\n          var modifier=KeyboardProcessor.getModifierState(s);\n\n          // Strip down to the base modifiable layer.\n          for(i=0; i < replacements.length; i++) {\n            // Don't forget to remove the kebab-case hyphens!\n            s=s.replace(replacements[i] + '-', '');\n            s=s.replace(replacements[i],'');\n          }\n\n          // Toggle the modifier represented by our input argument.\n          switch(id) {\n            case 'shift':\n              modifier ^= Codes.modifierCodes['SHIFT'];\n              break;\n            case 'leftctrl':\n              modifier ^= Codes.modifierCodes['LCTRL'];\n              break;\n            case 'rightctrl':\n              modifier ^= Codes.modifierCodes['RCTRL'];\n              break;\n            case 'ctrl':\n              modifier ^= Codes.modifierCodes['CTRL'];\n              break;\n            case 'leftalt':\n              modifier ^= Codes.modifierCodes['LALT'];\n              break;\n            case 'rightalt':\n              modifier ^= Codes.modifierCodes['RALT'];\n              break;\n            case 'alt':\n              modifier ^= Codes.modifierCodes['ALT'];\n              break;\n            default:\n              s = id;\n          }\n\n          // Combine our base modifiable layer and attach the new modifier variation info to obtain our destination layer.\n          if(s != 'default') {\n            if(s == '') {\n              s = this.getLayerId(modifier);\n            } else {\n              s = this.getLayerId(modifier) + '-' + s;\n            }\n          }\n        }\n        \n        if(s == '') {\n          s = 'default';\n        }\n      } else {\n        // Mobile form-factor.  Either the layout is specified by a keyboard developer with direct layer name references\n        // or all layers are accessed via subkey of a single layer-shifting key - no need for modifier-combining logic.\n        s = id;\n      }\n\n      let layout = this.activeKeyboard.layout(keyEvent.device.formFactor);\n      if(layout.getLayer(s)) {\n        this.layerId = s;\n      } else {\n        this.layerId = 'default';\n      }\n    }\n\n    // Returns true if the key event is a modifier press, allowing keyPress to return selectively\n    // in those cases.\n    doModifierPress(Levent: KeyEvent, isKeyDown: boolean): boolean {\n      let outputTarget = Levent.Ltarg;\n\n      if(!this.activeKeyboard) {\n        return false;\n      }\n\n      switch(Levent.Lcode) {\n        case 8: \n          outputTarget.deadkeys().clear();\n          break; // I3318 (always clear deadkeys after backspace) \n        case 16: //\"K_SHIFT\":16,\"K_CONTROL\":17,\"K_ALT\":18\n        case 17: \n        case 18: \n        case 20: //\"K_CAPS\":20, \"K_NUMLOCK\":144,\"K_SCROLL\":145\n        case 144:\n        case 145:\n          // For eventual integration - we bypass an OSK update for physical keystrokes when in touch mode.\n          this.activeKeyboard.notify(Levent.Lcode, outputTarget, isKeyDown ? 1 : 0); \n          if(!Levent.device.touchable) {\n            return this._UpdateVKShift(Levent, Levent.Lcode-15, 1); // I2187\n          } else {\n            return true;\n          }\n      }\n\n      if(Levent.LmodifierChange) {\n        this.activeKeyboard.notify(0, outputTarget, 1); \n        this._UpdateVKShift(Levent, 0, 1);\n      }\n\n      // No modifier keypresses detected.\n      return false;\n    }\n\n    resetContext() {\n      this.layerId = 'default';\n\n      this.keyboardInterface.resetContextCache();\n      this._UpdateVKShift(null, 15, 0);\n    };\n\n    setNumericLayer(device: EngineDeviceSpec) {\n      let layout = this.activeKeyboard.layout(device.formFactor);\n      if(layout.getLayer('numeric')) {\n        this.layerId = 'numeric';\n      }\n    };\n  }\n}\n\n(function () {\n  let ns = com.keyman.text;\n\n  // Let LMLayer be available both in the browser and in Node.\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = ns.KeyboardProcessor;\n    //@ts-ignore\n    ns.KeyboardProcessor.com = com; // Export the root namespace, while we're at it - just in case.\n  }\n}());","/*!\n * https://github.com/paulmillr/es6-shim\n * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n *   and contributors,  MIT License\n * es6-shim: v0.35.4\n * see https://github.com/paulmillr/es6-shim/blob/0.35.3/LICENSE\n * Details and documentation:\n * https://github.com/paulmillr/es6-shim/\n */\n(function(e,t){if(typeof define===\"function\"&&define.amd){define(t)}else if(typeof exports===\"object\"){module.exports=t()}else{e.returnExports=t()}})(this,function(){\"use strict\";var e=Function.call.bind(Function.apply);var t=Function.call.bind(Function.call);var r=Array.isArray;var n=Object.keys;var o=function notThunker(t){return function notThunk(){return!e(t,this,arguments)}};var i=function(e){try{e();return false}catch(t){return true}};var a=function valueOrFalseIfThrows(e){try{return e()}catch(t){return false}};var u=o(i);var f=function(){return!i(function(){return Object.defineProperty({},\"x\",{get:function(){}})})};var s=!!Object.defineProperty&&f();var c=function foo(){}.name===\"foo\";var l=Function.call.bind(Array.prototype.forEach);var p=Function.call.bind(Array.prototype.reduce);var v=Function.call.bind(Array.prototype.filter);var y=Function.call.bind(Array.prototype.some);var h=function(e,t,r,n){if(!n&&t in e){return}if(s){Object.defineProperty(e,t,{configurable:true,enumerable:false,writable:true,value:r})}else{e[t]=r}};var b=function(e,t,r){l(n(t),function(n){var o=t[n];h(e,n,o,!!r)})};var g=Function.call.bind(Object.prototype.toString);var d=typeof/abc/===\"function\"?function IsCallableSlow(e){return typeof e===\"function\"&&g(e)===\"[object Function]\"}:function IsCallableFast(e){return typeof e===\"function\"};var m={getter:function(e,t,r){if(!s){throw new TypeError(\"getters require true ES5 support\")}Object.defineProperty(e,t,{configurable:true,enumerable:false,get:r})},proxy:function(e,t,r){if(!s){throw new TypeError(\"getters require true ES5 support\")}var n=Object.getOwnPropertyDescriptor(e,t);Object.defineProperty(r,t,{configurable:n.configurable,enumerable:n.enumerable,get:function getKey(){return e[t]},set:function setKey(r){e[t]=r}})},redefine:function(e,t,r){if(s){var n=Object.getOwnPropertyDescriptor(e,t);n.value=r;Object.defineProperty(e,t,n)}else{e[t]=r}},defineByDescriptor:function(e,t,r){if(s){Object.defineProperty(e,t,r)}else if(\"value\"in r){e[t]=r.value}},preserveToString:function(e,t){if(t&&d(t.toString)){h(e,\"toString\",t.toString.bind(t),true)}}};var O=Object.create||function(e,t){var r=function Prototype(){};r.prototype=e;var o=new r;if(typeof t!==\"undefined\"){n(t).forEach(function(e){m.defineByDescriptor(o,e,t[e])})}return o};var w=function(e,t){if(!Object.setPrototypeOf){return false}return a(function(){var r=function Subclass(t){var r=new e(t);Object.setPrototypeOf(r,Subclass.prototype);return r};Object.setPrototypeOf(r,e);r.prototype=O(e.prototype,{constructor:{value:r}});return t(r)})};var j=function(){if(typeof self!==\"undefined\"){return self}if(typeof window!==\"undefined\"){return window}if(typeof global!==\"undefined\"){return global}throw new Error(\"unable to locate global object\")};var S=j();var T=S.isFinite;var I=Function.call.bind(String.prototype.indexOf);var E=Function.apply.bind(Array.prototype.indexOf);var P=Function.call.bind(Array.prototype.concat);var C=Function.call.bind(String.prototype.slice);var M=Function.call.bind(Array.prototype.push);var x=Function.apply.bind(Array.prototype.push);var N=Function.call.bind(Array.prototype.shift);var A=Math.max;var R=Math.min;var _=Math.floor;var k=Math.abs;var L=Math.exp;var F=Math.log;var D=Math.sqrt;var z=Function.call.bind(Object.prototype.hasOwnProperty);var q;var W=function(){};var G=S.Map;var H=G&&G.prototype[\"delete\"];var V=G&&G.prototype.get;var B=G&&G.prototype.has;var U=G&&G.prototype.set;var $=S.Symbol||{};var J=$.species||\"@@species\";var X=Number.isNaN||function isNaN(e){return e!==e};var K=Number.isFinite||function isFinite(e){return typeof e===\"number\"&&T(e)};var Z=d(Math.sign)?Math.sign:function sign(e){var t=Number(e);if(t===0){return t}if(X(t)){return t}return t<0?-1:1};var Y=function log1p(e){var t=Number(e);if(t<-1||X(t)){return NaN}if(t===0||t===Infinity){return t}if(t===-1){return-Infinity}return 1+t-1===0?t:t*(F(1+t)/(1+t-1))};var Q=function isArguments(e){return g(e)===\"[object Arguments]\"};var ee=function isArguments(e){return e!==null&&typeof e===\"object\"&&typeof e.length===\"number\"&&e.length>=0&&g(e)!==\"[object Array]\"&&g(e.callee)===\"[object Function]\"};var te=Q(arguments)?Q:ee;var re={primitive:function(e){return e===null||typeof e!==\"function\"&&typeof e!==\"object\"},string:function(e){return g(e)===\"[object String]\"},regex:function(e){return g(e)===\"[object RegExp]\"},symbol:function(e){return typeof S.Symbol===\"function\"&&typeof e===\"symbol\"}};var ne=function overrideNative(e,t,r){var n=e[t];h(e,t,r,true);m.preserveToString(e[t],n)};var oe=typeof $===\"function\"&&typeof $[\"for\"]===\"function\"&&re.symbol($());var ie=re.symbol($.iterator)?$.iterator:\"_es6-shim iterator_\";if(S.Set&&typeof(new S.Set)[\"@@iterator\"]===\"function\"){ie=\"@@iterator\"}if(!S.Reflect){h(S,\"Reflect\",{},true)}var ae=S.Reflect;var ue=String;var fe=typeof document===\"undefined\"||!document?null:document.all;var se=fe==null?function isNullOrUndefined(e){return e==null}:function isNullOrUndefinedAndNotDocumentAll(e){return e==null&&e!==fe};var ce={Call:function Call(t,r){var n=arguments.length>2?arguments[2]:[];if(!ce.IsCallable(t)){throw new TypeError(t+\" is not a function\")}return e(t,r,n)},RequireObjectCoercible:function(e,t){if(se(e)){throw new TypeError(t||\"Cannot call method on \"+e)}return e},TypeIsObject:function(e){if(e===void 0||e===null||e===true||e===false){return false}return typeof e===\"function\"||typeof e===\"object\"||e===fe},ToObject:function(e,t){return Object(ce.RequireObjectCoercible(e,t))},IsCallable:d,IsConstructor:function(e){return ce.IsCallable(e)},ToInt32:function(e){return ce.ToNumber(e)>>0},ToUint32:function(e){return ce.ToNumber(e)>>>0},ToNumber:function(e){if(g(e)===\"[object Symbol]\"){throw new TypeError(\"Cannot convert a Symbol value to a number\")}return+e},ToInteger:function(e){var t=ce.ToNumber(e);if(X(t)){return 0}if(t===0||!K(t)){return t}return(t>0?1:-1)*_(k(t))},ToLength:function(e){var t=ce.ToInteger(e);if(t<=0){return 0}if(t>Number.MAX_SAFE_INTEGER){return Number.MAX_SAFE_INTEGER}return t},SameValue:function(e,t){if(e===t){if(e===0){return 1/e===1/t}return true}return X(e)&&X(t)},SameValueZero:function(e,t){return e===t||X(e)&&X(t)},IsIterable:function(e){return ce.TypeIsObject(e)&&(typeof e[ie]!==\"undefined\"||te(e))},GetIterator:function(e){if(te(e)){return new q(e,\"value\")}var t=ce.GetMethod(e,ie);if(!ce.IsCallable(t)){throw new TypeError(\"value is not an iterable\")}var r=ce.Call(t,e);if(!ce.TypeIsObject(r)){throw new TypeError(\"bad iterator\")}return r},GetMethod:function(e,t){var r=ce.ToObject(e)[t];if(se(r)){return void 0}if(!ce.IsCallable(r)){throw new TypeError(\"Method not callable: \"+t)}return r},IteratorComplete:function(e){return!!e.done},IteratorClose:function(e,t){var r=ce.GetMethod(e,\"return\");if(r===void 0){return}var n,o;try{n=ce.Call(r,e)}catch(i){o=i}if(t){return}if(o){throw o}if(!ce.TypeIsObject(n)){throw new TypeError(\"Iterator's return method returned a non-object.\")}},IteratorNext:function(e){var t=arguments.length>1?e.next(arguments[1]):e.next();if(!ce.TypeIsObject(t)){throw new TypeError(\"bad iterator\")}return t},IteratorStep:function(e){var t=ce.IteratorNext(e);var r=ce.IteratorComplete(t);return r?false:t},Construct:function(e,t,r,n){var o=typeof r===\"undefined\"?e:r;if(!n&&ae.construct){return ae.construct(e,t,o)}var i=o.prototype;if(!ce.TypeIsObject(i)){i=Object.prototype}var a=O(i);var u=ce.Call(e,a,t);return ce.TypeIsObject(u)?u:a},SpeciesConstructor:function(e,t){var r=e.constructor;if(r===void 0){return t}if(!ce.TypeIsObject(r)){throw new TypeError(\"Bad constructor\")}var n=r[J];if(se(n)){return t}if(!ce.IsConstructor(n)){throw new TypeError(\"Bad @@species\")}return n},CreateHTML:function(e,t,r,n){var o=ce.ToString(e);var i=\"<\"+t;if(r!==\"\"){var a=ce.ToString(n);var u=a.replace(/\"/g,\"&quot;\");i+=\" \"+r+'=\"'+u+'\"'}var f=i+\">\";var s=f+o;return s+\"</\"+t+\">\"},IsRegExp:function IsRegExp(e){if(!ce.TypeIsObject(e)){return false}var t=e[$.match];if(typeof t!==\"undefined\"){return!!t}return re.regex(e)},ToString:function ToString(e){return ue(e)}};if(s&&oe){var le=function defineWellKnownSymbol(e){if(re.symbol($[e])){return $[e]}var t=$[\"for\"](\"Symbol.\"+e);Object.defineProperty($,e,{configurable:false,enumerable:false,writable:false,value:t});return t};if(!re.symbol($.search)){var pe=le(\"search\");var ve=String.prototype.search;h(RegExp.prototype,pe,function search(e){return ce.Call(ve,e,[this])});var ye=function search(e){var t=ce.RequireObjectCoercible(this);if(!se(e)){var r=ce.GetMethod(e,pe);if(typeof r!==\"undefined\"){return ce.Call(r,e,[t])}}return ce.Call(ve,t,[ce.ToString(e)])};ne(String.prototype,\"search\",ye)}if(!re.symbol($.replace)){var he=le(\"replace\");var be=String.prototype.replace;h(RegExp.prototype,he,function replace(e,t){return ce.Call(be,e,[this,t])});var ge=function replace(e,t){var r=ce.RequireObjectCoercible(this);if(!se(e)){var n=ce.GetMethod(e,he);if(typeof n!==\"undefined\"){return ce.Call(n,e,[r,t])}}return ce.Call(be,r,[ce.ToString(e),t])};ne(String.prototype,\"replace\",ge)}if(!re.symbol($.split)){var de=le(\"split\");var me=String.prototype.split;h(RegExp.prototype,de,function split(e,t){return ce.Call(me,e,[this,t])});var Oe=function split(e,t){var r=ce.RequireObjectCoercible(this);if(!se(e)){var n=ce.GetMethod(e,de);if(typeof n!==\"undefined\"){return ce.Call(n,e,[r,t])}}return ce.Call(me,r,[ce.ToString(e),t])};ne(String.prototype,\"split\",Oe)}var we=re.symbol($.match);var je=we&&function(){var e={};e[$.match]=function(){return 42};return\"a\".match(e)!==42}();if(!we||je){var Se=le(\"match\");var Te=String.prototype.match;h(RegExp.prototype,Se,function match(e){return ce.Call(Te,e,[this])});var Ie=function match(e){var t=ce.RequireObjectCoercible(this);if(!se(e)){var r=ce.GetMethod(e,Se);if(typeof r!==\"undefined\"){return ce.Call(r,e,[t])}}return ce.Call(Te,t,[ce.ToString(e)])};ne(String.prototype,\"match\",Ie)}}var Ee=function wrapConstructor(e,t,r){m.preserveToString(t,e);if(Object.setPrototypeOf){Object.setPrototypeOf(e,t)}if(s){l(Object.getOwnPropertyNames(e),function(n){if(n in W||r[n]){return}m.proxy(e,n,t)})}else{l(Object.keys(e),function(n){if(n in W||r[n]){return}t[n]=e[n]})}t.prototype=e.prototype;m.redefine(e.prototype,\"constructor\",t)};var Pe=function(){return this};var Ce=function(e){if(s&&!z(e,J)){m.getter(e,J,Pe)}};var Me=function(e,t){var r=t||function iterator(){return this};h(e,ie,r);if(!e[ie]&&re.symbol(ie)){e[ie]=r}};var xe=function createDataProperty(e,t,r){if(s){Object.defineProperty(e,t,{configurable:true,enumerable:true,writable:true,value:r})}else{e[t]=r}};var Ne=function createDataPropertyOrThrow(e,t,r){xe(e,t,r);if(!ce.SameValue(e[t],r)){throw new TypeError(\"property is nonconfigurable\")}};var Ae=function(e,t,r,n){if(!ce.TypeIsObject(e)){throw new TypeError(\"Constructor requires `new`: \"+t.name)}var o=t.prototype;if(!ce.TypeIsObject(o)){o=r}var i=O(o);for(var a in n){if(z(n,a)){var u=n[a];h(i,a,u,true)}}return i};if(String.fromCodePoint&&String.fromCodePoint.length!==1){var Re=String.fromCodePoint;ne(String,\"fromCodePoint\",function fromCodePoint(e){return ce.Call(Re,this,arguments)})}var _e={fromCodePoint:function fromCodePoint(e){var t=[];var r;for(var n=0,o=arguments.length;n<o;n++){r=Number(arguments[n]);if(!ce.SameValue(r,ce.ToInteger(r))||r<0||r>1114111){throw new RangeError(\"Invalid code point \"+r)}if(r<65536){M(t,String.fromCharCode(r))}else{r-=65536;M(t,String.fromCharCode((r>>10)+55296));M(t,String.fromCharCode(r%1024+56320))}}return t.join(\"\")},raw:function raw(e){var t=ce.ToObject(e,\"bad callSite\");var r=ce.ToObject(t.raw,\"bad raw value\");var n=r.length;var o=ce.ToLength(n);if(o<=0){return\"\"}var i=[];var a=0;var u,f,s,c;while(a<o){u=ce.ToString(a);s=ce.ToString(r[u]);M(i,s);if(a+1>=o){break}f=a+1<arguments.length?arguments[a+1]:\"\";c=ce.ToString(f);M(i,c);a+=1}return i.join(\"\")}};if(String.raw&&String.raw({raw:{0:\"x\",1:\"y\",length:2}})!==\"xy\"){ne(String,\"raw\",_e.raw)}b(String,_e);var ke=function repeat(e,t){if(t<1){return\"\"}if(t%2){return repeat(e,t-1)+e}var r=repeat(e,t/2);return r+r};var Le=Infinity;var Fe={repeat:function repeat(e){var t=ce.ToString(ce.RequireObjectCoercible(this));var r=ce.ToInteger(e);if(r<0||r>=Le){throw new RangeError(\"repeat count must be less than infinity and not overflow maximum string size\")}return ke(t,r)},startsWith:function startsWith(e){var t=ce.ToString(ce.RequireObjectCoercible(this));if(ce.IsRegExp(e)){throw new TypeError('Cannot call method \"startsWith\" with a regex')}var r=ce.ToString(e);var n;if(arguments.length>1){n=arguments[1]}var o=A(ce.ToInteger(n),0);return C(t,o,o+r.length)===r},endsWith:function endsWith(e){var t=ce.ToString(ce.RequireObjectCoercible(this));if(ce.IsRegExp(e)){throw new TypeError('Cannot call method \"endsWith\" with a regex')}var r=ce.ToString(e);var n=t.length;var o;if(arguments.length>1){o=arguments[1]}var i=typeof o===\"undefined\"?n:ce.ToInteger(o);var a=R(A(i,0),n);return C(t,a-r.length,a)===r},includes:function includes(e){if(ce.IsRegExp(e)){throw new TypeError('\"includes\" does not accept a RegExp')}var t=ce.ToString(e);var r;if(arguments.length>1){r=arguments[1]}return I(this,t,r)!==-1},codePointAt:function codePointAt(e){var t=ce.ToString(ce.RequireObjectCoercible(this));var r=ce.ToInteger(e);var n=t.length;if(r>=0&&r<n){var o=t.charCodeAt(r);var i=r+1===n;if(o<55296||o>56319||i){return o}var a=t.charCodeAt(r+1);if(a<56320||a>57343){return o}return(o-55296)*1024+(a-56320)+65536}}};if(String.prototype.includes&&\"a\".includes(\"a\",Infinity)!==false){ne(String.prototype,\"includes\",Fe.includes)}if(String.prototype.startsWith&&String.prototype.endsWith){var De=i(function(){return\"/a/\".startsWith(/a/)});var ze=a(function(){return\"abc\".startsWith(\"a\",Infinity)===false});if(!De||!ze){ne(String.prototype,\"startsWith\",Fe.startsWith);ne(String.prototype,\"endsWith\",Fe.endsWith)}}if(oe){var qe=a(function(){var e=/a/;e[$.match]=false;return\"/a/\".startsWith(e)});if(!qe){ne(String.prototype,\"startsWith\",Fe.startsWith)}var We=a(function(){var e=/a/;e[$.match]=false;return\"/a/\".endsWith(e)});if(!We){ne(String.prototype,\"endsWith\",Fe.endsWith)}var Ge=a(function(){var e=/a/;e[$.match]=false;return\"/a/\".includes(e)});if(!Ge){ne(String.prototype,\"includes\",Fe.includes)}}b(String.prototype,Fe);var He=[\"\\t\\n\\x0B\\f\\r \\xa0\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\",\"\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\",\"\\u2029\\ufeff\"].join(\"\");var Ve=new RegExp(\"(^[\"+He+\"]+)|([\"+He+\"]+$)\",\"g\");var Be=function trim(){return ce.ToString(ce.RequireObjectCoercible(this)).replace(Ve,\"\")};var Ue=[\"\\x85\",\"\\u200b\",\"\\ufffe\"].join(\"\");var $e=new RegExp(\"[\"+Ue+\"]\",\"g\");var Je=/^[-+]0x[0-9a-f]+$/i;var Xe=Ue.trim().length!==Ue.length;h(String.prototype,\"trim\",Be,Xe);var Ke=function(e){return{value:e,done:arguments.length===0}};var Ze=function(e){ce.RequireObjectCoercible(e);this._s=ce.ToString(e);this._i=0};Ze.prototype.next=function(){var e=this._s;var t=this._i;if(typeof e===\"undefined\"||t>=e.length){this._s=void 0;return Ke()}var r=e.charCodeAt(t);var n,o;if(r<55296||r>56319||t+1===e.length){o=1}else{n=e.charCodeAt(t+1);o=n<56320||n>57343?1:2}this._i=t+o;return Ke(e.substr(t,o))};Me(Ze.prototype);Me(String.prototype,function(){return new Ze(this)});var Ye={from:function from(e){var r=this;var n;if(arguments.length>1){n=arguments[1]}var o,i;if(typeof n===\"undefined\"){o=false}else{if(!ce.IsCallable(n)){throw new TypeError(\"Array.from: when provided, the second argument must be a function\")}if(arguments.length>2){i=arguments[2]}o=true}var a=typeof(te(e)||ce.GetMethod(e,ie))!==\"undefined\";var u,f,s;if(a){f=ce.IsConstructor(r)?Object(new r):[];var c=ce.GetIterator(e);var l,p;s=0;while(true){l=ce.IteratorStep(c);if(l===false){break}p=l.value;try{if(o){p=typeof i===\"undefined\"?n(p,s):t(n,i,p,s)}f[s]=p}catch(v){ce.IteratorClose(c,true);throw v}s+=1}u=s}else{var y=ce.ToObject(e);u=ce.ToLength(y.length);f=ce.IsConstructor(r)?Object(new r(u)):new Array(u);var h;for(s=0;s<u;++s){h=y[s];if(o){h=typeof i===\"undefined\"?n(h,s):t(n,i,h,s)}Ne(f,s,h)}}f.length=u;return f},of:function of(){var e=arguments.length;var t=this;var n=r(t)||!ce.IsCallable(t)?new Array(e):ce.Construct(t,[e]);for(var o=0;o<e;++o){Ne(n,o,arguments[o])}n.length=e;return n}};b(Array,Ye);Ce(Array);q=function(e,t){this.i=0;this.array=e;this.kind=t};b(q.prototype,{next:function(){var e=this.i;var t=this.array;if(!(this instanceof q)){throw new TypeError(\"Not an ArrayIterator\")}if(typeof t!==\"undefined\"){var r=ce.ToLength(t.length);for(;e<r;e++){var n=this.kind;var o;if(n===\"key\"){o=e}else if(n===\"value\"){o=t[e]}else if(n===\"entry\"){o=[e,t[e]]}this.i=e+1;return Ke(o)}}this.array=void 0;return Ke()}});Me(q.prototype);var Qe=Array.of===Ye.of||function(){var e=function Foo(e){this.length=e};e.prototype=[];var t=Array.of.apply(e,[1,2]);return t instanceof e&&t.length===2}();if(!Qe){ne(Array,\"of\",Ye.of)}var et={copyWithin:function copyWithin(e,t){var r=ce.ToObject(this);var n=ce.ToLength(r.length);var o=ce.ToInteger(e);var i=ce.ToInteger(t);var a=o<0?A(n+o,0):R(o,n);var u=i<0?A(n+i,0):R(i,n);var f;if(arguments.length>2){f=arguments[2]}var s=typeof f===\"undefined\"?n:ce.ToInteger(f);var c=s<0?A(n+s,0):R(s,n);var l=R(c-u,n-a);var p=1;if(u<a&&a<u+l){p=-1;u+=l-1;a+=l-1}while(l>0){if(u in r){r[a]=r[u]}else{delete r[a]}u+=p;a+=p;l-=1}return r},fill:function fill(e){var t;if(arguments.length>1){t=arguments[1]}var r;if(arguments.length>2){r=arguments[2]}var n=ce.ToObject(this);var o=ce.ToLength(n.length);t=ce.ToInteger(typeof t===\"undefined\"?0:t);r=ce.ToInteger(typeof r===\"undefined\"?o:r);var i=t<0?A(o+t,0):R(t,o);var a=r<0?o+r:r;for(var u=i;u<o&&u<a;++u){n[u]=e}return n},find:function find(e){var r=ce.ToObject(this);var n=ce.ToLength(r.length);if(!ce.IsCallable(e)){throw new TypeError(\"Array#find: predicate must be a function\")}var o=arguments.length>1?arguments[1]:null;for(var i=0,a;i<n;i++){a=r[i];if(o){if(t(e,o,a,i,r)){return a}}else if(e(a,i,r)){return a}}},findIndex:function findIndex(e){var r=ce.ToObject(this);var n=ce.ToLength(r.length);if(!ce.IsCallable(e)){throw new TypeError(\"Array#findIndex: predicate must be a function\")}var o=arguments.length>1?arguments[1]:null;for(var i=0;i<n;i++){if(o){if(t(e,o,r[i],i,r)){return i}}else if(e(r[i],i,r)){return i}}return-1},keys:function keys(){return new q(this,\"key\")},values:function values(){return new q(this,\"value\")},entries:function entries(){return new q(this,\"entry\")}};if(Array.prototype.keys&&!ce.IsCallable([1].keys().next)){delete Array.prototype.keys}if(Array.prototype.entries&&!ce.IsCallable([1].entries().next)){delete Array.prototype.entries}if(Array.prototype.keys&&Array.prototype.entries&&!Array.prototype.values&&Array.prototype[ie]){b(Array.prototype,{values:Array.prototype[ie]});if(re.symbol($.unscopables)){Array.prototype[$.unscopables].values=true}}if(c&&Array.prototype.values&&Array.prototype.values.name!==\"values\"){var tt=Array.prototype.values;ne(Array.prototype,\"values\",function values(){return ce.Call(tt,this,arguments)});h(Array.prototype,ie,Array.prototype.values,true)}b(Array.prototype,et);if(1/[true].indexOf(true,-0)<0){h(Array.prototype,\"indexOf\",function indexOf(e){var t=E(this,arguments);if(t===0&&1/t<0){return 0}return t},true)}Me(Array.prototype,function(){return this.values()});if(Object.getPrototypeOf){Me(Object.getPrototypeOf([].values()))}var rt=function(){return a(function(){return Array.from({length:-1}).length===0})}();var nt=function(){var e=Array.from([0].entries());return e.length===1&&r(e[0])&&e[0][0]===0&&e[0][1]===0}();if(!rt||!nt){ne(Array,\"from\",Ye.from)}var ot=function(){return a(function(){return Array.from([0],void 0)})}();if(!ot){var it=Array.from;ne(Array,\"from\",function from(e){if(arguments.length>1&&typeof arguments[1]!==\"undefined\"){return ce.Call(it,this,arguments)}else{return t(it,this,e)}})}var at=-(Math.pow(2,32)-1);var ut=function(e,r){var n={length:at};n[r?(n.length>>>0)-1:0]=true;return a(function(){t(e,n,function(){throw new RangeError(\"should not reach here\")},[]);return true})};if(!ut(Array.prototype.forEach)){var ft=Array.prototype.forEach;ne(Array.prototype,\"forEach\",function forEach(e){return ce.Call(ft,this.length>=0?this:[],arguments)},true)}if(!ut(Array.prototype.map)){var st=Array.prototype.map;ne(Array.prototype,\"map\",function map(e){return ce.Call(st,this.length>=0?this:[],arguments)},true)}if(!ut(Array.prototype.filter)){var ct=Array.prototype.filter;ne(Array.prototype,\"filter\",function filter(e){return ce.Call(ct,this.length>=0?this:[],arguments)},true)}if(!ut(Array.prototype.some)){var lt=Array.prototype.some;ne(Array.prototype,\"some\",function some(e){return ce.Call(lt,this.length>=0?this:[],arguments)},true)}if(!ut(Array.prototype.every)){var pt=Array.prototype.every;ne(Array.prototype,\"every\",function every(e){return ce.Call(pt,this.length>=0?this:[],arguments)},true)}if(!ut(Array.prototype.reduce)){var vt=Array.prototype.reduce;ne(Array.prototype,\"reduce\",function reduce(e){return ce.Call(vt,this.length>=0?this:[],arguments)},true)}if(!ut(Array.prototype.reduceRight,true)){var yt=Array.prototype.reduceRight;ne(Array.prototype,\"reduceRight\",function reduceRight(e){return ce.Call(yt,this.length>=0?this:[],arguments)},true)}var ht=Number(\"0o10\")!==8;var bt=Number(\"0b10\")!==2;var gt=y(Ue,function(e){return Number(e+0+e)===0});if(ht||bt||gt){var dt=Number;var mt=/^0b[01]+$/i;var Ot=/^0o[0-7]+$/i;var wt=mt.test.bind(mt);var jt=Ot.test.bind(Ot);var St=function(e){var t;if(typeof e.valueOf===\"function\"){t=e.valueOf();if(re.primitive(t)){return t}}if(typeof e.toString===\"function\"){t=e.toString();if(re.primitive(t)){return t}}throw new TypeError(\"No default value\")};var Tt=$e.test.bind($e);var It=Je.test.bind(Je);var Et=function(){var e=function Number(t){var r;if(arguments.length>0){r=re.primitive(t)?t:St(t,\"number\")}else{r=0}if(typeof r===\"string\"){r=ce.Call(Be,r);if(wt(r)){r=parseInt(C(r,2),2)}else if(jt(r)){r=parseInt(C(r,2),8)}else if(Tt(r)||It(r)){r=NaN}}var n=this;var o=a(function(){dt.prototype.valueOf.call(n);return true});if(n instanceof e&&!o){return new dt(r)}return dt(r)};return e}();Ee(dt,Et,{});b(Et,{NaN:dt.NaN,MAX_VALUE:dt.MAX_VALUE,MIN_VALUE:dt.MIN_VALUE,NEGATIVE_INFINITY:dt.NEGATIVE_INFINITY,POSITIVE_INFINITY:dt.POSITIVE_INFINITY});Number=Et;m.redefine(S,\"Number\",Et)}var Pt=Math.pow(2,53)-1;b(Number,{MAX_SAFE_INTEGER:Pt,MIN_SAFE_INTEGER:-Pt,EPSILON:2.220446049250313e-16,parseInt:S.parseInt,parseFloat:S.parseFloat,isFinite:K,isInteger:function isInteger(e){return K(e)&&ce.ToInteger(e)===e},isSafeInteger:function isSafeInteger(e){return Number.isInteger(e)&&k(e)<=Number.MAX_SAFE_INTEGER},isNaN:X});h(Number,\"parseInt\",S.parseInt,Number.parseInt!==S.parseInt);if([,1].find(function(){return true})===1){ne(Array.prototype,\"find\",et.find)}if([,1].findIndex(function(){return true})!==0){ne(Array.prototype,\"findIndex\",et.findIndex)}var Ct=Function.bind.call(Function.bind,Object.prototype.propertyIsEnumerable);var Mt=function ensureEnumerable(e,t){if(s&&Ct(e,t)){Object.defineProperty(e,t,{enumerable:false})}};var xt=function sliceArgs(){var e=Number(this);var t=arguments.length;var r=t-e;var n=new Array(r<0?0:r);for(var o=e;o<t;++o){n[o-e]=arguments[o]}return n};var Nt=function assignTo(e){return function assignToSource(t,r){t[r]=e[r];return t}};var At=function(e,t){var r=n(Object(t));var o;if(ce.IsCallable(Object.getOwnPropertySymbols)){o=v(Object.getOwnPropertySymbols(Object(t)),Ct(t))}return p(P(r,o||[]),Nt(t),e)};var Rt={assign:function(e,t){var r=ce.ToObject(e,\"Cannot convert undefined or null to object\");return p(ce.Call(xt,1,arguments),At,r)},is:function is(e,t){return ce.SameValue(e,t)}};var _t=Object.assign&&Object.preventExtensions&&function(){var e=Object.preventExtensions({1:2});try{Object.assign(e,\"xy\")}catch(t){return e[1]===\"y\"}}();if(_t){ne(Object,\"assign\",Rt.assign)}b(Object,Rt);if(s){var kt={setPrototypeOf:function(e,r){var n;var o=function(e,t){if(!ce.TypeIsObject(e)){throw new TypeError(\"cannot set prototype on a non-object\")}if(!(t===null||ce.TypeIsObject(t))){throw new TypeError(\"can only set prototype to an object or null\"+t)}};var i=function(e,r){o(e,r);t(n,e,r);return e};try{n=e.getOwnPropertyDescriptor(e.prototype,r).set;t(n,{},null)}catch(a){if(e.prototype!=={}[r]){return}n=function(e){this[r]=e};i.polyfill=i(i({},null),e.prototype)instanceof e}return i}(Object,\"__proto__\")};b(Object,kt)}if(Object.setPrototypeOf&&Object.getPrototypeOf&&Object.getPrototypeOf(Object.setPrototypeOf({},null))!==null&&Object.getPrototypeOf(Object.create(null))===null){(function(){var e=Object.create(null);var t=Object.getPrototypeOf;var r=Object.setPrototypeOf;Object.getPrototypeOf=function(r){var n=t(r);return n===e?null:n};Object.setPrototypeOf=function(t,n){var o=n===null?e:n;return r(t,o)};Object.setPrototypeOf.polyfill=false})()}var Lt=!i(function(){return Object.keys(\"foo\")});if(!Lt){var Ft=Object.keys;ne(Object,\"keys\",function keys(e){return Ft(ce.ToObject(e))});n=Object.keys}var Dt=i(function(){return Object.keys(/a/g)});if(Dt){var zt=Object.keys;ne(Object,\"keys\",function keys(e){if(re.regex(e)){var t=[];for(var r in e){if(z(e,r)){M(t,r)}}return t}return zt(e)});n=Object.keys}if(Object.getOwnPropertyNames){var qt=!i(function(){return Object.getOwnPropertyNames(\"foo\")});if(!qt){var Wt=typeof window===\"object\"?Object.getOwnPropertyNames(window):[];var Gt=Object.getOwnPropertyNames;ne(Object,\"getOwnPropertyNames\",function getOwnPropertyNames(e){var t=ce.ToObject(e);if(g(t)===\"[object Window]\"){try{return Gt(t)}catch(r){return P([],Wt)}}return Gt(t)})}}if(Object.getOwnPropertyDescriptor){var Ht=!i(function(){return Object.getOwnPropertyDescriptor(\"foo\",\"bar\")});if(!Ht){var Vt=Object.getOwnPropertyDescriptor;ne(Object,\"getOwnPropertyDescriptor\",function getOwnPropertyDescriptor(e,t){return Vt(ce.ToObject(e),t)})}}if(Object.seal){var Bt=!i(function(){return Object.seal(\"foo\")});if(!Bt){var Ut=Object.seal;ne(Object,\"seal\",function seal(e){if(!ce.TypeIsObject(e)){return e}return Ut(e)})}}if(Object.isSealed){var $t=!i(function(){return Object.isSealed(\"foo\")});if(!$t){var Jt=Object.isSealed;ne(Object,\"isSealed\",function isSealed(e){if(!ce.TypeIsObject(e)){return true}return Jt(e)})}}if(Object.freeze){var Xt=!i(function(){return Object.freeze(\"foo\")});if(!Xt){var Kt=Object.freeze;ne(Object,\"freeze\",function freeze(e){if(!ce.TypeIsObject(e)){return e}return Kt(e)})}}if(Object.isFrozen){var Zt=!i(function(){return Object.isFrozen(\"foo\")});if(!Zt){var Yt=Object.isFrozen;ne(Object,\"isFrozen\",function isFrozen(e){if(!ce.TypeIsObject(e)){return true}return Yt(e)})}}if(Object.preventExtensions){var Qt=!i(function(){return Object.preventExtensions(\"foo\")});if(!Qt){var er=Object.preventExtensions;ne(Object,\"preventExtensions\",function preventExtensions(e){if(!ce.TypeIsObject(e)){return e}return er(e)})}}if(Object.isExtensible){var tr=!i(function(){return Object.isExtensible(\"foo\")});if(!tr){var rr=Object.isExtensible;ne(Object,\"isExtensible\",function isExtensible(e){if(!ce.TypeIsObject(e)){return false}return rr(e)})}}if(Object.getPrototypeOf){var nr=!i(function(){return Object.getPrototypeOf(\"foo\")});if(!nr){var or=Object.getPrototypeOf;ne(Object,\"getPrototypeOf\",function getPrototypeOf(e){return or(ce.ToObject(e))})}}var ir=s&&function(){var e=Object.getOwnPropertyDescriptor(RegExp.prototype,\"flags\");return e&&ce.IsCallable(e.get)}();if(s&&!ir){var ar=function flags(){if(!ce.TypeIsObject(this)){throw new TypeError(\"Method called on incompatible type: must be an object.\")}var e=\"\";if(this.global){e+=\"g\"}if(this.ignoreCase){e+=\"i\"}if(this.multiline){e+=\"m\"}if(this.unicode){e+=\"u\"}if(this.sticky){e+=\"y\"}return e};m.getter(RegExp.prototype,\"flags\",ar)}var ur=s&&a(function(){return String(new RegExp(/a/g,\"i\"))===\"/a/i\"});var fr=oe&&s&&function(){var e=/./;e[$.match]=false;return RegExp(e)===e}();var sr=a(function(){return RegExp.prototype.toString.call({source:\"abc\"})===\"/abc/\"});var cr=sr&&a(function(){return RegExp.prototype.toString.call({source:\"a\",flags:\"b\"})===\"/a/b\"});if(!sr||!cr){var lr=RegExp.prototype.toString;h(RegExp.prototype,\"toString\",function toString(){var e=ce.RequireObjectCoercible(this);if(re.regex(e)){return t(lr,e)}var r=ue(e.source);var n=ue(e.flags);return\"/\"+r+\"/\"+n},true);m.preserveToString(RegExp.prototype.toString,lr)}if(s&&(!ur||fr)){var pr=Object.getOwnPropertyDescriptor(RegExp.prototype,\"flags\").get;var vr=Object.getOwnPropertyDescriptor(RegExp.prototype,\"source\")||{};var yr=function(){return this.source};var hr=ce.IsCallable(vr.get)?vr.get:yr;var br=RegExp;var gr=function(){return function RegExp(e,t){var r=ce.IsRegExp(e);var n=this instanceof RegExp;if(!n&&r&&typeof t===\"undefined\"&&e.constructor===RegExp){return e}var o=e;var i=t;if(re.regex(e)){o=ce.Call(hr,e);i=typeof t===\"undefined\"?ce.Call(pr,e):t;return new RegExp(o,i)}else if(r){o=e.source;i=typeof t===\"undefined\"?e.flags:t}return new br(e,t)}}();Ee(br,gr,{$input:true});RegExp=gr;m.redefine(S,\"RegExp\",gr)}if(s){var dr={input:\"$_\",lastMatch:\"$&\",lastParen:\"$+\",leftContext:\"$`\",rightContext:\"$'\"};l(n(dr),function(e){if(e in RegExp&&!(dr[e]in RegExp)){m.getter(RegExp,dr[e],function get(){return RegExp[e]})}})}Ce(RegExp);var mr=1/Number.EPSILON;var Or=function roundTiesToEven(e){return e+mr-mr};var wr=Math.pow(2,-23);var jr=Math.pow(2,127)*(2-wr);var Sr=Math.pow(2,-126);var Tr=Math.E;var Ir=Math.LOG2E;var Er=Math.LOG10E;var Pr=Number.prototype.clz;delete Number.prototype.clz;var Cr={acosh:function acosh(e){var t=Number(e);if(X(t)||e<1){return NaN}if(t===1){return 0}if(t===Infinity){return t}var r=1/(t*t);if(t<2){return Y(t-1+D(1-r)*t)}var n=t/2;return Y(n+D(1-r)*n-1)+1/Ir},asinh:function asinh(e){var t=Number(e);if(t===0||!T(t)){return t}var r=k(t);var n=r*r;var o=Z(t);if(r<1){return o*Y(r+n/(D(n+1)+1))}return o*(Y(r/2+D(1+1/n)*r/2-1)+1/Ir)},atanh:function atanh(e){var t=Number(e);if(t===0){return t}if(t===-1){return-Infinity}if(t===1){return Infinity}if(X(t)||t<-1||t>1){return NaN}var r=k(t);return Z(t)*Y(2*r/(1-r))/2},cbrt:function cbrt(e){var t=Number(e);if(t===0){return t}var r=t<0;var n;if(r){t=-t}if(t===Infinity){n=Infinity}else{n=L(F(t)/3);n=(t/(n*n)+2*n)/3}return r?-n:n},clz32:function clz32(e){var t=Number(e);var r=ce.ToUint32(t);if(r===0){return 32}return Pr?ce.Call(Pr,r):31-_(F(r+.5)*Ir)},cosh:function cosh(e){var t=Number(e);if(t===0){return 1}if(X(t)){return NaN}if(!T(t)){return Infinity}var r=L(k(t)-1);return(r+1/(r*Tr*Tr))*(Tr/2)},expm1:function expm1(e){var t=Number(e);if(t===-Infinity){return-1}if(!T(t)||t===0){return t}if(k(t)>.5){return L(t)-1}var r=t;var n=0;var o=1;while(n+r!==n){n+=r;o+=1;r*=t/o}return n},hypot:function hypot(e,t){var r=0;var n=0;for(var o=0;o<arguments.length;++o){var i=k(Number(arguments[o]));if(n<i){r*=n/i*(n/i);r+=1;n=i}else{r+=i>0?i/n*(i/n):i}}return n===Infinity?Infinity:n*D(r)},log2:function log2(e){return F(e)*Ir},log10:function log10(e){return F(e)*Er},log1p:Y,sign:Z,sinh:function sinh(e){var t=Number(e);if(!T(t)||t===0){return t}var r=k(t);if(r<1){var n=Math.expm1(r);return Z(t)*n*(1+1/(n+1))/2}var o=L(r-1);return Z(t)*(o-1/(o*Tr*Tr))*(Tr/2)},tanh:function tanh(e){var t=Number(e);if(X(t)||t===0){return t}if(t>=20){return 1}if(t<=-20){return-1}return(Math.expm1(t)-Math.expm1(-t))/(L(t)+L(-t))},trunc:function trunc(e){var t=Number(e);return t<0?-_(-t):_(t)},imul:function imul(e,t){var r=ce.ToUint32(e);var n=ce.ToUint32(t);var o=r>>>16&65535;var i=r&65535;var a=n>>>16&65535;var u=n&65535;return i*u+(o*u+i*a<<16>>>0)|0},fround:function fround(e){var t=Number(e);if(t===0||t===Infinity||t===-Infinity||X(t)){return t}var r=Z(t);var n=k(t);if(n<Sr){return r*Or(n/Sr/wr)*Sr*wr}var o=(1+wr/Number.EPSILON)*n;var i=o-(o-n);if(i>jr||X(i)){return r*Infinity}return r*i}};var Mr=function withinULPDistance(e,t,r){return k(1-e/t)/Number.EPSILON<(r||8)};b(Math,Cr);h(Math,\"sinh\",Cr.sinh,Math.sinh(710)===Infinity);h(Math,\"cosh\",Cr.cosh,Math.cosh(710)===Infinity);h(Math,\"log1p\",Cr.log1p,Math.log1p(-1e-17)!==-1e-17);h(Math,\"asinh\",Cr.asinh,Math.asinh(-1e7)!==-Math.asinh(1e7));h(Math,\"asinh\",Cr.asinh,Math.asinh(1e300)===Infinity);h(Math,\"atanh\",Cr.atanh,Math.atanh(1e-300)===0);h(Math,\"tanh\",Cr.tanh,Math.tanh(-2e-17)!==-2e-17);\nh(Math,\"acosh\",Cr.acosh,Math.acosh(Number.MAX_VALUE)===Infinity);h(Math,\"acosh\",Cr.acosh,!Mr(Math.acosh(1+Number.EPSILON),Math.sqrt(2*Number.EPSILON)));h(Math,\"cbrt\",Cr.cbrt,!Mr(Math.cbrt(1e-300),1e-100));h(Math,\"sinh\",Cr.sinh,Math.sinh(-2e-17)!==-2e-17);var xr=Math.expm1(10);h(Math,\"expm1\",Cr.expm1,xr>22025.465794806718||xr<22025.465794806718);var Nr=Math.round;var Ar=Math.round(.5-Number.EPSILON/4)===0&&Math.round(-.5+Number.EPSILON/3.99)===1;var Rr=mr+1;var _r=2*mr-1;var kr=[Rr,_r].every(function(e){return Math.round(e)===e});h(Math,\"round\",function round(e){var t=_(e);var r=t===-1?-0:t+1;return e-t<.5?t:r},!Ar||!kr);m.preserveToString(Math.round,Nr);var Lr=Math.imul;if(Math.imul(4294967295,5)!==-5){Math.imul=Cr.imul;m.preserveToString(Math.imul,Lr)}if(Math.imul.length!==2){ne(Math,\"imul\",function imul(e,t){return ce.Call(Lr,Math,arguments)})}var Fr=function(){var e=S.setTimeout;if(typeof e!==\"function\"&&typeof e!==\"object\"){return}ce.IsPromise=function(e){if(!ce.TypeIsObject(e)){return false}if(typeof e._promise===\"undefined\"){return false}return true};var r=function(e){if(!ce.IsConstructor(e)){throw new TypeError(\"Bad promise constructor\")}var t=this;var r=function(e,r){if(t.resolve!==void 0||t.reject!==void 0){throw new TypeError(\"Bad Promise implementation!\")}t.resolve=e;t.reject=r};t.resolve=void 0;t.reject=void 0;t.promise=new e(r);if(!(ce.IsCallable(t.resolve)&&ce.IsCallable(t.reject))){throw new TypeError(\"Bad promise constructor\")}};var n;if(typeof window!==\"undefined\"&&ce.IsCallable(window.postMessage)){n=function(){var e=[];var t=\"zero-timeout-message\";var r=function(r){M(e,r);window.postMessage(t,\"*\")};var n=function(r){if(r.source===window&&r.data===t){r.stopPropagation();if(e.length===0){return}var n=N(e);n()}};window.addEventListener(\"message\",n,true);return r}}var o=function(){var e=S.Promise;var t=e&&e.resolve&&e.resolve();return t&&function(e){return t.then(e)}};var i=ce.IsCallable(S.setImmediate)?S.setImmediate:typeof process===\"object\"&&process.nextTick?process.nextTick:o()||(ce.IsCallable(n)?n():function(t){e(t,0)});var a=function(e){return e};var u=function(e){throw e};var f=0;var s=1;var c=2;var l=0;var p=1;var v=2;var y={};var h=function(e,t,r){i(function(){g(e,t,r)})};var g=function(e,t,r){var n,o;if(t===y){return e(r)}try{n=e(r);o=t.resolve}catch(i){n=i;o=t.reject}o(n)};var d=function(e,t){var r=e._promise;var n=r.reactionLength;if(n>0){h(r.fulfillReactionHandler0,r.reactionCapability0,t);r.fulfillReactionHandler0=void 0;r.rejectReactions0=void 0;r.reactionCapability0=void 0;if(n>1){for(var o=1,i=0;o<n;o++,i+=3){h(r[i+l],r[i+v],t);e[i+l]=void 0;e[i+p]=void 0;e[i+v]=void 0}}}r.result=t;r.state=s;r.reactionLength=0};var m=function(e,t){var r=e._promise;var n=r.reactionLength;if(n>0){h(r.rejectReactionHandler0,r.reactionCapability0,t);r.fulfillReactionHandler0=void 0;r.rejectReactions0=void 0;r.reactionCapability0=void 0;if(n>1){for(var o=1,i=0;o<n;o++,i+=3){h(r[i+p],r[i+v],t);e[i+l]=void 0;e[i+p]=void 0;e[i+v]=void 0}}}r.result=t;r.state=c;r.reactionLength=0};var O=function(e){var t=false;var r=function(r){var n;if(t){return}t=true;if(r===e){return m(e,new TypeError(\"Self resolution\"))}if(!ce.TypeIsObject(r)){return d(e,r)}try{n=r.then}catch(o){return m(e,o)}if(!ce.IsCallable(n)){return d(e,r)}i(function(){j(e,r,n)})};var n=function(r){if(t){return}t=true;return m(e,r)};return{resolve:r,reject:n}};var w=function(e,r,n,o){if(e===I){t(e,r,n,o,y)}else{t(e,r,n,o)}};var j=function(e,t,r){var n=O(e);var o=n.resolve;var i=n.reject;try{w(r,t,o,i)}catch(a){i(a)}};var T,I;var E=function(){var e=function Promise(t){if(!(this instanceof e)){throw new TypeError('Constructor Promise requires \"new\"')}if(this&&this._promise){throw new TypeError(\"Bad construction\")}if(!ce.IsCallable(t)){throw new TypeError(\"not a valid resolver\")}var r=Ae(this,e,T,{_promise:{result:void 0,state:f,reactionLength:0,fulfillReactionHandler0:void 0,rejectReactionHandler0:void 0,reactionCapability0:void 0}});var n=O(r);var o=n.reject;try{t(n.resolve,o)}catch(i){o(i)}return r};return e}();T=E.prototype;var P=function(e,t,r,n){var o=false;return function(i){if(o){return}o=true;t[e]=i;if(--n.count===0){var a=r.resolve;a(t)}}};var C=function(e,t,r){var n=e.iterator;var o=[];var i={count:1};var a,u;var f=0;while(true){try{a=ce.IteratorStep(n);if(a===false){e.done=true;break}u=a.value}catch(s){e.done=true;throw s}o[f]=void 0;var c=t.resolve(u);var l=P(f,o,r,i);i.count+=1;w(c.then,c,l,r.reject);f+=1}if(--i.count===0){var p=r.resolve;p(o)}return r.promise};var x=function(e,t,r){var n=e.iterator;var o,i,a;while(true){try{o=ce.IteratorStep(n);if(o===false){e.done=true;break}i=o.value}catch(u){e.done=true;throw u}a=t.resolve(i);w(a.then,a,r.resolve,r.reject)}return r.promise};b(E,{all:function all(e){var t=this;if(!ce.TypeIsObject(t)){throw new TypeError(\"Promise is not object\")}var n=new r(t);var o,i;try{o=ce.GetIterator(e);i={iterator:o,done:false};return C(i,t,n)}catch(a){var u=a;if(i&&!i.done){try{ce.IteratorClose(o,true)}catch(f){u=f}}var s=n.reject;s(u);return n.promise}},race:function race(e){var t=this;if(!ce.TypeIsObject(t)){throw new TypeError(\"Promise is not object\")}var n=new r(t);var o,i;try{o=ce.GetIterator(e);i={iterator:o,done:false};return x(i,t,n)}catch(a){var u=a;if(i&&!i.done){try{ce.IteratorClose(o,true)}catch(f){u=f}}var s=n.reject;s(u);return n.promise}},reject:function reject(e){var t=this;if(!ce.TypeIsObject(t)){throw new TypeError(\"Bad promise constructor\")}var n=new r(t);var o=n.reject;o(e);return n.promise},resolve:function resolve(e){var t=this;if(!ce.TypeIsObject(t)){throw new TypeError(\"Bad promise constructor\")}if(ce.IsPromise(e)){var n=e.constructor;if(n===t){return e}}var o=new r(t);var i=o.resolve;i(e);return o.promise}});b(T,{\"catch\":function(e){return this.then(null,e)},then:function then(e,t){var n=this;if(!ce.IsPromise(n)){throw new TypeError(\"not a promise\")}var o=ce.SpeciesConstructor(n,E);var i;var b=arguments.length>2&&arguments[2]===y;if(b&&o===E){i=y}else{i=new r(o)}var g=ce.IsCallable(e)?e:a;var d=ce.IsCallable(t)?t:u;var m=n._promise;var O;if(m.state===f){if(m.reactionLength===0){m.fulfillReactionHandler0=g;m.rejectReactionHandler0=d;m.reactionCapability0=i}else{var w=3*(m.reactionLength-1);m[w+l]=g;m[w+p]=d;m[w+v]=i}m.reactionLength+=1}else if(m.state===s){O=m.result;h(g,i,O)}else if(m.state===c){O=m.result;h(d,i,O)}else{throw new TypeError(\"unexpected Promise state\")}return i.promise}});y=new r(E);I=T.then;return E}();if(S.Promise){delete S.Promise.accept;delete S.Promise.defer;delete S.Promise.prototype.chain}if(typeof Fr===\"function\"){b(S,{Promise:Fr});var Dr=w(S.Promise,function(e){return e.resolve(42).then(function(){})instanceof e});var zr=!i(function(){return S.Promise.reject(42).then(null,5).then(null,W)});var qr=i(function(){return S.Promise.call(3,W)});var Wr=function(e){var t=e.resolve(5);t.constructor={};var r=e.resolve(t);try{r.then(null,W).then(null,W)}catch(n){return true}return t===r}(S.Promise);var Gr=s&&function(){var e=0;var t=Object.defineProperty({},\"then\",{get:function(){e+=1}});Promise.resolve(t);return e===1}();var Hr=function BadResolverPromise(e){var t=new Promise(e);e(3,function(){});this.then=t.then;this.constructor=BadResolverPromise};Hr.prototype=Promise.prototype;Hr.all=Promise.all;var Vr=a(function(){return!!Hr.all([1,2])});if(!Dr||!zr||!qr||Wr||!Gr||Vr){Promise=Fr;ne(S,\"Promise\",Fr)}if(Promise.all.length!==1){var Br=Promise.all;ne(Promise,\"all\",function all(e){return ce.Call(Br,this,arguments)})}if(Promise.race.length!==1){var Ur=Promise.race;ne(Promise,\"race\",function race(e){return ce.Call(Ur,this,arguments)})}if(Promise.resolve.length!==1){var $r=Promise.resolve;ne(Promise,\"resolve\",function resolve(e){return ce.Call($r,this,arguments)})}if(Promise.reject.length!==1){var Jr=Promise.reject;ne(Promise,\"reject\",function reject(e){return ce.Call(Jr,this,arguments)})}Mt(Promise,\"all\");Mt(Promise,\"race\");Mt(Promise,\"resolve\");Mt(Promise,\"reject\");Ce(Promise)}var Xr=function(e){var t=n(p(e,function(e,t){e[t]=true;return e},{}));return e.join(\":\")===t.join(\":\")};var Kr=Xr([\"z\",\"a\",\"bb\"]);var Zr=Xr([\"z\",1,\"a\",\"3\",2]);if(s){var Yr=function fastkey(e,t){if(!t&&!Kr){return null}if(se(e)){return\"^\"+ce.ToString(e)}else if(typeof e===\"string\"){return\"$\"+e}else if(typeof e===\"number\"){if(!Zr){return\"n\"+e}return e}else if(typeof e===\"boolean\"){return\"b\"+e}return null};var Qr=function emptyObject(){return Object.create?Object.create(null):{}};var en=function addIterableToMap(e,n,o){if(r(o)||re.string(o)){l(o,function(e){if(!ce.TypeIsObject(e)){throw new TypeError(\"Iterator value \"+e+\" is not an entry object\")}n.set(e[0],e[1])})}else if(o instanceof e){t(e.prototype.forEach,o,function(e,t){n.set(t,e)})}else{var i,a;if(!se(o)){a=n.set;if(!ce.IsCallable(a)){throw new TypeError(\"bad map\")}i=ce.GetIterator(o)}if(typeof i!==\"undefined\"){while(true){var u=ce.IteratorStep(i);if(u===false){break}var f=u.value;try{if(!ce.TypeIsObject(f)){throw new TypeError(\"Iterator value \"+f+\" is not an entry object\")}t(a,n,f[0],f[1])}catch(s){ce.IteratorClose(i,true);throw s}}}}};var tn=function addIterableToSet(e,n,o){if(r(o)||re.string(o)){l(o,function(e){n.add(e)})}else if(o instanceof e){t(e.prototype.forEach,o,function(e){n.add(e)})}else{var i,a;if(!se(o)){a=n.add;if(!ce.IsCallable(a)){throw new TypeError(\"bad set\")}i=ce.GetIterator(o)}if(typeof i!==\"undefined\"){while(true){var u=ce.IteratorStep(i);if(u===false){break}var f=u.value;try{t(a,n,f)}catch(s){ce.IteratorClose(i,true);throw s}}}}};var rn={Map:function(){var e={};var r=function MapEntry(e,t){this.key=e;this.value=t;this.next=null;this.prev=null};r.prototype.isRemoved=function isRemoved(){return this.key===e};var n=function isMap(e){return!!e._es6map};var o=function requireMapSlot(e,t){if(!ce.TypeIsObject(e)||!n(e)){throw new TypeError(\"Method Map.prototype.\"+t+\" called on incompatible receiver \"+ce.ToString(e))}};var i=function MapIterator(e,t){o(e,\"[[MapIterator]]\");this.head=e._head;this.i=this.head;this.kind=t};i.prototype={isMapIterator:true,next:function next(){if(!this.isMapIterator){throw new TypeError(\"Not a MapIterator\")}var e=this.i;var t=this.kind;var r=this.head;if(typeof this.i===\"undefined\"){return Ke()}while(e.isRemoved()&&e!==r){e=e.prev}var n;while(e.next!==r){e=e.next;if(!e.isRemoved()){if(t===\"key\"){n=e.key}else if(t===\"value\"){n=e.value}else{n=[e.key,e.value]}this.i=e;return Ke(n)}}this.i=void 0;return Ke()}};Me(i.prototype);var a;var u=function Map(){if(!(this instanceof Map)){throw new TypeError('Constructor Map requires \"new\"')}if(this&&this._es6map){throw new TypeError(\"Bad construction\")}var e=Ae(this,Map,a,{_es6map:true,_head:null,_map:G?new G:null,_size:0,_storage:Qr()});var t=new r(null,null);t.next=t.prev=t;e._head=t;if(arguments.length>0){en(Map,e,arguments[0])}return e};a=u.prototype;m.getter(a,\"size\",function(){if(typeof this._size===\"undefined\"){throw new TypeError(\"size method called on incompatible Map\")}return this._size});b(a,{get:function get(e){o(this,\"get\");var t;var r=Yr(e,true);if(r!==null){t=this._storage[r];if(t){return t.value}else{return}}if(this._map){t=V.call(this._map,e);if(t){return t.value}else{return}}var n=this._head;var i=n;while((i=i.next)!==n){if(ce.SameValueZero(i.key,e)){return i.value}}},has:function has(e){o(this,\"has\");var t=Yr(e,true);if(t!==null){return typeof this._storage[t]!==\"undefined\"}if(this._map){return B.call(this._map,e)}var r=this._head;var n=r;while((n=n.next)!==r){if(ce.SameValueZero(n.key,e)){return true}}return false},set:function set(e,t){o(this,\"set\");var n=this._head;var i=n;var a;var u=Yr(e,true);if(u!==null){if(typeof this._storage[u]!==\"undefined\"){this._storage[u].value=t;return this}else{a=this._storage[u]=new r(e,t);i=n.prev}}else if(this._map){if(B.call(this._map,e)){V.call(this._map,e).value=t}else{a=new r(e,t);U.call(this._map,e,a);i=n.prev}}while((i=i.next)!==n){if(ce.SameValueZero(i.key,e)){i.value=t;return this}}a=a||new r(e,t);if(ce.SameValue(-0,e)){a.key=+0}a.next=this._head;a.prev=this._head.prev;a.prev.next=a;a.next.prev=a;this._size+=1;return this},\"delete\":function(t){o(this,\"delete\");var r=this._head;var n=r;var i=Yr(t,true);if(i!==null){if(typeof this._storage[i]===\"undefined\"){return false}n=this._storage[i].prev;delete this._storage[i]}else if(this._map){if(!B.call(this._map,t)){return false}n=V.call(this._map,t).prev;H.call(this._map,t)}while((n=n.next)!==r){if(ce.SameValueZero(n.key,t)){n.key=e;n.value=e;n.prev.next=n.next;n.next.prev=n.prev;this._size-=1;return true}}return false},clear:function clear(){o(this,\"clear\");this._map=G?new G:null;this._size=0;this._storage=Qr();var t=this._head;var r=t;var n=r.next;while((r=n)!==t){r.key=e;r.value=e;n=r.next;r.next=r.prev=t}t.next=t.prev=t},keys:function keys(){o(this,\"keys\");return new i(this,\"key\")},values:function values(){o(this,\"values\");return new i(this,\"value\")},entries:function entries(){o(this,\"entries\");return new i(this,\"key+value\")},forEach:function forEach(e){o(this,\"forEach\");var r=arguments.length>1?arguments[1]:null;var n=this.entries();for(var i=n.next();!i.done;i=n.next()){if(r){t(e,r,i.value[1],i.value[0],this)}else{e(i.value[1],i.value[0],this)}}}});Me(a,a.entries);return u}(),Set:function(){var e=function isSet(e){return e._es6set&&typeof e._storage!==\"undefined\"};var r=function requireSetSlot(t,r){if(!ce.TypeIsObject(t)||!e(t)){throw new TypeError(\"Set.prototype.\"+r+\" called on incompatible receiver \"+ce.ToString(t))}};var o;var i=function Set(){if(!(this instanceof Set)){throw new TypeError('Constructor Set requires \"new\"')}if(this&&this._es6set){throw new TypeError(\"Bad construction\")}var e=Ae(this,Set,o,{_es6set:true,\"[[SetData]]\":null,_storage:Qr()});if(!e._es6set){throw new TypeError(\"bad set\")}if(arguments.length>0){tn(Set,e,arguments[0])}return e};o=i.prototype;var a=function(e){var t=e;if(t===\"^null\"){return null}else if(t===\"^undefined\"){return void 0}else{var r=t.charAt(0);if(r===\"$\"){return C(t,1)}else if(r===\"n\"){return+C(t,1)}else if(r===\"b\"){return t===\"btrue\"}}return+t};var u=function ensureMap(e){if(!e[\"[[SetData]]\"]){var t=new rn.Map;e[\"[[SetData]]\"]=t;l(n(e._storage),function(e){var r=a(e);t.set(r,r)});e[\"[[SetData]]\"]=t}e._storage=null};m.getter(i.prototype,\"size\",function(){r(this,\"size\");if(this._storage){return n(this._storage).length}u(this);return this[\"[[SetData]]\"].size});b(i.prototype,{has:function has(e){r(this,\"has\");var t;if(this._storage&&(t=Yr(e))!==null){return!!this._storage[t]}u(this);return this[\"[[SetData]]\"].has(e)},add:function add(e){r(this,\"add\");var t;if(this._storage&&(t=Yr(e))!==null){this._storage[t]=true;return this}u(this);this[\"[[SetData]]\"].set(e,e);return this},\"delete\":function(e){r(this,\"delete\");var t;if(this._storage&&(t=Yr(e))!==null){var n=z(this._storage,t);return delete this._storage[t]&&n}u(this);return this[\"[[SetData]]\"][\"delete\"](e)},clear:function clear(){r(this,\"clear\");if(this._storage){this._storage=Qr()}if(this[\"[[SetData]]\"]){this[\"[[SetData]]\"].clear()}},values:function values(){r(this,\"values\");u(this);return new f(this[\"[[SetData]]\"].values())},entries:function entries(){r(this,\"entries\");u(this);return new f(this[\"[[SetData]]\"].entries())},forEach:function forEach(e){r(this,\"forEach\");var n=arguments.length>1?arguments[1]:null;var o=this;u(o);this[\"[[SetData]]\"].forEach(function(r,i){if(n){t(e,n,i,i,o)}else{e(i,i,o)}})}});h(i.prototype,\"keys\",i.prototype.values,true);Me(i.prototype,i.prototype.values);var f=function SetIterator(e){this.it=e};f.prototype={isSetIterator:true,next:function next(){if(!this.isSetIterator){throw new TypeError(\"Not a SetIterator\")}return this.it.next()}};Me(f.prototype);return i}()};var nn=S.Set&&!Set.prototype[\"delete\"]&&Set.prototype.remove&&Set.prototype.items&&Set.prototype.map&&Array.isArray((new Set).keys);if(nn){S.Set=rn.Set}if(S.Map||S.Set){var on=a(function(){return new Map([[1,2]]).get(1)===2});if(!on){S.Map=function Map(){if(!(this instanceof Map)){throw new TypeError('Constructor Map requires \"new\"')}var e=new G;if(arguments.length>0){en(Map,e,arguments[0])}delete e.constructor;Object.setPrototypeOf(e,S.Map.prototype);return e};S.Map.prototype=O(G.prototype);h(S.Map.prototype,\"constructor\",S.Map,true);m.preserveToString(S.Map,G)}var an=new Map;var un=function(){var e=new Map([[1,0],[2,0],[3,0],[4,0]]);e.set(-0,e);return e.get(0)===e&&e.get(-0)===e&&e.has(0)&&e.has(-0)}();var fn=an.set(1,2)===an;if(!un||!fn){ne(Map.prototype,\"set\",function set(e,r){t(U,this,e===0?0:e,r);return this})}if(!un){b(Map.prototype,{get:function get(e){return t(V,this,e===0?0:e)},has:function has(e){return t(B,this,e===0?0:e)}},true);m.preserveToString(Map.prototype.get,V);m.preserveToString(Map.prototype.has,B)}var sn=new Set;var cn=Set.prototype[\"delete\"]&&Set.prototype.add&&Set.prototype.has&&function(e){e[\"delete\"](0);e.add(-0);return!e.has(0)}(sn);var ln=sn.add(1)===sn;if(!cn||!ln){var pn=Set.prototype.add;Set.prototype.add=function add(e){t(pn,this,e===0?0:e);return this};m.preserveToString(Set.prototype.add,pn)}if(!cn){var vn=Set.prototype.has;Set.prototype.has=function has(e){return t(vn,this,e===0?0:e)};m.preserveToString(Set.prototype.has,vn);var yn=Set.prototype[\"delete\"];Set.prototype[\"delete\"]=function SetDelete(e){return t(yn,this,e===0?0:e)};m.preserveToString(Set.prototype[\"delete\"],yn)}var hn=w(S.Map,function(e){var t=new e([]);t.set(42,42);return t instanceof e});var bn=Object.setPrototypeOf&&!hn;var gn=function(){try{return!(S.Map()instanceof S.Map)}catch(e){return e instanceof TypeError}}();if(S.Map.length!==0||bn||!gn){S.Map=function Map(){if(!(this instanceof Map)){throw new TypeError('Constructor Map requires \"new\"')}var e=new G;if(arguments.length>0){en(Map,e,arguments[0])}delete e.constructor;Object.setPrototypeOf(e,Map.prototype);return e};S.Map.prototype=G.prototype;h(S.Map.prototype,\"constructor\",S.Map,true);m.preserveToString(S.Map,G)}var dn=w(S.Set,function(e){var t=new e([]);t.add(42,42);return t instanceof e});var mn=Object.setPrototypeOf&&!dn;var On=function(){try{return!(S.Set()instanceof S.Set)}catch(e){return e instanceof TypeError}}();if(S.Set.length!==0||mn||!On){var wn=S.Set;S.Set=function Set(){if(!(this instanceof Set)){throw new TypeError('Constructor Set requires \"new\"')}var e=new wn;if(arguments.length>0){tn(Set,e,arguments[0])}delete e.constructor;Object.setPrototypeOf(e,Set.prototype);return e};S.Set.prototype=wn.prototype;h(S.Set.prototype,\"constructor\",S.Set,true);m.preserveToString(S.Set,wn)}var jn=new S.Map;var Sn=!a(function(){return jn.keys().next().done});if(typeof S.Map.prototype.clear!==\"function\"||(new S.Set).size!==0||jn.size!==0||typeof S.Map.prototype.keys!==\"function\"||typeof S.Set.prototype.keys!==\"function\"||typeof S.Map.prototype.forEach!==\"function\"||typeof S.Set.prototype.forEach!==\"function\"||u(S.Map)||u(S.Set)||typeof jn.keys().next!==\"function\"||Sn||!hn){b(S,{Map:rn.Map,Set:rn.Set},true)}if(S.Set.prototype.keys!==S.Set.prototype.values){h(S.Set.prototype,\"keys\",S.Set.prototype.values,true)}Me(Object.getPrototypeOf((new S.Map).keys()));Me(Object.getPrototypeOf((new S.Set).keys()));if(c&&S.Set.prototype.has.name!==\"has\"){var Tn=S.Set.prototype.has;ne(S.Set.prototype,\"has\",function has(e){return t(Tn,this,e)})}}b(S,rn);Ce(S.Map);Ce(S.Set)}var In=function throwUnlessTargetIsObject(e){if(!ce.TypeIsObject(e)){throw new TypeError(\"target must be an object\")}};var En={apply:function apply(){return ce.Call(ce.Call,null,arguments)},construct:function construct(e,t){if(!ce.IsConstructor(e)){throw new TypeError(\"First argument must be a constructor.\")}var r=arguments.length>2?arguments[2]:e;if(!ce.IsConstructor(r)){throw new TypeError(\"new.target must be a constructor.\")}return ce.Construct(e,t,r,\"internal\")},deleteProperty:function deleteProperty(e,t){In(e);if(s){var r=Object.getOwnPropertyDescriptor(e,t);if(r&&!r.configurable){return false}}return delete e[t]},has:function has(e,t){In(e);return t in e}};if(Object.getOwnPropertyNames){Object.assign(En,{ownKeys:function ownKeys(e){In(e);var t=Object.getOwnPropertyNames(e);if(ce.IsCallable(Object.getOwnPropertySymbols)){x(t,Object.getOwnPropertySymbols(e))}return t}})}var Pn=function ConvertExceptionToBoolean(e){return!i(e)};if(Object.preventExtensions){Object.assign(En,{isExtensible:function isExtensible(e){In(e);return Object.isExtensible(e)},preventExtensions:function preventExtensions(e){In(e);return Pn(function(){return Object.preventExtensions(e)})}})}if(s){var Cn=function get(e,t,r){var n=Object.getOwnPropertyDescriptor(e,t);if(!n){var o=Object.getPrototypeOf(e);if(o===null){return void 0}return Cn(o,t,r)}if(\"value\"in n){return n.value}if(n.get){return ce.Call(n.get,r)}return void 0};var Mn=function set(e,r,n,o){var i=Object.getOwnPropertyDescriptor(e,r);if(!i){var a=Object.getPrototypeOf(e);if(a!==null){return Mn(a,r,n,o)}i={value:void 0,writable:true,enumerable:true,configurable:true}}if(\"value\"in i){if(!i.writable){return false}if(!ce.TypeIsObject(o)){return false}var u=Object.getOwnPropertyDescriptor(o,r);if(u){return ae.defineProperty(o,r,{value:n})}else{return ae.defineProperty(o,r,{value:n,writable:true,enumerable:true,configurable:true})}}if(i.set){t(i.set,o,n);return true}return false};Object.assign(En,{defineProperty:function defineProperty(e,t,r){In(e);return Pn(function(){return Object.defineProperty(e,t,r)})},getOwnPropertyDescriptor:function getOwnPropertyDescriptor(e,t){In(e);return Object.getOwnPropertyDescriptor(e,t)},get:function get(e,t){In(e);var r=arguments.length>2?arguments[2]:e;return Cn(e,t,r)},set:function set(e,t,r){In(e);var n=arguments.length>3?arguments[3]:e;return Mn(e,t,r,n)}})}if(Object.getPrototypeOf){var xn=Object.getPrototypeOf;En.getPrototypeOf=function getPrototypeOf(e){In(e);return xn(e)}}if(Object.setPrototypeOf&&En.getPrototypeOf){var Nn=function(e,t){var r=t;while(r){if(e===r){return true}r=En.getPrototypeOf(r)}return false};Object.assign(En,{setPrototypeOf:function setPrototypeOf(e,t){In(e);if(t!==null&&!ce.TypeIsObject(t)){throw new TypeError(\"proto must be an object or null\")}if(t===ae.getPrototypeOf(e)){return true}if(ae.isExtensible&&!ae.isExtensible(e)){return false}if(Nn(e,t)){return false}Object.setPrototypeOf(e,t);return true}})}var An=function(e,t){if(!ce.IsCallable(S.Reflect[e])){h(S.Reflect,e,t)}else{var r=a(function(){S.Reflect[e](1);S.Reflect[e](NaN);S.Reflect[e](true);return true});if(r){ne(S.Reflect,e,t)}}};Object.keys(En).forEach(function(e){An(e,En[e])});var Rn=S.Reflect.getPrototypeOf;if(c&&Rn&&Rn.name!==\"getPrototypeOf\"){ne(S.Reflect,\"getPrototypeOf\",function getPrototypeOf(e){return t(Rn,S.Reflect,e)})}if(S.Reflect.setPrototypeOf){if(a(function(){S.Reflect.setPrototypeOf(1,{});return true})){ne(S.Reflect,\"setPrototypeOf\",En.setPrototypeOf)}}if(S.Reflect.defineProperty){if(!a(function(){var e=!S.Reflect.defineProperty(1,\"test\",{value:1});var t=typeof Object.preventExtensions!==\"function\"||!S.Reflect.defineProperty(Object.preventExtensions({}),\"test\",{});return e&&t})){ne(S.Reflect,\"defineProperty\",En.defineProperty)}}if(S.Reflect.construct){if(!a(function(){var e=function F(){};return S.Reflect.construct(function(){},[],e)instanceof e})){ne(S.Reflect,\"construct\",En.construct)}}if(String(new Date(NaN))!==\"Invalid Date\"){var _n=Date.prototype.toString;var kn=function toString(){var e=+this;if(e!==e){return\"Invalid Date\"}return ce.Call(_n,this)};ne(Date.prototype,\"toString\",kn)}var Ln={anchor:function anchor(e){return ce.CreateHTML(this,\"a\",\"name\",e)},big:function big(){return ce.CreateHTML(this,\"big\",\"\",\"\")},blink:function blink(){return ce.CreateHTML(this,\"blink\",\"\",\"\")},bold:function bold(){return ce.CreateHTML(this,\"b\",\"\",\"\")},fixed:function fixed(){return ce.CreateHTML(this,\"tt\",\"\",\"\")},fontcolor:function fontcolor(e){return ce.CreateHTML(this,\"font\",\"color\",e)},fontsize:function fontsize(e){return ce.CreateHTML(this,\"font\",\"size\",e)},italics:function italics(){return ce.CreateHTML(this,\"i\",\"\",\"\")},link:function link(e){return ce.CreateHTML(this,\"a\",\"href\",e)},small:function small(){return ce.CreateHTML(this,\"small\",\"\",\"\")},strike:function strike(){return ce.CreateHTML(this,\"strike\",\"\",\"\")},sub:function sub(){return ce.CreateHTML(this,\"sub\",\"\",\"\")},sup:function sub(){return ce.CreateHTML(this,\"sup\",\"\",\"\")}};l(Object.keys(Ln),function(e){var r=String.prototype[e];var n=false;if(ce.IsCallable(r)){var o=t(r,\"\",' \" ');var i=P([],o.match(/\"/g)).length;n=o!==o.toLowerCase()||i>2}else{n=true}if(n){ne(String.prototype,e,Ln[e])}});var Fn=function(){if(!oe){return false}var e=typeof JSON===\"object\"&&typeof JSON.stringify===\"function\"?JSON.stringify:null;if(!e){return false}if(typeof e($())!==\"undefined\"){return true}if(e([$()])!==\"[null]\"){return true}var t={a:$()};t[$()]=true;if(e(t)!==\"{}\"){return true}return false}();var Dn=a(function(){if(!oe){return true}return JSON.stringify(Object($()))===\"{}\"&&JSON.stringify([Object($())])===\"[{}]\"});if(Fn||!Dn){var zn=JSON.stringify;ne(JSON,\"stringify\",function stringify(e){if(typeof e===\"symbol\"){return}var n;if(arguments.length>1){n=arguments[1]}var o=[e];if(!r(n)){var i=ce.IsCallable(n)?n:null;var a=function(e,r){var n=i?t(i,this,e,r):r;if(typeof n!==\"symbol\"){if(re.symbol(n)){return Nt({})(n)}else{return n}}};o.push(a)}else{o.push(n)}if(arguments.length>2){o.push(arguments[2])}return zn.apply(this,o)})}return S});\n//# sourceMappingURL=es6-shim.map\n","/// <reference path=\"node_modules/es6-shim/es6-shim.min.js\" />\n\n/*\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\n * Copyright (c) 2018 SIL International\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n\ntype Resolve<T> = (value?: T | PromiseLike<T>) => void;\ntype Reject = (reason?: any) => void;\ninterface PromiseCallbacks<T> {\n  resolve: Resolve<T>;\n  reject: Reject;\n}\n\nnamespace com.keyman.text.prediction {\n  /**\n   * Associate tokens with promises.\n   *\n   * First, .make() a promise -- associate a token with resolve/reject callbacks.\n   *\n   * You can either .keep() a promise -- resolve() and forget it;\n   * Or you may also .break() a promise -- reject() and forget it.\n   * \n   * <T> is the type of resolved value (value yielded successfully by promise).\n   */\n  export class PromiseStore<T> {\n    // IE11 offers partial support for new Map().\n    // Assume only .get(), .set(), .has(), .delete(), and .size work.\n    // See: http://kangax.github.io/compat-table/es6/#test-Map\n    private _promises: Map<Token, PromiseCallbacks<T>>;\n    constructor() {\n      this._promises = new Map();\n    }\n    /**\n     * How many promises are currently being tracked?\n     */\n    get length(): number {\n      return this._promises.size;\n    }\n    /**\n     * Associate a token with its respective resolve and reject callbacks.\n     */\n    make(token: Token, resolve: Resolve<T>, reject: Reject): void {\n      if (this._promises.has(token)) {\n        return reject(`Existing request with token ${token}`);\n      }\n      this._promises.set(token, { reject, resolve });\n    }\n    /**\n     * Resolve the promise associated with a token (with a value!).\n     * Once the promise is resolved, the token is removed..\n     */\n    keep(token: Token, value: T) {\n      let callbacks = this._promises.get(token);\n      if (!callbacks) {\n        throw new Error(`No promise associated with token: ${token}`);\n      }\n      let accept = callbacks.resolve;\n      this._promises.delete(token);\n      return accept(value);\n    }\n    /**\n     * Instantly reject and forget a promise associated with the token.\n     */\n    break(token: Token, reason?: any): void {\n      let callbacks = this._promises.get(token);\n      if (!callbacks) {\n        throw new Error(`No promise associated with token: ${token}`);\n      }\n      this._promises.delete(token);\n      callbacks.reject(reason);\n    }\n  }\n}","/*\n * Copyright (c) 2018 National Research Council Canada (author: Eddie A. Santos)\n * Copyright (c) 2018 SIL International\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy of\n * this software and associated documentation files (the \"Software\"), to deal in\n * the Software without restriction, including without limitation the rights to\n * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n * the Software, and to permit persons to whom the Software is furnished to do so,\n * subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/// <reference path=\"node_modules/es6-shim/es6-shim.min.js\" />\n/// <reference path=\"promise-store.ts\" />\n\n/**\n * Top-level interface to the Language Modelling layer, or \"LMLayer\" for short.\n * \n * The Language Modelling layer provides a way for keyboards to offer prediction and\n * correction functionalities. The LMLayer proper runs within a Web Worker, however,\n * this class is intended to run in the main thread, and automatically spawn a Web\n * Worker, capable of offering predictions.\n * \n * Since the Worker runs in a different thread, the public methods of this class are\n * asynchronous. Methods of note include:\n * \n *  - #loadModel() -- loads a specified model file\n *  - #predict() -- ask the LMLayer to offer suggestions (predictions or corrections) for\n *                  the input event\n *  - #unloadModel() -- unloads the LMLayer's currently loaded model, preparing it to\n *                          receive (load) a new model\n * \n * The top-level LMLayer will automatically starts up its own Web Worker.\n */\n\nnamespace com.keyman.text.prediction {\n  export class LMLayer {\n    /**\n     * The underlying worker instance. By default, this is the LMLayerWorker. \n     */\n    private _worker: Worker;\n    /** Call this when the LMLayer has sent us the 'ready' message! */\n    private _declareLMLayerReady: (conf: Configuration) => void;\n    private _predictPromises: PromiseStore<Suggestion[]>;\n    private _wordbreakPromises: PromiseStore<USVString>;\n    private _nextToken: number;\n    private capabilities: Capabilities;\n\n    /**\n     * Construct the top-level LMLayer interface. This also starts the underlying Worker.\n     * \n     * @param uri URI of the underlying LMLayer worker code. This will usually be a blob:\n     *            or file: URI. If uri is not provided, this will start the default Worker.\n     */\n    constructor(capabilities: Capabilities, worker?: Worker) {\n      // Either use the given worker, or instantiate the default worker.\n      this._worker = worker || DefaultWorker.constructInstance();\n      this._worker.onmessage = this.onMessage.bind(this)\n      this._declareLMLayerReady = null;\n      this._predictPromises = new PromiseStore;\n      this._wordbreakPromises = new PromiseStore<USVString>();\n      this._nextToken = Number.MIN_SAFE_INTEGER;\n\n      this.sendConfig(capabilities);\n    }\n\n    /**\n     * Initializes the LMLayer worker with the host platform's capability set.\n     * \n     * @param capabilities The host platform's capability spec - a model cannot assume access to more context\n     *                     than specified by this parameter.\n     */\n    private sendConfig(capabilities: Capabilities) {\n      this._worker.postMessage({\n        message: 'config',\n        capabilities: capabilities\n      });\n    }\n\n    /**\n     * Initializes the LMLayer worker with a path to the desired model file.\n     */\n    loadModel(modelFilePath: string): Promise<Configuration> {\n      return new Promise((resolve, _reject) => {\n        // Sets up so the promise is resolved in the onMessage() callback, when it receives\n        // the 'ready' message.\n        this._declareLMLayerReady = resolve;\n\n        this._worker.postMessage({\n          message: 'load',\n          model: modelFilePath\n        });\n      });\n    }\n\n    /**\n     * Unloads the previously-active model from memory, resetting the LMLayer to prep\n     * for transition to use of a new model.\n     */\n    public unloadModel() {\n      this._worker.postMessage({\n        message: 'unload'\n      });\n    }\n\n    predict(transform: Transform | Distribution<Transform>, context: Context): Promise<Suggestion[]> {\n      let token = this._nextToken++;\n      return new Promise((resolve, reject) => {\n        this._predictPromises.make(token, resolve, reject);\n        this._worker.postMessage({\n          message: 'predict',\n          token: token,\n          transform: transform,\n          context: context,\n        });\n      });\n    }\n\n    wordbreak(context: Context): Promise<USVString> {\n      let token = this._nextToken++;\n      return new Promise((resolve, reject) => {\n        this._wordbreakPromises.make(token, resolve, reject);\n        this._worker.postMessage({\n          message: 'wordbreak',\n          token: token,\n          context: context\n        })\n      });\n    }\n\n    // TODO: asynchronous close() method.\n    //       Worker code must recognize message and call self.close().\n\n    private onMessage(event: MessageEvent): void {\n      let payload: OutgoingMessage = event.data;\n      if (payload.message === 'error') {\n        console.error(payload.log);\n        if(payload.error) {\n          console.error(payload.error);\n        }\n      }\n      else if (payload.message === 'ready') {\n        this._declareLMLayerReady(event.data.configuration);\n      } else if (payload.message === 'suggestions') {\n        this._predictPromises.keep(payload.token, payload.suggestions);\n      } else if (payload.message === 'currentword') {\n        this._wordbreakPromises.keep(payload.token, payload.word);\n      } else {\n        // This branch should never execute, but just in case...\n        //@ts-ignore\n        throw new Error(`Message not implemented: ${payload.message}`);\n      }\n    }\n\n    /**\n     * Clears out any computational resources in use by the LMLayer, including shutting\n     * down any internal WebWorkers.\n     */\n    public shutdown() {\n      this._worker.terminate();\n    }\n\n    /**\n     * Given a function, this utility returns the source code within it, as a string.\n     * This is intended to unwrap the \"wrapped\" source code created in the LMLayerWorker\n     * build process.\n     *\n     * @param fn The function whose body will be returned.\n     */\n    static unwrap(fn: Function): string {\n      let wrapper = fn.toString();\n      let match = wrapper.match(/function[^{]+{((?:.|\\r|\\n)+)}[^}]*$/);\n      return match[1];\n    }\n  }\n}\n\n(function () {\n  let ns = com.keyman.text.prediction;\n\n  // Let LMLayer be available both in the browser and in Node.\n  if (typeof module !== 'undefined' && typeof module.exports !== 'undefined') {\n    module.exports = ns.LMLayer;\n    //@ts-ignore\n    ns.LMLayer.PromiseStore = ns.PromiseStore;\n  } else {\n    //@ts-ignore\n    window.LMLayer = ns.LMLayer;\n  }\n}());","///<reference path=\"../../../node_modules/@keymanapp/lexical-model-layer/embedded_worker.d.ts\" />\n///<reference path=\"../../../node_modules/@keymanapp/lexical-model-layer/message.d.ts\" />\n///<reference path=\"../../../node_modules/@keymanapp/lexical-model-layer/index.ts\" />\n///<reference path=\"../../includes/events.ts\" />\n\nnamespace com.keyman.text.prediction {\n  export interface ModelSpec {\n    /**\n     * The model's unique identifier.\n     */\n    id: string;\n\n    /**\n     * The list of supported BCP-47 language codes.  Only one language should be supported,\n     * although multiple variants based on region code (at min) may be specified.\n     */\n    languages: string[];\n\n    /**\n     * The path/URL to the file that defines the model.\n     */\n    path: string;\n  }\n\n  /**\n   * Corresponds to the 'suggestionsready' LanguageProcessor event.\n   */\n  export type ReadySuggestionsHandler = (prediction: ReadySuggestions) => boolean;\n\n  export type StateChangeEnum = 'active'|'inactive';\n  /**\n   * Corresponds to the 'statechange' LanguageProcessor event.\n   */\n  export type StateChangeHandler = (state: StateChangeEnum) => boolean;\n\n  /**\n   * Covers both 'tryaccept' and 'tryrevert' events.\n   */\n  export type TryUIHandler = (source: string) => boolean;\n\n  export type InvalidateSourceEnum = 'new'|'context';\n\n  /**\n   * Corresponds to the 'invalidatesuggestions' LanguageProcessor event.\n   */\n  export type InvalidateSuggestionsHandler = (source: InvalidateSourceEnum) => boolean;\n\n  export class TranscriptionContext implements Context {\n    left: string;\n    right?: string;\n\n    startOfBuffer: boolean;\n    endOfBuffer: boolean;\n\n    constructor(mock: Mock, config: Configuration) {\n      this.left = mock.getTextBeforeCaret();\n      this.startOfBuffer = this.left._kmwLength() > config.leftContextCodePoints;\n      if(!this.startOfBuffer) {\n        // Our custom substring version will return the last n characters if param #1 is given -n.\n        this.left = this.left._kmwSubstr(-config.leftContextCodePoints);\n      }\n\n      this.right = mock.getTextAfterCaret();\n      this.endOfBuffer = this.right._kmwLength() > config.leftContextCodePoints;\n      if(!this.endOfBuffer) {\n        this.right = this.right._kmwSubstr(0, config.leftContextCodePoints);\n      }\n    }\n  }\n\n  export class ReadySuggestions {\n    suggestions: Suggestion[];\n    transcriptionID: number;\n\n    constructor(suggestions: Suggestion[], id: number) {\n      this.suggestions = suggestions;\n      this.transcriptionID = id;\n    }\n  }\n\n  type SupportedEventNames = \"suggestionsready\" | \"invalidatesuggestions\" | \"statechange\" | \"tryaccept\" | \"tryrevert\";\n  type SupportedEventHandler = InvalidateSuggestionsHandler | ReadySuggestionsHandler | StateChangeHandler | TryUIHandler;\n\n  export class LanguageProcessor extends EventEmitter {\n    private lmEngine: LMLayer;\n    private currentModel?: ModelSpec;\n    private configuration?: Configuration;\n    private currentPromise?: Promise<Suggestion[]>;\n\n    private recentTranscriptions: Transcription[] = [];\n\n    private _mayPredict: boolean = true;\n    private _mayCorrect: boolean = true;\n\n    private static readonly TRANSCRIPTION_BUFFER: 10;\n\n    public init(supportsRightDeletions: boolean = false) {\n      // Establishes KMW's platform 'capabilities', which limit the range of context a LMLayer\n      // model may expect.\n      let capabilities: Capabilities = {\n        maxLeftContextCodePoints: 64,\n        // Since the apps don't yet support right-deletions.\n        maxRightContextCodePoints: supportsRightDeletions ? 0 : 64\n      }\n\n      if(!this.canEnable()) {\n        return;\n      }\n\n      this.lmEngine = new LMLayer(capabilities);\n    }\n\n    public get activeModel(): ModelSpec {\n      return this.currentModel;\n    }\n\n    public unloadModel() {\n      this.lmEngine.unloadModel();\n      delete this.currentModel;\n      delete this.configuration;\n\n      this.emit('statechange', 'inactive');\n    }\n\n    loadModel(model: ModelSpec): Promise<void> {\n      if(!model) {\n        throw new Error(\"Null reference not allowed.\");\n      }\n\n      let file = model.path;\n      let lp = this;\n\n      // We should wait until the model is successfully loaded before setting our state values.\n      return this.lmEngine.loadModel(file).then(function(config: Configuration) { \n        lp.currentModel = model;\n        lp.configuration = config;\n\n        try {\n          lp.emit('statechange', 'active');\n        } catch (err) {\n          // Does this provide enough logging information?\n          console.error(\"Could not load model '\" + model.id + \"': \" + (err as Error).message);\n        }\n      });\n    }\n\n    public invalidateContext(outputTarget?: OutputTarget) {\n      // Signal to any predictive text UI that the context has changed, invalidating recent predictions.\n      this.emit('invalidatesuggestions', 'context');\n\n      // If there's no active model, there can be no predictions.\n      // We'll also be missing important data needed to even properly REQUEST the predictions.\n      if(!this.currentModel || !this.configuration) {\n        return;\n      }\n      \n      if(outputTarget) {\n        this.predict_internal(outputTarget.buildTranscriptionFrom(outputTarget, null));\n      }\n    }\n\n    public wordbreak(target: OutputTarget): Promise<string> {\n      if(!this.isActive) {\n        return null;\n      }\n\n      let context = new TranscriptionContext(Mock.from(target), this.configuration);\n      return this.lmEngine.wordbreak(context);\n    }\n\n    public predict(transcription: Transcription): Promise<Suggestion[]> {\n      if(!this.isActive) {\n        return null;\n      }\n\n      // If there's no active model, there can be no predictions.\n      // We'll also be missing important data needed to even properly REQUEST the predictions.\n      if(!this.currentModel || !this.configuration) {\n        return null;\n      }\n            \n      // We've already invalidated any suggestions resulting from any previously-existing Promise -\n      // may as well officially invalidate them via event.\n      this.emit(\"invalidatesuggestions\", 'new');\n\n      return this.predict_internal(transcription);\n    }\n\n    public predictFromTarget(outputTarget: OutputTarget): Promise<Suggestion[]> {\n      if(!outputTarget) {\n        return null;\n      }\n\n      let transcription = outputTarget.buildTranscriptionFrom(outputTarget, null);\n      return this.predict(transcription);\n    }\n\n    /**\n     * Called internally to do actual predictions after any relevant \"invalidatesuggestions\" events\n     * have been raised.\n     * @param transcription The triggering transcription (if it exists)\n     */\n    private predict_internal(transcription: Transcription): Promise<Suggestion[]> {\n      if(!transcription) {\n        return null;\n      }\n\n      let context = new TranscriptionContext(transcription.preInput, this.configuration);\n      this.recordTranscription(transcription);\n\n      let transform = transcription.transform;\n      var promise = this.currentPromise = this.lmEngine.predict(transcription.alternates || transcription.transform, context);\n\n      let lp = this;\n      return promise.then(function(suggestions: Suggestion[]) {\n        if(promise == lp.currentPromise) {\n          let result = new ReadySuggestions(suggestions, transform.id);\n          lp.emit(\"suggestionsready\", result);\n          lp.currentPromise = null;\n        }\n\n        return suggestions;\n      })\n    }\n\n    private recordTranscription(transcription: Transcription) {\n      this.recentTranscriptions.push(transcription);\n\n      if(this.recentTranscriptions.length > LanguageProcessor.TRANSCRIPTION_BUFFER) {\n        this.recentTranscriptions.splice(0, 1);\n      }\n    }\n\n    /**\n     * Retrieves the context and output state of KMW immediately before the prediction with \n     * token `id` was generated.  Must correspond to a 'recent' one, as only so many are stored\n     * in `ModelManager`'s history buffer.\n     * @param id A unique identifier corresponding to a recent `Transcription`.\n     * @returns The matching `Transcription`, or `null` none is found.\n     */\n    public getPredictionState(id: number): Transcription {\n      let match = this.recentTranscriptions.filter(function(t: Transcription) {\n        return t.token == id;\n      })\n\n      return match.length == 0 ? null : match[0];\n    }\n\n    public shutdown() {\n      this.lmEngine.shutdown();\n    }\n\n    public get isActive(): boolean {\n      if(!this.canEnable()) {\n        this._mayPredict = false;\n        return false;\n      }\n      return this.activeModel && this._mayPredict;\n    }\n\n    public canEnable(): boolean {\n      // Is overridden for dom-aware KMW in case of old IE versions.\n      return true;\n    }\n\n    public get mayPredict() {\n      return this._mayPredict;\n    }\n\n    public set mayPredict(flag: boolean) {\n      if(!this.canEnable()) {\n        return;\n      }\n\n      let oldVal = this._mayPredict;\n      this._mayPredict = flag;\n\n      if(oldVal != flag) {\n        this.emit('statechange', flag ? 'active' : 'inactive');\n      }\n    }\n\n    public get mayCorrect() {\n      return this._mayCorrect;\n    }\n\n    public set mayCorrect(flag: boolean) {\n      this._mayCorrect = flag;\n    }\n\n    public tryAcceptSuggestion(source: string): boolean {\n      // Handlers of this event should return 'false' when the 'try' is successful.\n      return !this.emit('tryaccept', source);\n    }\n\n    public tryRevertSuggestion(): boolean {\n      // Handlers of this event should return 'false' when the 'try' is successful.\n      return !this.emit('tryrevert', null);\n    }\n  }\n}","// Defines a 'polyfill' of sorts for NPM's events module\n/// <reference path=\"../includes/events.ts\" />\n/// <reference path=\"../../node_modules/@keymanapp/keyboard-processor/src/text/keyboardProcessor.ts\" />\n/// <reference path=\"prediction/languageProcessor.ts\" />\n\nnamespace com.keyman.text {\n  export class InputProcessor {\n    public static readonly DEFAULT_OPTIONS: ProcessorInitOptions = {\n      baseLayout: 'us'\n    }\n\n    private kbdProcessor: KeyboardProcessor;\n    private lngProcessor: prediction.LanguageProcessor;\n\n    constructor(options?: ProcessorInitOptions) {\n      if(!options) {\n        options = InputProcessor.DEFAULT_OPTIONS;\n      }\n\n      this.kbdProcessor = new KeyboardProcessor(options);\n      this.lngProcessor = new prediction.LanguageProcessor();\n    }\n\n    public get languageProcessor(): prediction.LanguageProcessor {\n      return this.lngProcessor;\n    }\n\n    public get keyboardProcessor(): KeyboardProcessor {\n      return this.kbdProcessor;\n    }\n\n    public get keyboardInterface(): text.KeyboardInterface {\n      return this.keyboardProcessor.keyboardInterface;\n    }\n\n    public get activeKeyboard(): keyboards.Keyboard {\n      return this.keyboardInterface.activeKeyboard;\n    }\n\n    public set activeKeyboard(keyboard: keyboards.Keyboard) {\n      this.keyboardInterface.activeKeyboard = keyboard;\n\n      // All old deadkeys and keyboard-specific cache should immediately be invalidated\n      // on a keyboard change.\n      this.resetContext();\n    }\n\n    public get activeModel(): prediction.ModelSpec {\n      return this.languageProcessor.activeModel;\n    }\n\n        /**\n     * Simulate a keystroke according to the touched keyboard button element\n     *\n     * Handles default output and keyboard processing for both OSK and physical keystrokes.\n     * \n     * @param       {Object}      e      The abstracted KeyEvent to use for keystroke processing\n     */\n    processKeyEvent(keyEvent: KeyEvent) {\n      let formFactor = keyEvent.device.formFactor;\n\n      // Determine the current target for text output and create a \"mock\" backup\n      // of its current, pre-input state.  Current, long-existing assumption - it's DOM-backed.\n      let outputTarget = keyEvent.Ltarg;\n      let fromOSK = keyEvent.isSynthetic;\n\n      // The default OSK layout for desktop devices does not include nextlayer info, relying on modifier detection here.\n      // It's the OSK equivalent to doModifierPress on 'desktop' form factors.\n      if((formFactor == FormFactor.Desktop || !this.activeKeyboard || this.activeKeyboard.usesDesktopLayoutOnDevice(keyEvent.device)) && fromOSK) {\n        // If it's a desktop OSK style and this triggers a layer change,\n        // a modifier key was clicked.  No output expected, so it's safe to instantly exit.\n        if(this.keyboardProcessor.selectLayer(keyEvent)) {\n          return true;\n        }\n      }\n\n      // Will handle keystroke-based non-layer change modifier & state keys, mapping them through the physical keyboard's version\n      // of state management.\n      if(!fromOSK && this.keyboardProcessor.doModifierPress(keyEvent, !fromOSK)) {\n        return true;\n      }\n\n      // If suggestions exist AND space is pressed, accept the suggestion and do not process the keystroke.\n      // If a suggestion was just accepted AND backspace is pressed, revert the change and do not process the backspace.\n      // We check the first condition here, while the prediction UI handles the second through the try__() methods below.\n      if(this.languageProcessor.isActive) {\n        // The following code relies on JS's logical operator \"short-circuit\" properties to prevent unwanted triggering of the second condition.\n\n        // Can the suggestion UI revert a recent suggestion?  If so, do that and swallow the backspace.\n        if((keyEvent.kName == \"K_BKSP\" || keyEvent.Lcode == Codes.keyCodes[\"K_BKSP\"]) && this.languageProcessor.tryRevertSuggestion()) {\n          return;\n          // Can the suggestion UI accept an existing suggestion?  If so, do that and swallow the space character.\n        } else if((keyEvent.kName == \"K_SPACE\" || keyEvent.Lcode == Codes.keyCodes[\"K_SPACE\"]) && this.languageProcessor.tryAcceptSuggestion('space')) {\n          return;\n        }\n      }\n\n      // // ...end I3363 (Build 301)\n\n      let preInputMock = Mock.from(outputTarget);\n      let ruleBehavior = this.keyboardProcessor.processKeystroke(keyEvent, outputTarget);\n\n      // Swap layer as appropriate.\n      if(keyEvent.kNextLayer) {\n        this.keyboardProcessor.selectLayer(keyEvent);\n      }\n      \n      // Should we swallow any further processing of keystroke events for this keydown-keypress sequence?\n      if(ruleBehavior != null) {\n        let alternates: Alternate[];\n\n        // If we're performing a 'default command', it's not a standard 'typing' event - don't do fat-finger stuff.\n        // Also, don't do fat-finger stuff if predictive text isn't enabled.\n        if(this.languageProcessor.isActive && !ruleBehavior.triggersDefaultCommand) {\n          // Note - we don't yet do fat-fingering with longpress keys.\n          if(keyEvent.keyDistribution && keyEvent.kbdLayer) {\n            let activeLayout = this.activeKeyboard.layout(keyEvent.device.formFactor);\n            alternates = [];\n    \n            for(let pair of keyEvent.keyDistribution) {\n              let mock = Mock.from(preInputMock);\n              \n              let altKey = activeLayout.getLayer(keyEvent.kbdLayer).getKey(pair.keyId);\n              if(!altKey) {\n                console.warn(\"Potential fat-finger key could not be found in layer!\");\n                continue;\n              }\n\n              let altEvent = altKey.constructKeyEvent(this.keyboardProcessor, mock, keyEvent.device);\n              let alternateBehavior = this.keyboardProcessor.processKeystroke(altEvent, mock);\n              if(alternateBehavior) {\n                // TODO: if alternateBehavior.beep == true, set 'p' to 0.  It's a disallowed key sequence,\n                //       so a user should never have intended to type it.  Should probably renormalize \n                //       the distribution afterward, though...\n                \n                let transform: Transform = alternateBehavior.transcription.transform;\n                \n                // Ensure that the alternate's token id matches that of the current keystroke, as we only\n                // record the matched rule's context (since they match)\n                transform.id = ruleBehavior.transcription.token;\n                alternates.push({sample: transform, 'p': pair.p});\n              }\n            }\n          }\n        }\n\n        // Now that we've done all the keystroke processing needed, ensure any extra effects triggered\n        // by the actual keystroke occur.\n        ruleBehavior.finalize(this.keyboardProcessor);\n\n        // -- All keystroke (and 'alternate') processing is now complete.  Time to finalize everything! --\n        \n        // Notify the ModelManager of new input - it's predictive text time!\n        ruleBehavior.transcription.alternates = alternates;\n        // Yes, even for ruleBehavior.triggersDefaultCommand.  Those tend to change the context.\n        ruleBehavior.predictionPromise = this.languageProcessor.predict(ruleBehavior.transcription);\n\n        // Text did not change (thus, no text \"input\") if we tabbed or merely moved the caret.\n        if(!ruleBehavior.triggersDefaultCommand) {\n          // For DOM-aware targets, this will trigger a DOM event page designers may listen for.\n          outputTarget.doInputEvent();\n        }\n      }\n\n      /* I732 END - 13/03/2007 MCD: End Positional Layout support in OSK */\n\n      // TODO:  rework the return value to be `ruleBehavior` instead.  Functions that call this one are\n      //        the ones that should worry about event handler returns, etc.  Not this one.\n      //\n      //        They should also be the ones to handle the TODOs seen earlier in this function -\n      //        once THOSE are properly relocated.  (They're too DOM-heavy to remain in web-core.)\n\n      // Only return true (for the eventual event handler's return value) if we didn't match a rule.\n      return ruleBehavior;\n    }\n\n    public resetContext() {\n      this.keyboardProcessor.resetContext();\n      this.languageProcessor.invalidateContext();\n    }\n  }\n}"]}