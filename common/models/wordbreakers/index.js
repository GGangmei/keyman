"use strict";
var wordBreakers;
(function (wordBreakers) {
    /**
     * Splits ASCII words.
     *
     * @param phrase
     */
    function ascii(phrase) {
        var matchWord = /[A-Za-z0-9']+/g;
        var words = [];
        var match;
        while ((match = matchWord.exec(phrase)) !== null) {
            words.push(new RegExpDerivedSpan(match[0], match.index));
        }
        return words;
    }
    wordBreakers.ascii = ascii;
    /**
     * A concrete span class that derives its properties from the result of
     * RegExp.exec() array.
     */
    var RegExpDerivedSpan = /** @class */ (function () {
        function RegExpDerivedSpan(text, start) {
            this.text = text;
            this.start = start;
        }
        Object.defineProperty(RegExpDerivedSpan.prototype, "length", {
            get: function () {
                return this.text.length;
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(RegExpDerivedSpan.prototype, "end", {
            get: function () {
                return this.start + this.text.length;
            },
            enumerable: true,
            configurable: true
        });
        return RegExpDerivedSpan;
    }());
})(wordBreakers || (wordBreakers = {}));
var wordBreakers;
(function (wordBreakers) {
    var data;
    (function (data) {
        ;
        data.WORD_BREAK_PROPERTY = [
            [/*start*/ 0x0, 0 /* Other */],
            [/*start*/ 0xA, 1 /* LF */],
            [/*start*/ 0xB, 2 /* Newline */],
            [/*start*/ 0xD, 3 /* CR */],
            [/*start*/ 0xE, 0 /* Other */],
            [/*start*/ 0x20, 4 /* WSegSpace */],
            [/*start*/ 0x21, 0 /* Other */],
            [/*start*/ 0x22, 5 /* Double_Quote */],
            [/*start*/ 0x23, 0 /* Other */],
            [/*start*/ 0x27, 6 /* Single_Quote */],
            [/*start*/ 0x28, 0 /* Other */],
            [/*start*/ 0x2C, 7 /* MidNum */],
            [/*start*/ 0x2D, 0 /* Other */],
            [/*start*/ 0x2E, 8 /* MidNumLet */],
            [/*start*/ 0x2F, 0 /* Other */],
            [/*start*/ 0x30, 9 /* Numeric */],
            [/*start*/ 0x3A, 10 /* MidLetter */],
            [/*start*/ 0x3B, 7 /* MidNum */],
            [/*start*/ 0x3C, 0 /* Other */],
            [/*start*/ 0x41, 11 /* ALetter */],
            [/*start*/ 0x5B, 0 /* Other */],
            [/*start*/ 0x5F, 12 /* ExtendNumLet */],
            [/*start*/ 0x60, 0 /* Other */],
            [/*start*/ 0x61, 11 /* ALetter */],
            [/*start*/ 0x7B, 0 /* Other */],
            [/*start*/ 0x85, 2 /* Newline */],
            [/*start*/ 0x86, 0 /* Other */],
            [/*start*/ 0xAA, 11 /* ALetter */],
            [/*start*/ 0xAB, 0 /* Other */],
            [/*start*/ 0xAD, 13 /* Format */],
            [/*start*/ 0xAE, 0 /* Other */],
            [/*start*/ 0xB5, 11 /* ALetter */],
            [/*start*/ 0xB6, 0 /* Other */],
            [/*start*/ 0xB7, 10 /* MidLetter */],
            [/*start*/ 0xB8, 0 /* Other */],
            [/*start*/ 0xBA, 11 /* ALetter */],
            [/*start*/ 0xBB, 0 /* Other */],
            [/*start*/ 0xC0, 11 /* ALetter */],
            [/*start*/ 0xD7, 0 /* Other */],
            [/*start*/ 0xD8, 11 /* ALetter */],
            [/*start*/ 0xF7, 0 /* Other */],
            [/*start*/ 0xF8, 11 /* ALetter */],
            [/*start*/ 0x2D8, 0 /* Other */],
            [/*start*/ 0x2DE, 11 /* ALetter */],
            [/*start*/ 0x300, 14 /* Extend */],
            [/*start*/ 0x370, 11 /* ALetter */],
            [/*start*/ 0x375, 0 /* Other */],
            [/*start*/ 0x376, 11 /* ALetter */],
            [/*start*/ 0x378, 0 /* Other */],
            [/*start*/ 0x37A, 11 /* ALetter */],
            [/*start*/ 0x37E, 7 /* MidNum */],
            [/*start*/ 0x37F, 11 /* ALetter */],
            [/*start*/ 0x380, 0 /* Other */],
            [/*start*/ 0x386, 11 /* ALetter */],
            [/*start*/ 0x387, 10 /* MidLetter */],
            [/*start*/ 0x388, 11 /* ALetter */],
            [/*start*/ 0x38B, 0 /* Other */],
            [/*start*/ 0x38C, 11 /* ALetter */],
            [/*start*/ 0x38D, 0 /* Other */],
            [/*start*/ 0x38E, 11 /* ALetter */],
            [/*start*/ 0x3A2, 0 /* Other */],
            [/*start*/ 0x3A3, 11 /* ALetter */],
            [/*start*/ 0x3F6, 0 /* Other */],
            [/*start*/ 0x3F7, 11 /* ALetter */],
            [/*start*/ 0x482, 0 /* Other */],
            [/*start*/ 0x483, 14 /* Extend */],
            [/*start*/ 0x48A, 11 /* ALetter */],
            [/*start*/ 0x530, 0 /* Other */],
            [/*start*/ 0x531, 11 /* ALetter */],
            [/*start*/ 0x557, 0 /* Other */],
            [/*start*/ 0x559, 11 /* ALetter */],
            [/*start*/ 0x55D, 0 /* Other */],
            [/*start*/ 0x55E, 11 /* ALetter */],
            [/*start*/ 0x55F, 10 /* MidLetter */],
            [/*start*/ 0x560, 11 /* ALetter */],
            [/*start*/ 0x589, 7 /* MidNum */],
            [/*start*/ 0x58A, 11 /* ALetter */],
            [/*start*/ 0x58B, 0 /* Other */],
            [/*start*/ 0x591, 14 /* Extend */],
            [/*start*/ 0x5BE, 0 /* Other */],
            [/*start*/ 0x5BF, 14 /* Extend */],
            [/*start*/ 0x5C0, 0 /* Other */],
            [/*start*/ 0x5C1, 14 /* Extend */],
            [/*start*/ 0x5C3, 0 /* Other */],
            [/*start*/ 0x5C4, 14 /* Extend */],
            [/*start*/ 0x5C6, 0 /* Other */],
            [/*start*/ 0x5C7, 14 /* Extend */],
            [/*start*/ 0x5C8, 0 /* Other */],
            [/*start*/ 0x5D0, 15 /* Hebrew_Letter */],
            [/*start*/ 0x5EB, 0 /* Other */],
            [/*start*/ 0x5EF, 15 /* Hebrew_Letter */],
            [/*start*/ 0x5F3, 11 /* ALetter */],
            [/*start*/ 0x5F4, 10 /* MidLetter */],
            [/*start*/ 0x5F5, 0 /* Other */],
            [/*start*/ 0x600, 13 /* Format */],
            [/*start*/ 0x606, 0 /* Other */],
            [/*start*/ 0x60C, 7 /* MidNum */],
            [/*start*/ 0x60E, 0 /* Other */],
            [/*start*/ 0x610, 14 /* Extend */],
            [/*start*/ 0x61B, 0 /* Other */],
            [/*start*/ 0x61C, 13 /* Format */],
            [/*start*/ 0x61D, 0 /* Other */],
            [/*start*/ 0x620, 11 /* ALetter */],
            [/*start*/ 0x64B, 14 /* Extend */],
            [/*start*/ 0x660, 9 /* Numeric */],
            [/*start*/ 0x66A, 0 /* Other */],
            [/*start*/ 0x66B, 9 /* Numeric */],
            [/*start*/ 0x66C, 7 /* MidNum */],
            [/*start*/ 0x66D, 0 /* Other */],
            [/*start*/ 0x66E, 11 /* ALetter */],
            [/*start*/ 0x670, 14 /* Extend */],
            [/*start*/ 0x671, 11 /* ALetter */],
            [/*start*/ 0x6D4, 0 /* Other */],
            [/*start*/ 0x6D5, 11 /* ALetter */],
            [/*start*/ 0x6D6, 14 /* Extend */],
            [/*start*/ 0x6DD, 13 /* Format */],
            [/*start*/ 0x6DE, 0 /* Other */],
            [/*start*/ 0x6DF, 14 /* Extend */],
            [/*start*/ 0x6E5, 11 /* ALetter */],
            [/*start*/ 0x6E7, 14 /* Extend */],
            [/*start*/ 0x6E9, 0 /* Other */],
            [/*start*/ 0x6EA, 14 /* Extend */],
            [/*start*/ 0x6EE, 11 /* ALetter */],
            [/*start*/ 0x6F0, 9 /* Numeric */],
            [/*start*/ 0x6FA, 11 /* ALetter */],
            [/*start*/ 0x6FD, 0 /* Other */],
            [/*start*/ 0x6FF, 11 /* ALetter */],
            [/*start*/ 0x700, 0 /* Other */],
            [/*start*/ 0x70F, 13 /* Format */],
            [/*start*/ 0x710, 11 /* ALetter */],
            [/*start*/ 0x711, 14 /* Extend */],
            [/*start*/ 0x712, 11 /* ALetter */],
            [/*start*/ 0x730, 14 /* Extend */],
            [/*start*/ 0x74B, 0 /* Other */],
            [/*start*/ 0x74D, 11 /* ALetter */],
            [/*start*/ 0x7A6, 14 /* Extend */],
            [/*start*/ 0x7B1, 11 /* ALetter */],
            [/*start*/ 0x7B2, 0 /* Other */],
            [/*start*/ 0x7C0, 9 /* Numeric */],
            [/*start*/ 0x7CA, 11 /* ALetter */],
            [/*start*/ 0x7EB, 14 /* Extend */],
            [/*start*/ 0x7F4, 11 /* ALetter */],
            [/*start*/ 0x7F6, 0 /* Other */],
            [/*start*/ 0x7F8, 7 /* MidNum */],
            [/*start*/ 0x7F9, 0 /* Other */],
            [/*start*/ 0x7FA, 11 /* ALetter */],
            [/*start*/ 0x7FB, 0 /* Other */],
            [/*start*/ 0x7FD, 14 /* Extend */],
            [/*start*/ 0x7FE, 0 /* Other */],
            [/*start*/ 0x800, 11 /* ALetter */],
            [/*start*/ 0x816, 14 /* Extend */],
            [/*start*/ 0x81A, 11 /* ALetter */],
            [/*start*/ 0x81B, 14 /* Extend */],
            [/*start*/ 0x824, 11 /* ALetter */],
            [/*start*/ 0x825, 14 /* Extend */],
            [/*start*/ 0x828, 11 /* ALetter */],
            [/*start*/ 0x829, 14 /* Extend */],
            [/*start*/ 0x82E, 0 /* Other */],
            [/*start*/ 0x840, 11 /* ALetter */],
            [/*start*/ 0x859, 14 /* Extend */],
            [/*start*/ 0x85C, 0 /* Other */],
            [/*start*/ 0x860, 11 /* ALetter */],
            [/*start*/ 0x86B, 0 /* Other */],
            [/*start*/ 0x8A0, 11 /* ALetter */],
            [/*start*/ 0x8B5, 0 /* Other */],
            [/*start*/ 0x8B6, 11 /* ALetter */],
            [/*start*/ 0x8C8, 0 /* Other */],
            [/*start*/ 0x8D3, 14 /* Extend */],
            [/*start*/ 0x8E2, 13 /* Format */],
            [/*start*/ 0x8E3, 14 /* Extend */],
            [/*start*/ 0x904, 11 /* ALetter */],
            [/*start*/ 0x93A, 14 /* Extend */],
            [/*start*/ 0x93D, 11 /* ALetter */],
            [/*start*/ 0x93E, 14 /* Extend */],
            [/*start*/ 0x950, 11 /* ALetter */],
            [/*start*/ 0x951, 14 /* Extend */],
            [/*start*/ 0x958, 11 /* ALetter */],
            [/*start*/ 0x962, 14 /* Extend */],
            [/*start*/ 0x964, 0 /* Other */],
            [/*start*/ 0x966, 9 /* Numeric */],
            [/*start*/ 0x970, 0 /* Other */],
            [/*start*/ 0x971, 11 /* ALetter */],
            [/*start*/ 0x981, 14 /* Extend */],
            [/*start*/ 0x984, 0 /* Other */],
            [/*start*/ 0x985, 11 /* ALetter */],
            [/*start*/ 0x98D, 0 /* Other */],
            [/*start*/ 0x98F, 11 /* ALetter */],
            [/*start*/ 0x991, 0 /* Other */],
            [/*start*/ 0x993, 11 /* ALetter */],
            [/*start*/ 0x9A9, 0 /* Other */],
            [/*start*/ 0x9AA, 11 /* ALetter */],
            [/*start*/ 0x9B1, 0 /* Other */],
            [/*start*/ 0x9B2, 11 /* ALetter */],
            [/*start*/ 0x9B3, 0 /* Other */],
            [/*start*/ 0x9B6, 11 /* ALetter */],
            [/*start*/ 0x9BA, 0 /* Other */],
            [/*start*/ 0x9BC, 14 /* Extend */],
            [/*start*/ 0x9BD, 11 /* ALetter */],
            [/*start*/ 0x9BE, 14 /* Extend */],
            [/*start*/ 0x9C5, 0 /* Other */],
            [/*start*/ 0x9C7, 14 /* Extend */],
            [/*start*/ 0x9C9, 0 /* Other */],
            [/*start*/ 0x9CB, 14 /* Extend */],
            [/*start*/ 0x9CE, 11 /* ALetter */],
            [/*start*/ 0x9CF, 0 /* Other */],
            [/*start*/ 0x9D7, 14 /* Extend */],
            [/*start*/ 0x9D8, 0 /* Other */],
            [/*start*/ 0x9DC, 11 /* ALetter */],
            [/*start*/ 0x9DE, 0 /* Other */],
            [/*start*/ 0x9DF, 11 /* ALetter */],
            [/*start*/ 0x9E2, 14 /* Extend */],
            [/*start*/ 0x9E4, 0 /* Other */],
            [/*start*/ 0x9E6, 9 /* Numeric */],
            [/*start*/ 0x9F0, 11 /* ALetter */],
            [/*start*/ 0x9F2, 0 /* Other */],
            [/*start*/ 0x9FC, 11 /* ALetter */],
            [/*start*/ 0x9FD, 0 /* Other */],
            [/*start*/ 0x9FE, 14 /* Extend */],
            [/*start*/ 0x9FF, 0 /* Other */],
            [/*start*/ 0xA01, 14 /* Extend */],
            [/*start*/ 0xA04, 0 /* Other */],
            [/*start*/ 0xA05, 11 /* ALetter */],
            [/*start*/ 0xA0B, 0 /* Other */],
            [/*start*/ 0xA0F, 11 /* ALetter */],
            [/*start*/ 0xA11, 0 /* Other */],
            [/*start*/ 0xA13, 11 /* ALetter */],
            [/*start*/ 0xA29, 0 /* Other */],
            [/*start*/ 0xA2A, 11 /* ALetter */],
            [/*start*/ 0xA31, 0 /* Other */],
            [/*start*/ 0xA32, 11 /* ALetter */],
            [/*start*/ 0xA34, 0 /* Other */],
            [/*start*/ 0xA35, 11 /* ALetter */],
            [/*start*/ 0xA37, 0 /* Other */],
            [/*start*/ 0xA38, 11 /* ALetter */],
            [/*start*/ 0xA3A, 0 /* Other */],
            [/*start*/ 0xA3C, 14 /* Extend */],
            [/*start*/ 0xA3D, 0 /* Other */],
            [/*start*/ 0xA3E, 14 /* Extend */],
            [/*start*/ 0xA43, 0 /* Other */],
            [/*start*/ 0xA47, 14 /* Extend */],
            [/*start*/ 0xA49, 0 /* Other */],
            [/*start*/ 0xA4B, 14 /* Extend */],
            [/*start*/ 0xA4E, 0 /* Other */],
            [/*start*/ 0xA51, 14 /* Extend */],
            [/*start*/ 0xA52, 0 /* Other */],
            [/*start*/ 0xA59, 11 /* ALetter */],
            [/*start*/ 0xA5D, 0 /* Other */],
            [/*start*/ 0xA5E, 11 /* ALetter */],
            [/*start*/ 0xA5F, 0 /* Other */],
            [/*start*/ 0xA66, 9 /* Numeric */],
            [/*start*/ 0xA70, 14 /* Extend */],
            [/*start*/ 0xA72, 11 /* ALetter */],
            [/*start*/ 0xA75, 14 /* Extend */],
            [/*start*/ 0xA76, 0 /* Other */],
            [/*start*/ 0xA81, 14 /* Extend */],
            [/*start*/ 0xA84, 0 /* Other */],
            [/*start*/ 0xA85, 11 /* ALetter */],
            [/*start*/ 0xA8E, 0 /* Other */],
            [/*start*/ 0xA8F, 11 /* ALetter */],
            [/*start*/ 0xA92, 0 /* Other */],
            [/*start*/ 0xA93, 11 /* ALetter */],
            [/*start*/ 0xAA9, 0 /* Other */],
            [/*start*/ 0xAAA, 11 /* ALetter */],
            [/*start*/ 0xAB1, 0 /* Other */],
            [/*start*/ 0xAB2, 11 /* ALetter */],
            [/*start*/ 0xAB4, 0 /* Other */],
            [/*start*/ 0xAB5, 11 /* ALetter */],
            [/*start*/ 0xABA, 0 /* Other */],
            [/*start*/ 0xABC, 14 /* Extend */],
            [/*start*/ 0xABD, 11 /* ALetter */],
            [/*start*/ 0xABE, 14 /* Extend */],
            [/*start*/ 0xAC6, 0 /* Other */],
            [/*start*/ 0xAC7, 14 /* Extend */],
            [/*start*/ 0xACA, 0 /* Other */],
            [/*start*/ 0xACB, 14 /* Extend */],
            [/*start*/ 0xACE, 0 /* Other */],
            [/*start*/ 0xAD0, 11 /* ALetter */],
            [/*start*/ 0xAD1, 0 /* Other */],
            [/*start*/ 0xAE0, 11 /* ALetter */],
            [/*start*/ 0xAE2, 14 /* Extend */],
            [/*start*/ 0xAE4, 0 /* Other */],
            [/*start*/ 0xAE6, 9 /* Numeric */],
            [/*start*/ 0xAF0, 0 /* Other */],
            [/*start*/ 0xAF9, 11 /* ALetter */],
            [/*start*/ 0xAFA, 14 /* Extend */],
            [/*start*/ 0xB00, 0 /* Other */],
            [/*start*/ 0xB01, 14 /* Extend */],
            [/*start*/ 0xB04, 0 /* Other */],
            [/*start*/ 0xB05, 11 /* ALetter */],
            [/*start*/ 0xB0D, 0 /* Other */],
            [/*start*/ 0xB0F, 11 /* ALetter */],
            [/*start*/ 0xB11, 0 /* Other */],
            [/*start*/ 0xB13, 11 /* ALetter */],
            [/*start*/ 0xB29, 0 /* Other */],
            [/*start*/ 0xB2A, 11 /* ALetter */],
            [/*start*/ 0xB31, 0 /* Other */],
            [/*start*/ 0xB32, 11 /* ALetter */],
            [/*start*/ 0xB34, 0 /* Other */],
            [/*start*/ 0xB35, 11 /* ALetter */],
            [/*start*/ 0xB3A, 0 /* Other */],
            [/*start*/ 0xB3C, 14 /* Extend */],
            [/*start*/ 0xB3D, 11 /* ALetter */],
            [/*start*/ 0xB3E, 14 /* Extend */],
            [/*start*/ 0xB45, 0 /* Other */],
            [/*start*/ 0xB47, 14 /* Extend */],
            [/*start*/ 0xB49, 0 /* Other */],
            [/*start*/ 0xB4B, 14 /* Extend */],
            [/*start*/ 0xB4E, 0 /* Other */],
            [/*start*/ 0xB55, 14 /* Extend */],
            [/*start*/ 0xB58, 0 /* Other */],
            [/*start*/ 0xB5C, 11 /* ALetter */],
            [/*start*/ 0xB5E, 0 /* Other */],
            [/*start*/ 0xB5F, 11 /* ALetter */],
            [/*start*/ 0xB62, 14 /* Extend */],
            [/*start*/ 0xB64, 0 /* Other */],
            [/*start*/ 0xB66, 9 /* Numeric */],
            [/*start*/ 0xB70, 0 /* Other */],
            [/*start*/ 0xB71, 11 /* ALetter */],
            [/*start*/ 0xB72, 0 /* Other */],
            [/*start*/ 0xB82, 14 /* Extend */],
            [/*start*/ 0xB83, 11 /* ALetter */],
            [/*start*/ 0xB84, 0 /* Other */],
            [/*start*/ 0xB85, 11 /* ALetter */],
            [/*start*/ 0xB8B, 0 /* Other */],
            [/*start*/ 0xB8E, 11 /* ALetter */],
            [/*start*/ 0xB91, 0 /* Other */],
            [/*start*/ 0xB92, 11 /* ALetter */],
            [/*start*/ 0xB96, 0 /* Other */],
            [/*start*/ 0xB99, 11 /* ALetter */],
            [/*start*/ 0xB9B, 0 /* Other */],
            [/*start*/ 0xB9C, 11 /* ALetter */],
            [/*start*/ 0xB9D, 0 /* Other */],
            [/*start*/ 0xB9E, 11 /* ALetter */],
            [/*start*/ 0xBA0, 0 /* Other */],
            [/*start*/ 0xBA3, 11 /* ALetter */],
            [/*start*/ 0xBA5, 0 /* Other */],
            [/*start*/ 0xBA8, 11 /* ALetter */],
            [/*start*/ 0xBAB, 0 /* Other */],
            [/*start*/ 0xBAE, 11 /* ALetter */],
            [/*start*/ 0xBBA, 0 /* Other */],
            [/*start*/ 0xBBE, 14 /* Extend */],
            [/*start*/ 0xBC3, 0 /* Other */],
            [/*start*/ 0xBC6, 14 /* Extend */],
            [/*start*/ 0xBC9, 0 /* Other */],
            [/*start*/ 0xBCA, 14 /* Extend */],
            [/*start*/ 0xBCE, 0 /* Other */],
            [/*start*/ 0xBD0, 11 /* ALetter */],
            [/*start*/ 0xBD1, 0 /* Other */],
            [/*start*/ 0xBD7, 14 /* Extend */],
            [/*start*/ 0xBD8, 0 /* Other */],
            [/*start*/ 0xBE6, 9 /* Numeric */],
            [/*start*/ 0xBF0, 0 /* Other */],
            [/*start*/ 0xC00, 14 /* Extend */],
            [/*start*/ 0xC05, 11 /* ALetter */],
            [/*start*/ 0xC0D, 0 /* Other */],
            [/*start*/ 0xC0E, 11 /* ALetter */],
            [/*start*/ 0xC11, 0 /* Other */],
            [/*start*/ 0xC12, 11 /* ALetter */],
            [/*start*/ 0xC29, 0 /* Other */],
            [/*start*/ 0xC2A, 11 /* ALetter */],
            [/*start*/ 0xC3A, 0 /* Other */],
            [/*start*/ 0xC3D, 11 /* ALetter */],
            [/*start*/ 0xC3E, 14 /* Extend */],
            [/*start*/ 0xC45, 0 /* Other */],
            [/*start*/ 0xC46, 14 /* Extend */],
            [/*start*/ 0xC49, 0 /* Other */],
            [/*start*/ 0xC4A, 14 /* Extend */],
            [/*start*/ 0xC4E, 0 /* Other */],
            [/*start*/ 0xC55, 14 /* Extend */],
            [/*start*/ 0xC57, 0 /* Other */],
            [/*start*/ 0xC58, 11 /* ALetter */],
            [/*start*/ 0xC5B, 0 /* Other */],
            [/*start*/ 0xC60, 11 /* ALetter */],
            [/*start*/ 0xC62, 14 /* Extend */],
            [/*start*/ 0xC64, 0 /* Other */],
            [/*start*/ 0xC66, 9 /* Numeric */],
            [/*start*/ 0xC70, 0 /* Other */],
            [/*start*/ 0xC80, 11 /* ALetter */],
            [/*start*/ 0xC81, 14 /* Extend */],
            [/*start*/ 0xC84, 0 /* Other */],
            [/*start*/ 0xC85, 11 /* ALetter */],
            [/*start*/ 0xC8D, 0 /* Other */],
            [/*start*/ 0xC8E, 11 /* ALetter */],
            [/*start*/ 0xC91, 0 /* Other */],
            [/*start*/ 0xC92, 11 /* ALetter */],
            [/*start*/ 0xCA9, 0 /* Other */],
            [/*start*/ 0xCAA, 11 /* ALetter */],
            [/*start*/ 0xCB4, 0 /* Other */],
            [/*start*/ 0xCB5, 11 /* ALetter */],
            [/*start*/ 0xCBA, 0 /* Other */],
            [/*start*/ 0xCBC, 14 /* Extend */],
            [/*start*/ 0xCBD, 11 /* ALetter */],
            [/*start*/ 0xCBE, 14 /* Extend */],
            [/*start*/ 0xCC5, 0 /* Other */],
            [/*start*/ 0xCC6, 14 /* Extend */],
            [/*start*/ 0xCC9, 0 /* Other */],
            [/*start*/ 0xCCA, 14 /* Extend */],
            [/*start*/ 0xCCE, 0 /* Other */],
            [/*start*/ 0xCD5, 14 /* Extend */],
            [/*start*/ 0xCD7, 0 /* Other */],
            [/*start*/ 0xCDE, 11 /* ALetter */],
            [/*start*/ 0xCDF, 0 /* Other */],
            [/*start*/ 0xCE0, 11 /* ALetter */],
            [/*start*/ 0xCE2, 14 /* Extend */],
            [/*start*/ 0xCE4, 0 /* Other */],
            [/*start*/ 0xCE6, 9 /* Numeric */],
            [/*start*/ 0xCF0, 0 /* Other */],
            [/*start*/ 0xCF1, 11 /* ALetter */],
            [/*start*/ 0xCF3, 0 /* Other */],
            [/*start*/ 0xD00, 14 /* Extend */],
            [/*start*/ 0xD04, 11 /* ALetter */],
            [/*start*/ 0xD0D, 0 /* Other */],
            [/*start*/ 0xD0E, 11 /* ALetter */],
            [/*start*/ 0xD11, 0 /* Other */],
            [/*start*/ 0xD12, 11 /* ALetter */],
            [/*start*/ 0xD3B, 14 /* Extend */],
            [/*start*/ 0xD3D, 11 /* ALetter */],
            [/*start*/ 0xD3E, 14 /* Extend */],
            [/*start*/ 0xD45, 0 /* Other */],
            [/*start*/ 0xD46, 14 /* Extend */],
            [/*start*/ 0xD49, 0 /* Other */],
            [/*start*/ 0xD4A, 14 /* Extend */],
            [/*start*/ 0xD4E, 11 /* ALetter */],
            [/*start*/ 0xD4F, 0 /* Other */],
            [/*start*/ 0xD54, 11 /* ALetter */],
            [/*start*/ 0xD57, 14 /* Extend */],
            [/*start*/ 0xD58, 0 /* Other */],
            [/*start*/ 0xD5F, 11 /* ALetter */],
            [/*start*/ 0xD62, 14 /* Extend */],
            [/*start*/ 0xD64, 0 /* Other */],
            [/*start*/ 0xD66, 9 /* Numeric */],
            [/*start*/ 0xD70, 0 /* Other */],
            [/*start*/ 0xD7A, 11 /* ALetter */],
            [/*start*/ 0xD80, 0 /* Other */],
            [/*start*/ 0xD81, 14 /* Extend */],
            [/*start*/ 0xD84, 0 /* Other */],
            [/*start*/ 0xD85, 11 /* ALetter */],
            [/*start*/ 0xD97, 0 /* Other */],
            [/*start*/ 0xD9A, 11 /* ALetter */],
            [/*start*/ 0xDB2, 0 /* Other */],
            [/*start*/ 0xDB3, 11 /* ALetter */],
            [/*start*/ 0xDBC, 0 /* Other */],
            [/*start*/ 0xDBD, 11 /* ALetter */],
            [/*start*/ 0xDBE, 0 /* Other */],
            [/*start*/ 0xDC0, 11 /* ALetter */],
            [/*start*/ 0xDC7, 0 /* Other */],
            [/*start*/ 0xDCA, 14 /* Extend */],
            [/*start*/ 0xDCB, 0 /* Other */],
            [/*start*/ 0xDCF, 14 /* Extend */],
            [/*start*/ 0xDD5, 0 /* Other */],
            [/*start*/ 0xDD6, 14 /* Extend */],
            [/*start*/ 0xDD7, 0 /* Other */],
            [/*start*/ 0xDD8, 14 /* Extend */],
            [/*start*/ 0xDE0, 0 /* Other */],
            [/*start*/ 0xDE6, 9 /* Numeric */],
            [/*start*/ 0xDF0, 0 /* Other */],
            [/*start*/ 0xDF2, 14 /* Extend */],
            [/*start*/ 0xDF4, 0 /* Other */],
            [/*start*/ 0xE31, 14 /* Extend */],
            [/*start*/ 0xE32, 0 /* Other */],
            [/*start*/ 0xE34, 14 /* Extend */],
            [/*start*/ 0xE3B, 0 /* Other */],
            [/*start*/ 0xE47, 14 /* Extend */],
            [/*start*/ 0xE4F, 0 /* Other */],
            [/*start*/ 0xE50, 9 /* Numeric */],
            [/*start*/ 0xE5A, 0 /* Other */],
            [/*start*/ 0xEB1, 14 /* Extend */],
            [/*start*/ 0xEB2, 0 /* Other */],
            [/*start*/ 0xEB4, 14 /* Extend */],
            [/*start*/ 0xEBD, 0 /* Other */],
            [/*start*/ 0xEC8, 14 /* Extend */],
            [/*start*/ 0xECE, 0 /* Other */],
            [/*start*/ 0xED0, 9 /* Numeric */],
            [/*start*/ 0xEDA, 0 /* Other */],
            [/*start*/ 0xF00, 11 /* ALetter */],
            [/*start*/ 0xF01, 0 /* Other */],
            [/*start*/ 0xF18, 14 /* Extend */],
            [/*start*/ 0xF1A, 0 /* Other */],
            [/*start*/ 0xF20, 9 /* Numeric */],
            [/*start*/ 0xF2A, 0 /* Other */],
            [/*start*/ 0xF35, 14 /* Extend */],
            [/*start*/ 0xF36, 0 /* Other */],
            [/*start*/ 0xF37, 14 /* Extend */],
            [/*start*/ 0xF38, 0 /* Other */],
            [/*start*/ 0xF39, 14 /* Extend */],
            [/*start*/ 0xF3A, 0 /* Other */],
            [/*start*/ 0xF3E, 14 /* Extend */],
            [/*start*/ 0xF40, 11 /* ALetter */],
            [/*start*/ 0xF48, 0 /* Other */],
            [/*start*/ 0xF49, 11 /* ALetter */],
            [/*start*/ 0xF6D, 0 /* Other */],
            [/*start*/ 0xF71, 14 /* Extend */],
            [/*start*/ 0xF85, 0 /* Other */],
            [/*start*/ 0xF86, 14 /* Extend */],
            [/*start*/ 0xF88, 11 /* ALetter */],
            [/*start*/ 0xF8D, 14 /* Extend */],
            [/*start*/ 0xF98, 0 /* Other */],
            [/*start*/ 0xF99, 14 /* Extend */],
            [/*start*/ 0xFBD, 0 /* Other */],
            [/*start*/ 0xFC6, 14 /* Extend */],
            [/*start*/ 0xFC7, 0 /* Other */],
            [/*start*/ 0x102B, 14 /* Extend */],
            [/*start*/ 0x103F, 0 /* Other */],
            [/*start*/ 0x1040, 9 /* Numeric */],
            [/*start*/ 0x104A, 0 /* Other */],
            [/*start*/ 0x1056, 14 /* Extend */],
            [/*start*/ 0x105A, 0 /* Other */],
            [/*start*/ 0x105E, 14 /* Extend */],
            [/*start*/ 0x1061, 0 /* Other */],
            [/*start*/ 0x1062, 14 /* Extend */],
            [/*start*/ 0x1065, 0 /* Other */],
            [/*start*/ 0x1067, 14 /* Extend */],
            [/*start*/ 0x106E, 0 /* Other */],
            [/*start*/ 0x1071, 14 /* Extend */],
            [/*start*/ 0x1075, 0 /* Other */],
            [/*start*/ 0x1082, 14 /* Extend */],
            [/*start*/ 0x108E, 0 /* Other */],
            [/*start*/ 0x108F, 14 /* Extend */],
            [/*start*/ 0x1090, 9 /* Numeric */],
            [/*start*/ 0x109A, 14 /* Extend */],
            [/*start*/ 0x109E, 0 /* Other */],
            [/*start*/ 0x10A0, 11 /* ALetter */],
            [/*start*/ 0x10C6, 0 /* Other */],
            [/*start*/ 0x10C7, 11 /* ALetter */],
            [/*start*/ 0x10C8, 0 /* Other */],
            [/*start*/ 0x10CD, 11 /* ALetter */],
            [/*start*/ 0x10CE, 0 /* Other */],
            [/*start*/ 0x10D0, 11 /* ALetter */],
            [/*start*/ 0x10FB, 0 /* Other */],
            [/*start*/ 0x10FC, 11 /* ALetter */],
            [/*start*/ 0x1249, 0 /* Other */],
            [/*start*/ 0x124A, 11 /* ALetter */],
            [/*start*/ 0x124E, 0 /* Other */],
            [/*start*/ 0x1250, 11 /* ALetter */],
            [/*start*/ 0x1257, 0 /* Other */],
            [/*start*/ 0x1258, 11 /* ALetter */],
            [/*start*/ 0x1259, 0 /* Other */],
            [/*start*/ 0x125A, 11 /* ALetter */],
            [/*start*/ 0x125E, 0 /* Other */],
            [/*start*/ 0x1260, 11 /* ALetter */],
            [/*start*/ 0x1289, 0 /* Other */],
            [/*start*/ 0x128A, 11 /* ALetter */],
            [/*start*/ 0x128E, 0 /* Other */],
            [/*start*/ 0x1290, 11 /* ALetter */],
            [/*start*/ 0x12B1, 0 /* Other */],
            [/*start*/ 0x12B2, 11 /* ALetter */],
            [/*start*/ 0x12B6, 0 /* Other */],
            [/*start*/ 0x12B8, 11 /* ALetter */],
            [/*start*/ 0x12BF, 0 /* Other */],
            [/*start*/ 0x12C0, 11 /* ALetter */],
            [/*start*/ 0x12C1, 0 /* Other */],
            [/*start*/ 0x12C2, 11 /* ALetter */],
            [/*start*/ 0x12C6, 0 /* Other */],
            [/*start*/ 0x12C8, 11 /* ALetter */],
            [/*start*/ 0x12D7, 0 /* Other */],
            [/*start*/ 0x12D8, 11 /* ALetter */],
            [/*start*/ 0x1311, 0 /* Other */],
            [/*start*/ 0x1312, 11 /* ALetter */],
            [/*start*/ 0x1316, 0 /* Other */],
            [/*start*/ 0x1318, 11 /* ALetter */],
            [/*start*/ 0x135B, 0 /* Other */],
            [/*start*/ 0x135D, 14 /* Extend */],
            [/*start*/ 0x1360, 0 /* Other */],
            [/*start*/ 0x1380, 11 /* ALetter */],
            [/*start*/ 0x1390, 0 /* Other */],
            [/*start*/ 0x13A0, 11 /* ALetter */],
            [/*start*/ 0x13F6, 0 /* Other */],
            [/*start*/ 0x13F8, 11 /* ALetter */],
            [/*start*/ 0x13FE, 0 /* Other */],
            [/*start*/ 0x1401, 11 /* ALetter */],
            [/*start*/ 0x166D, 0 /* Other */],
            [/*start*/ 0x166F, 11 /* ALetter */],
            [/*start*/ 0x1680, 4 /* WSegSpace */],
            [/*start*/ 0x1681, 11 /* ALetter */],
            [/*start*/ 0x169B, 0 /* Other */],
            [/*start*/ 0x16A0, 11 /* ALetter */],
            [/*start*/ 0x16EB, 0 /* Other */],
            [/*start*/ 0x16EE, 11 /* ALetter */],
            [/*start*/ 0x16F9, 0 /* Other */],
            [/*start*/ 0x1700, 11 /* ALetter */],
            [/*start*/ 0x170D, 0 /* Other */],
            [/*start*/ 0x170E, 11 /* ALetter */],
            [/*start*/ 0x1712, 14 /* Extend */],
            [/*start*/ 0x1715, 0 /* Other */],
            [/*start*/ 0x1720, 11 /* ALetter */],
            [/*start*/ 0x1732, 14 /* Extend */],
            [/*start*/ 0x1735, 0 /* Other */],
            [/*start*/ 0x1740, 11 /* ALetter */],
            [/*start*/ 0x1752, 14 /* Extend */],
            [/*start*/ 0x1754, 0 /* Other */],
            [/*start*/ 0x1760, 11 /* ALetter */],
            [/*start*/ 0x176D, 0 /* Other */],
            [/*start*/ 0x176E, 11 /* ALetter */],
            [/*start*/ 0x1771, 0 /* Other */],
            [/*start*/ 0x1772, 14 /* Extend */],
            [/*start*/ 0x1774, 0 /* Other */],
            [/*start*/ 0x17B4, 14 /* Extend */],
            [/*start*/ 0x17D4, 0 /* Other */],
            [/*start*/ 0x17DD, 14 /* Extend */],
            [/*start*/ 0x17DE, 0 /* Other */],
            [/*start*/ 0x17E0, 9 /* Numeric */],
            [/*start*/ 0x17EA, 0 /* Other */],
            [/*start*/ 0x180B, 14 /* Extend */],
            [/*start*/ 0x180E, 13 /* Format */],
            [/*start*/ 0x180F, 0 /* Other */],
            [/*start*/ 0x1810, 9 /* Numeric */],
            [/*start*/ 0x181A, 0 /* Other */],
            [/*start*/ 0x1820, 11 /* ALetter */],
            [/*start*/ 0x1879, 0 /* Other */],
            [/*start*/ 0x1880, 11 /* ALetter */],
            [/*start*/ 0x1885, 14 /* Extend */],
            [/*start*/ 0x1887, 11 /* ALetter */],
            [/*start*/ 0x18A9, 14 /* Extend */],
            [/*start*/ 0x18AA, 11 /* ALetter */],
            [/*start*/ 0x18AB, 0 /* Other */],
            [/*start*/ 0x18B0, 11 /* ALetter */],
            [/*start*/ 0x18F6, 0 /* Other */],
            [/*start*/ 0x1900, 11 /* ALetter */],
            [/*start*/ 0x191F, 0 /* Other */],
            [/*start*/ 0x1920, 14 /* Extend */],
            [/*start*/ 0x192C, 0 /* Other */],
            [/*start*/ 0x1930, 14 /* Extend */],
            [/*start*/ 0x193C, 0 /* Other */],
            [/*start*/ 0x1946, 9 /* Numeric */],
            [/*start*/ 0x1950, 0 /* Other */],
            [/*start*/ 0x19D0, 9 /* Numeric */],
            [/*start*/ 0x19DA, 0 /* Other */],
            [/*start*/ 0x1A00, 11 /* ALetter */],
            [/*start*/ 0x1A17, 14 /* Extend */],
            [/*start*/ 0x1A1C, 0 /* Other */],
            [/*start*/ 0x1A55, 14 /* Extend */],
            [/*start*/ 0x1A5F, 0 /* Other */],
            [/*start*/ 0x1A60, 14 /* Extend */],
            [/*start*/ 0x1A7D, 0 /* Other */],
            [/*start*/ 0x1A7F, 14 /* Extend */],
            [/*start*/ 0x1A80, 9 /* Numeric */],
            [/*start*/ 0x1A8A, 0 /* Other */],
            [/*start*/ 0x1A90, 9 /* Numeric */],
            [/*start*/ 0x1A9A, 0 /* Other */],
            [/*start*/ 0x1AB0, 14 /* Extend */],
            [/*start*/ 0x1AC1, 0 /* Other */],
            [/*start*/ 0x1B00, 14 /* Extend */],
            [/*start*/ 0x1B05, 11 /* ALetter */],
            [/*start*/ 0x1B34, 14 /* Extend */],
            [/*start*/ 0x1B45, 11 /* ALetter */],
            [/*start*/ 0x1B4C, 0 /* Other */],
            [/*start*/ 0x1B50, 9 /* Numeric */],
            [/*start*/ 0x1B5A, 0 /* Other */],
            [/*start*/ 0x1B6B, 14 /* Extend */],
            [/*start*/ 0x1B74, 0 /* Other */],
            [/*start*/ 0x1B80, 14 /* Extend */],
            [/*start*/ 0x1B83, 11 /* ALetter */],
            [/*start*/ 0x1BA1, 14 /* Extend */],
            [/*start*/ 0x1BAE, 11 /* ALetter */],
            [/*start*/ 0x1BB0, 9 /* Numeric */],
            [/*start*/ 0x1BBA, 11 /* ALetter */],
            [/*start*/ 0x1BE6, 14 /* Extend */],
            [/*start*/ 0x1BF4, 0 /* Other */],
            [/*start*/ 0x1C00, 11 /* ALetter */],
            [/*start*/ 0x1C24, 14 /* Extend */],
            [/*start*/ 0x1C38, 0 /* Other */],
            [/*start*/ 0x1C40, 9 /* Numeric */],
            [/*start*/ 0x1C4A, 0 /* Other */],
            [/*start*/ 0x1C4D, 11 /* ALetter */],
            [/*start*/ 0x1C50, 9 /* Numeric */],
            [/*start*/ 0x1C5A, 11 /* ALetter */],
            [/*start*/ 0x1C7E, 0 /* Other */],
            [/*start*/ 0x1C80, 11 /* ALetter */],
            [/*start*/ 0x1C89, 0 /* Other */],
            [/*start*/ 0x1C90, 11 /* ALetter */],
            [/*start*/ 0x1CBB, 0 /* Other */],
            [/*start*/ 0x1CBD, 11 /* ALetter */],
            [/*start*/ 0x1CC0, 0 /* Other */],
            [/*start*/ 0x1CD0, 14 /* Extend */],
            [/*start*/ 0x1CD3, 0 /* Other */],
            [/*start*/ 0x1CD4, 14 /* Extend */],
            [/*start*/ 0x1CE9, 11 /* ALetter */],
            [/*start*/ 0x1CED, 14 /* Extend */],
            [/*start*/ 0x1CEE, 11 /* ALetter */],
            [/*start*/ 0x1CF4, 14 /* Extend */],
            [/*start*/ 0x1CF5, 11 /* ALetter */],
            [/*start*/ 0x1CF7, 14 /* Extend */],
            [/*start*/ 0x1CFA, 11 /* ALetter */],
            [/*start*/ 0x1CFB, 0 /* Other */],
            [/*start*/ 0x1D00, 11 /* ALetter */],
            [/*start*/ 0x1DC0, 14 /* Extend */],
            [/*start*/ 0x1DFA, 0 /* Other */],
            [/*start*/ 0x1DFB, 14 /* Extend */],
            [/*start*/ 0x1E00, 11 /* ALetter */],
            [/*start*/ 0x1F16, 0 /* Other */],
            [/*start*/ 0x1F18, 11 /* ALetter */],
            [/*start*/ 0x1F1E, 0 /* Other */],
            [/*start*/ 0x1F20, 11 /* ALetter */],
            [/*start*/ 0x1F46, 0 /* Other */],
            [/*start*/ 0x1F48, 11 /* ALetter */],
            [/*start*/ 0x1F4E, 0 /* Other */],
            [/*start*/ 0x1F50, 11 /* ALetter */],
            [/*start*/ 0x1F58, 0 /* Other */],
            [/*start*/ 0x1F59, 11 /* ALetter */],
            [/*start*/ 0x1F5A, 0 /* Other */],
            [/*start*/ 0x1F5B, 11 /* ALetter */],
            [/*start*/ 0x1F5C, 0 /* Other */],
            [/*start*/ 0x1F5D, 11 /* ALetter */],
            [/*start*/ 0x1F5E, 0 /* Other */],
            [/*start*/ 0x1F5F, 11 /* ALetter */],
            [/*start*/ 0x1F7E, 0 /* Other */],
            [/*start*/ 0x1F80, 11 /* ALetter */],
            [/*start*/ 0x1FB5, 0 /* Other */],
            [/*start*/ 0x1FB6, 11 /* ALetter */],
            [/*start*/ 0x1FBD, 0 /* Other */],
            [/*start*/ 0x1FBE, 11 /* ALetter */],
            [/*start*/ 0x1FBF, 0 /* Other */],
            [/*start*/ 0x1FC2, 11 /* ALetter */],
            [/*start*/ 0x1FC5, 0 /* Other */],
            [/*start*/ 0x1FC6, 11 /* ALetter */],
            [/*start*/ 0x1FCD, 0 /* Other */],
            [/*start*/ 0x1FD0, 11 /* ALetter */],
            [/*start*/ 0x1FD4, 0 /* Other */],
            [/*start*/ 0x1FD6, 11 /* ALetter */],
            [/*start*/ 0x1FDC, 0 /* Other */],
            [/*start*/ 0x1FE0, 11 /* ALetter */],
            [/*start*/ 0x1FED, 0 /* Other */],
            [/*start*/ 0x1FF2, 11 /* ALetter */],
            [/*start*/ 0x1FF5, 0 /* Other */],
            [/*start*/ 0x1FF6, 11 /* ALetter */],
            [/*start*/ 0x1FFD, 0 /* Other */],
            [/*start*/ 0x2000, 4 /* WSegSpace */],
            [/*start*/ 0x2007, 0 /* Other */],
            [/*start*/ 0x2008, 4 /* WSegSpace */],
            [/*start*/ 0x200B, 0 /* Other */],
            [/*start*/ 0x200C, 14 /* Extend */],
            [/*start*/ 0x200D, 16 /* ZWJ */],
            [/*start*/ 0x200E, 13 /* Format */],
            [/*start*/ 0x2010, 0 /* Other */],
            [/*start*/ 0x2018, 8 /* MidNumLet */],
            [/*start*/ 0x201A, 0 /* Other */],
            [/*start*/ 0x2024, 8 /* MidNumLet */],
            [/*start*/ 0x2025, 0 /* Other */],
            [/*start*/ 0x2027, 10 /* MidLetter */],
            [/*start*/ 0x2028, 2 /* Newline */],
            [/*start*/ 0x202A, 13 /* Format */],
            [/*start*/ 0x202F, 12 /* ExtendNumLet */],
            [/*start*/ 0x2030, 0 /* Other */],
            [/*start*/ 0x203F, 12 /* ExtendNumLet */],
            [/*start*/ 0x2041, 0 /* Other */],
            [/*start*/ 0x2044, 7 /* MidNum */],
            [/*start*/ 0x2045, 0 /* Other */],
            [/*start*/ 0x2054, 12 /* ExtendNumLet */],
            [/*start*/ 0x2055, 0 /* Other */],
            [/*start*/ 0x205F, 4 /* WSegSpace */],
            [/*start*/ 0x2060, 13 /* Format */],
            [/*start*/ 0x2065, 0 /* Other */],
            [/*start*/ 0x2066, 13 /* Format */],
            [/*start*/ 0x2070, 0 /* Other */],
            [/*start*/ 0x2071, 11 /* ALetter */],
            [/*start*/ 0x2072, 0 /* Other */],
            [/*start*/ 0x207F, 11 /* ALetter */],
            [/*start*/ 0x2080, 0 /* Other */],
            [/*start*/ 0x2090, 11 /* ALetter */],
            [/*start*/ 0x209D, 0 /* Other */],
            [/*start*/ 0x20D0, 14 /* Extend */],
            [/*start*/ 0x20F1, 0 /* Other */],
            [/*start*/ 0x2102, 11 /* ALetter */],
            [/*start*/ 0x2103, 0 /* Other */],
            [/*start*/ 0x2107, 11 /* ALetter */],
            [/*start*/ 0x2108, 0 /* Other */],
            [/*start*/ 0x210A, 11 /* ALetter */],
            [/*start*/ 0x2114, 0 /* Other */],
            [/*start*/ 0x2115, 11 /* ALetter */],
            [/*start*/ 0x2116, 0 /* Other */],
            [/*start*/ 0x2119, 11 /* ALetter */],
            [/*start*/ 0x211E, 0 /* Other */],
            [/*start*/ 0x2124, 11 /* ALetter */],
            [/*start*/ 0x2125, 0 /* Other */],
            [/*start*/ 0x2126, 11 /* ALetter */],
            [/*start*/ 0x2127, 0 /* Other */],
            [/*start*/ 0x2128, 11 /* ALetter */],
            [/*start*/ 0x2129, 0 /* Other */],
            [/*start*/ 0x212A, 11 /* ALetter */],
            [/*start*/ 0x212E, 0 /* Other */],
            [/*start*/ 0x212F, 11 /* ALetter */],
            [/*start*/ 0x213A, 0 /* Other */],
            [/*start*/ 0x213C, 11 /* ALetter */],
            [/*start*/ 0x2140, 0 /* Other */],
            [/*start*/ 0x2145, 11 /* ALetter */],
            [/*start*/ 0x214A, 0 /* Other */],
            [/*start*/ 0x214E, 11 /* ALetter */],
            [/*start*/ 0x214F, 0 /* Other */],
            [/*start*/ 0x2160, 11 /* ALetter */],
            [/*start*/ 0x2189, 0 /* Other */],
            [/*start*/ 0x24B6, 11 /* ALetter */],
            [/*start*/ 0x24EA, 0 /* Other */],
            [/*start*/ 0x2C00, 11 /* ALetter */],
            [/*start*/ 0x2C2F, 0 /* Other */],
            [/*start*/ 0x2C30, 11 /* ALetter */],
            [/*start*/ 0x2C5F, 0 /* Other */],
            [/*start*/ 0x2C60, 11 /* ALetter */],
            [/*start*/ 0x2CE5, 0 /* Other */],
            [/*start*/ 0x2CEB, 11 /* ALetter */],
            [/*start*/ 0x2CEF, 14 /* Extend */],
            [/*start*/ 0x2CF2, 11 /* ALetter */],
            [/*start*/ 0x2CF4, 0 /* Other */],
            [/*start*/ 0x2D00, 11 /* ALetter */],
            [/*start*/ 0x2D26, 0 /* Other */],
            [/*start*/ 0x2D27, 11 /* ALetter */],
            [/*start*/ 0x2D28, 0 /* Other */],
            [/*start*/ 0x2D2D, 11 /* ALetter */],
            [/*start*/ 0x2D2E, 0 /* Other */],
            [/*start*/ 0x2D30, 11 /* ALetter */],
            [/*start*/ 0x2D68, 0 /* Other */],
            [/*start*/ 0x2D6F, 11 /* ALetter */],
            [/*start*/ 0x2D70, 0 /* Other */],
            [/*start*/ 0x2D7F, 14 /* Extend */],
            [/*start*/ 0x2D80, 11 /* ALetter */],
            [/*start*/ 0x2D97, 0 /* Other */],
            [/*start*/ 0x2DA0, 11 /* ALetter */],
            [/*start*/ 0x2DA7, 0 /* Other */],
            [/*start*/ 0x2DA8, 11 /* ALetter */],
            [/*start*/ 0x2DAF, 0 /* Other */],
            [/*start*/ 0x2DB0, 11 /* ALetter */],
            [/*start*/ 0x2DB7, 0 /* Other */],
            [/*start*/ 0x2DB8, 11 /* ALetter */],
            [/*start*/ 0x2DBF, 0 /* Other */],
            [/*start*/ 0x2DC0, 11 /* ALetter */],
            [/*start*/ 0x2DC7, 0 /* Other */],
            [/*start*/ 0x2DC8, 11 /* ALetter */],
            [/*start*/ 0x2DCF, 0 /* Other */],
            [/*start*/ 0x2DD0, 11 /* ALetter */],
            [/*start*/ 0x2DD7, 0 /* Other */],
            [/*start*/ 0x2DD8, 11 /* ALetter */],
            [/*start*/ 0x2DDF, 0 /* Other */],
            [/*start*/ 0x2DE0, 14 /* Extend */],
            [/*start*/ 0x2E00, 0 /* Other */],
            [/*start*/ 0x2E2F, 11 /* ALetter */],
            [/*start*/ 0x2E30, 0 /* Other */],
            [/*start*/ 0x3000, 4 /* WSegSpace */],
            [/*start*/ 0x3001, 0 /* Other */],
            [/*start*/ 0x3005, 11 /* ALetter */],
            [/*start*/ 0x3006, 0 /* Other */],
            [/*start*/ 0x302A, 14 /* Extend */],
            [/*start*/ 0x3030, 0 /* Other */],
            [/*start*/ 0x3031, 17 /* Katakana */],
            [/*start*/ 0x3036, 0 /* Other */],
            [/*start*/ 0x303B, 11 /* ALetter */],
            [/*start*/ 0x303D, 0 /* Other */],
            [/*start*/ 0x3099, 14 /* Extend */],
            [/*start*/ 0x309B, 17 /* Katakana */],
            [/*start*/ 0x309D, 0 /* Other */],
            [/*start*/ 0x30A0, 17 /* Katakana */],
            [/*start*/ 0x30FB, 0 /* Other */],
            [/*start*/ 0x30FC, 17 /* Katakana */],
            [/*start*/ 0x3100, 0 /* Other */],
            [/*start*/ 0x3105, 11 /* ALetter */],
            [/*start*/ 0x3130, 0 /* Other */],
            [/*start*/ 0x3131, 11 /* ALetter */],
            [/*start*/ 0x318F, 0 /* Other */],
            [/*start*/ 0x31A0, 11 /* ALetter */],
            [/*start*/ 0x31C0, 0 /* Other */],
            [/*start*/ 0x31F0, 17 /* Katakana */],
            [/*start*/ 0x3200, 0 /* Other */],
            [/*start*/ 0x32D0, 17 /* Katakana */],
            [/*start*/ 0x32FF, 0 /* Other */],
            [/*start*/ 0x3300, 17 /* Katakana */],
            [/*start*/ 0x3358, 0 /* Other */],
            [/*start*/ 0xA000, 11 /* ALetter */],
            [/*start*/ 0xA48D, 0 /* Other */],
            [/*start*/ 0xA4D0, 11 /* ALetter */],
            [/*start*/ 0xA4FE, 0 /* Other */],
            [/*start*/ 0xA500, 11 /* ALetter */],
            [/*start*/ 0xA60D, 0 /* Other */],
            [/*start*/ 0xA610, 11 /* ALetter */],
            [/*start*/ 0xA620, 9 /* Numeric */],
            [/*start*/ 0xA62A, 11 /* ALetter */],
            [/*start*/ 0xA62C, 0 /* Other */],
            [/*start*/ 0xA640, 11 /* ALetter */],
            [/*start*/ 0xA66F, 14 /* Extend */],
            [/*start*/ 0xA673, 0 /* Other */],
            [/*start*/ 0xA674, 14 /* Extend */],
            [/*start*/ 0xA67E, 0 /* Other */],
            [/*start*/ 0xA67F, 11 /* ALetter */],
            [/*start*/ 0xA69E, 14 /* Extend */],
            [/*start*/ 0xA6A0, 11 /* ALetter */],
            [/*start*/ 0xA6F0, 14 /* Extend */],
            [/*start*/ 0xA6F2, 0 /* Other */],
            [/*start*/ 0xA708, 11 /* ALetter */],
            [/*start*/ 0xA7C0, 0 /* Other */],
            [/*start*/ 0xA7C2, 11 /* ALetter */],
            [/*start*/ 0xA7CB, 0 /* Other */],
            [/*start*/ 0xA7F5, 11 /* ALetter */],
            [/*start*/ 0xA802, 14 /* Extend */],
            [/*start*/ 0xA803, 11 /* ALetter */],
            [/*start*/ 0xA806, 14 /* Extend */],
            [/*start*/ 0xA807, 11 /* ALetter */],
            [/*start*/ 0xA80B, 14 /* Extend */],
            [/*start*/ 0xA80C, 11 /* ALetter */],
            [/*start*/ 0xA823, 14 /* Extend */],
            [/*start*/ 0xA828, 0 /* Other */],
            [/*start*/ 0xA82C, 14 /* Extend */],
            [/*start*/ 0xA82D, 0 /* Other */],
            [/*start*/ 0xA840, 11 /* ALetter */],
            [/*start*/ 0xA874, 0 /* Other */],
            [/*start*/ 0xA880, 14 /* Extend */],
            [/*start*/ 0xA882, 11 /* ALetter */],
            [/*start*/ 0xA8B4, 14 /* Extend */],
            [/*start*/ 0xA8C6, 0 /* Other */],
            [/*start*/ 0xA8D0, 9 /* Numeric */],
            [/*start*/ 0xA8DA, 0 /* Other */],
            [/*start*/ 0xA8E0, 14 /* Extend */],
            [/*start*/ 0xA8F2, 11 /* ALetter */],
            [/*start*/ 0xA8F8, 0 /* Other */],
            [/*start*/ 0xA8FB, 11 /* ALetter */],
            [/*start*/ 0xA8FC, 0 /* Other */],
            [/*start*/ 0xA8FD, 11 /* ALetter */],
            [/*start*/ 0xA8FF, 14 /* Extend */],
            [/*start*/ 0xA900, 9 /* Numeric */],
            [/*start*/ 0xA90A, 11 /* ALetter */],
            [/*start*/ 0xA926, 14 /* Extend */],
            [/*start*/ 0xA92E, 0 /* Other */],
            [/*start*/ 0xA930, 11 /* ALetter */],
            [/*start*/ 0xA947, 14 /* Extend */],
            [/*start*/ 0xA954, 0 /* Other */],
            [/*start*/ 0xA960, 11 /* ALetter */],
            [/*start*/ 0xA97D, 0 /* Other */],
            [/*start*/ 0xA980, 14 /* Extend */],
            [/*start*/ 0xA984, 11 /* ALetter */],
            [/*start*/ 0xA9B3, 14 /* Extend */],
            [/*start*/ 0xA9C1, 0 /* Other */],
            [/*start*/ 0xA9CF, 11 /* ALetter */],
            [/*start*/ 0xA9D0, 9 /* Numeric */],
            [/*start*/ 0xA9DA, 0 /* Other */],
            [/*start*/ 0xA9E5, 14 /* Extend */],
            [/*start*/ 0xA9E6, 0 /* Other */],
            [/*start*/ 0xA9F0, 9 /* Numeric */],
            [/*start*/ 0xA9FA, 0 /* Other */],
            [/*start*/ 0xAA00, 11 /* ALetter */],
            [/*start*/ 0xAA29, 14 /* Extend */],
            [/*start*/ 0xAA37, 0 /* Other */],
            [/*start*/ 0xAA40, 11 /* ALetter */],
            [/*start*/ 0xAA43, 14 /* Extend */],
            [/*start*/ 0xAA44, 11 /* ALetter */],
            [/*start*/ 0xAA4C, 14 /* Extend */],
            [/*start*/ 0xAA4E, 0 /* Other */],
            [/*start*/ 0xAA50, 9 /* Numeric */],
            [/*start*/ 0xAA5A, 0 /* Other */],
            [/*start*/ 0xAA7B, 14 /* Extend */],
            [/*start*/ 0xAA7E, 0 /* Other */],
            [/*start*/ 0xAAB0, 14 /* Extend */],
            [/*start*/ 0xAAB1, 0 /* Other */],
            [/*start*/ 0xAAB2, 14 /* Extend */],
            [/*start*/ 0xAAB5, 0 /* Other */],
            [/*start*/ 0xAAB7, 14 /* Extend */],
            [/*start*/ 0xAAB9, 0 /* Other */],
            [/*start*/ 0xAABE, 14 /* Extend */],
            [/*start*/ 0xAAC0, 0 /* Other */],
            [/*start*/ 0xAAC1, 14 /* Extend */],
            [/*start*/ 0xAAC2, 0 /* Other */],
            [/*start*/ 0xAAE0, 11 /* ALetter */],
            [/*start*/ 0xAAEB, 14 /* Extend */],
            [/*start*/ 0xAAF0, 0 /* Other */],
            [/*start*/ 0xAAF2, 11 /* ALetter */],
            [/*start*/ 0xAAF5, 14 /* Extend */],
            [/*start*/ 0xAAF7, 0 /* Other */],
            [/*start*/ 0xAB01, 11 /* ALetter */],
            [/*start*/ 0xAB07, 0 /* Other */],
            [/*start*/ 0xAB09, 11 /* ALetter */],
            [/*start*/ 0xAB0F, 0 /* Other */],
            [/*start*/ 0xAB11, 11 /* ALetter */],
            [/*start*/ 0xAB17, 0 /* Other */],
            [/*start*/ 0xAB20, 11 /* ALetter */],
            [/*start*/ 0xAB27, 0 /* Other */],
            [/*start*/ 0xAB28, 11 /* ALetter */],
            [/*start*/ 0xAB2F, 0 /* Other */],
            [/*start*/ 0xAB30, 11 /* ALetter */],
            [/*start*/ 0xAB6A, 0 /* Other */],
            [/*start*/ 0xAB70, 11 /* ALetter */],
            [/*start*/ 0xABE3, 14 /* Extend */],
            [/*start*/ 0xABEB, 0 /* Other */],
            [/*start*/ 0xABEC, 14 /* Extend */],
            [/*start*/ 0xABEE, 0 /* Other */],
            [/*start*/ 0xABF0, 9 /* Numeric */],
            [/*start*/ 0xABFA, 0 /* Other */],
            [/*start*/ 0xAC00, 11 /* ALetter */],
            [/*start*/ 0xD7A4, 0 /* Other */],
            [/*start*/ 0xD7B0, 11 /* ALetter */],
            [/*start*/ 0xD7C7, 0 /* Other */],
            [/*start*/ 0xD7CB, 11 /* ALetter */],
            [/*start*/ 0xD7FC, 0 /* Other */],
            [/*start*/ 0xFB00, 11 /* ALetter */],
            [/*start*/ 0xFB07, 0 /* Other */],
            [/*start*/ 0xFB13, 11 /* ALetter */],
            [/*start*/ 0xFB18, 0 /* Other */],
            [/*start*/ 0xFB1D, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB1E, 14 /* Extend */],
            [/*start*/ 0xFB1F, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB29, 0 /* Other */],
            [/*start*/ 0xFB2A, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB37, 0 /* Other */],
            [/*start*/ 0xFB38, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB3D, 0 /* Other */],
            [/*start*/ 0xFB3E, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB3F, 0 /* Other */],
            [/*start*/ 0xFB40, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB42, 0 /* Other */],
            [/*start*/ 0xFB43, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB45, 0 /* Other */],
            [/*start*/ 0xFB46, 15 /* Hebrew_Letter */],
            [/*start*/ 0xFB50, 11 /* ALetter */],
            [/*start*/ 0xFBB2, 0 /* Other */],
            [/*start*/ 0xFBD3, 11 /* ALetter */],
            [/*start*/ 0xFD3E, 0 /* Other */],
            [/*start*/ 0xFD50, 11 /* ALetter */],
            [/*start*/ 0xFD90, 0 /* Other */],
            [/*start*/ 0xFD92, 11 /* ALetter */],
            [/*start*/ 0xFDC8, 0 /* Other */],
            [/*start*/ 0xFDF0, 11 /* ALetter */],
            [/*start*/ 0xFDFC, 0 /* Other */],
            [/*start*/ 0xFE00, 14 /* Extend */],
            [/*start*/ 0xFE10, 7 /* MidNum */],
            [/*start*/ 0xFE11, 0 /* Other */],
            [/*start*/ 0xFE13, 10 /* MidLetter */],
            [/*start*/ 0xFE14, 7 /* MidNum */],
            [/*start*/ 0xFE15, 0 /* Other */],
            [/*start*/ 0xFE20, 14 /* Extend */],
            [/*start*/ 0xFE30, 0 /* Other */],
            [/*start*/ 0xFE33, 12 /* ExtendNumLet */],
            [/*start*/ 0xFE35, 0 /* Other */],
            [/*start*/ 0xFE4D, 12 /* ExtendNumLet */],
            [/*start*/ 0xFE50, 7 /* MidNum */],
            [/*start*/ 0xFE51, 0 /* Other */],
            [/*start*/ 0xFE52, 8 /* MidNumLet */],
            [/*start*/ 0xFE53, 0 /* Other */],
            [/*start*/ 0xFE54, 7 /* MidNum */],
            [/*start*/ 0xFE55, 10 /* MidLetter */],
            [/*start*/ 0xFE56, 0 /* Other */],
            [/*start*/ 0xFE70, 11 /* ALetter */],
            [/*start*/ 0xFE75, 0 /* Other */],
            [/*start*/ 0xFE76, 11 /* ALetter */],
            [/*start*/ 0xFEFD, 0 /* Other */],
            [/*start*/ 0xFEFF, 13 /* Format */],
            [/*start*/ 0xFF00, 0 /* Other */],
            [/*start*/ 0xFF07, 8 /* MidNumLet */],
            [/*start*/ 0xFF08, 0 /* Other */],
            [/*start*/ 0xFF0C, 7 /* MidNum */],
            [/*start*/ 0xFF0D, 0 /* Other */],
            [/*start*/ 0xFF0E, 8 /* MidNumLet */],
            [/*start*/ 0xFF0F, 0 /* Other */],
            [/*start*/ 0xFF10, 9 /* Numeric */],
            [/*start*/ 0xFF1A, 10 /* MidLetter */],
            [/*start*/ 0xFF1B, 7 /* MidNum */],
            [/*start*/ 0xFF1C, 0 /* Other */],
            [/*start*/ 0xFF21, 11 /* ALetter */],
            [/*start*/ 0xFF3B, 0 /* Other */],
            [/*start*/ 0xFF3F, 12 /* ExtendNumLet */],
            [/*start*/ 0xFF40, 0 /* Other */],
            [/*start*/ 0xFF41, 11 /* ALetter */],
            [/*start*/ 0xFF5B, 0 /* Other */],
            [/*start*/ 0xFF66, 17 /* Katakana */],
            [/*start*/ 0xFF9E, 14 /* Extend */],
            [/*start*/ 0xFFA0, 11 /* ALetter */],
            [/*start*/ 0xFFBF, 0 /* Other */],
            [/*start*/ 0xFFC2, 11 /* ALetter */],
            [/*start*/ 0xFFC8, 0 /* Other */],
            [/*start*/ 0xFFCA, 11 /* ALetter */],
            [/*start*/ 0xFFD0, 0 /* Other */],
            [/*start*/ 0xFFD2, 11 /* ALetter */],
            [/*start*/ 0xFFD8, 0 /* Other */],
            [/*start*/ 0xFFDA, 11 /* ALetter */],
            [/*start*/ 0xFFDD, 0 /* Other */],
            [/*start*/ 0xFFF9, 13 /* Format */],
            [/*start*/ 0xFFFC, 0 /* Other */],
            [/*start*/ 0x10000, 11 /* ALetter */],
            [/*start*/ 0x1000C, 0 /* Other */],
            [/*start*/ 0x1000D, 11 /* ALetter */],
            [/*start*/ 0x10027, 0 /* Other */],
            [/*start*/ 0x10028, 11 /* ALetter */],
            [/*start*/ 0x1003B, 0 /* Other */],
            [/*start*/ 0x1003C, 11 /* ALetter */],
            [/*start*/ 0x1003E, 0 /* Other */],
            [/*start*/ 0x1003F, 11 /* ALetter */],
            [/*start*/ 0x1004E, 0 /* Other */],
            [/*start*/ 0x10050, 11 /* ALetter */],
            [/*start*/ 0x1005E, 0 /* Other */],
            [/*start*/ 0x10080, 11 /* ALetter */],
            [/*start*/ 0x100FB, 0 /* Other */],
            [/*start*/ 0x10140, 11 /* ALetter */],
            [/*start*/ 0x10175, 0 /* Other */],
            [/*start*/ 0x101FD, 14 /* Extend */],
            [/*start*/ 0x101FE, 0 /* Other */],
            [/*start*/ 0x10280, 11 /* ALetter */],
            [/*start*/ 0x1029D, 0 /* Other */],
            [/*start*/ 0x102A0, 11 /* ALetter */],
            [/*start*/ 0x102D1, 0 /* Other */],
            [/*start*/ 0x102E0, 14 /* Extend */],
            [/*start*/ 0x102E1, 0 /* Other */],
            [/*start*/ 0x10300, 11 /* ALetter */],
            [/*start*/ 0x10320, 0 /* Other */],
            [/*start*/ 0x1032D, 11 /* ALetter */],
            [/*start*/ 0x1034B, 0 /* Other */],
            [/*start*/ 0x10350, 11 /* ALetter */],
            [/*start*/ 0x10376, 14 /* Extend */],
            [/*start*/ 0x1037B, 0 /* Other */],
            [/*start*/ 0x10380, 11 /* ALetter */],
            [/*start*/ 0x1039E, 0 /* Other */],
            [/*start*/ 0x103A0, 11 /* ALetter */],
            [/*start*/ 0x103C4, 0 /* Other */],
            [/*start*/ 0x103C8, 11 /* ALetter */],
            [/*start*/ 0x103D0, 0 /* Other */],
            [/*start*/ 0x103D1, 11 /* ALetter */],
            [/*start*/ 0x103D6, 0 /* Other */],
            [/*start*/ 0x10400, 11 /* ALetter */],
            [/*start*/ 0x1049E, 0 /* Other */],
            [/*start*/ 0x104A0, 9 /* Numeric */],
            [/*start*/ 0x104AA, 0 /* Other */],
            [/*start*/ 0x104B0, 11 /* ALetter */],
            [/*start*/ 0x104D4, 0 /* Other */],
            [/*start*/ 0x104D8, 11 /* ALetter */],
            [/*start*/ 0x104FC, 0 /* Other */],
            [/*start*/ 0x10500, 11 /* ALetter */],
            [/*start*/ 0x10528, 0 /* Other */],
            [/*start*/ 0x10530, 11 /* ALetter */],
            [/*start*/ 0x10564, 0 /* Other */],
            [/*start*/ 0x10600, 11 /* ALetter */],
            [/*start*/ 0x10737, 0 /* Other */],
            [/*start*/ 0x10740, 11 /* ALetter */],
            [/*start*/ 0x10756, 0 /* Other */],
            [/*start*/ 0x10760, 11 /* ALetter */],
            [/*start*/ 0x10768, 0 /* Other */],
            [/*start*/ 0x10800, 11 /* ALetter */],
            [/*start*/ 0x10806, 0 /* Other */],
            [/*start*/ 0x10808, 11 /* ALetter */],
            [/*start*/ 0x10809, 0 /* Other */],
            [/*start*/ 0x1080A, 11 /* ALetter */],
            [/*start*/ 0x10836, 0 /* Other */],
            [/*start*/ 0x10837, 11 /* ALetter */],
            [/*start*/ 0x10839, 0 /* Other */],
            [/*start*/ 0x1083C, 11 /* ALetter */],
            [/*start*/ 0x1083D, 0 /* Other */],
            [/*start*/ 0x1083F, 11 /* ALetter */],
            [/*start*/ 0x10856, 0 /* Other */],
            [/*start*/ 0x10860, 11 /* ALetter */],
            [/*start*/ 0x10877, 0 /* Other */],
            [/*start*/ 0x10880, 11 /* ALetter */],
            [/*start*/ 0x1089F, 0 /* Other */],
            [/*start*/ 0x108E0, 11 /* ALetter */],
            [/*start*/ 0x108F3, 0 /* Other */],
            [/*start*/ 0x108F4, 11 /* ALetter */],
            [/*start*/ 0x108F6, 0 /* Other */],
            [/*start*/ 0x10900, 11 /* ALetter */],
            [/*start*/ 0x10916, 0 /* Other */],
            [/*start*/ 0x10920, 11 /* ALetter */],
            [/*start*/ 0x1093A, 0 /* Other */],
            [/*start*/ 0x10980, 11 /* ALetter */],
            [/*start*/ 0x109B8, 0 /* Other */],
            [/*start*/ 0x109BE, 11 /* ALetter */],
            [/*start*/ 0x109C0, 0 /* Other */],
            [/*start*/ 0x10A00, 11 /* ALetter */],
            [/*start*/ 0x10A01, 14 /* Extend */],
            [/*start*/ 0x10A04, 0 /* Other */],
            [/*start*/ 0x10A05, 14 /* Extend */],
            [/*start*/ 0x10A07, 0 /* Other */],
            [/*start*/ 0x10A0C, 14 /* Extend */],
            [/*start*/ 0x10A10, 11 /* ALetter */],
            [/*start*/ 0x10A14, 0 /* Other */],
            [/*start*/ 0x10A15, 11 /* ALetter */],
            [/*start*/ 0x10A18, 0 /* Other */],
            [/*start*/ 0x10A19, 11 /* ALetter */],
            [/*start*/ 0x10A36, 0 /* Other */],
            [/*start*/ 0x10A38, 14 /* Extend */],
            [/*start*/ 0x10A3B, 0 /* Other */],
            [/*start*/ 0x10A3F, 14 /* Extend */],
            [/*start*/ 0x10A40, 0 /* Other */],
            [/*start*/ 0x10A60, 11 /* ALetter */],
            [/*start*/ 0x10A7D, 0 /* Other */],
            [/*start*/ 0x10A80, 11 /* ALetter */],
            [/*start*/ 0x10A9D, 0 /* Other */],
            [/*start*/ 0x10AC0, 11 /* ALetter */],
            [/*start*/ 0x10AC8, 0 /* Other */],
            [/*start*/ 0x10AC9, 11 /* ALetter */],
            [/*start*/ 0x10AE5, 14 /* Extend */],
            [/*start*/ 0x10AE7, 0 /* Other */],
            [/*start*/ 0x10B00, 11 /* ALetter */],
            [/*start*/ 0x10B36, 0 /* Other */],
            [/*start*/ 0x10B40, 11 /* ALetter */],
            [/*start*/ 0x10B56, 0 /* Other */],
            [/*start*/ 0x10B60, 11 /* ALetter */],
            [/*start*/ 0x10B73, 0 /* Other */],
            [/*start*/ 0x10B80, 11 /* ALetter */],
            [/*start*/ 0x10B92, 0 /* Other */],
            [/*start*/ 0x10C00, 11 /* ALetter */],
            [/*start*/ 0x10C49, 0 /* Other */],
            [/*start*/ 0x10C80, 11 /* ALetter */],
            [/*start*/ 0x10CB3, 0 /* Other */],
            [/*start*/ 0x10CC0, 11 /* ALetter */],
            [/*start*/ 0x10CF3, 0 /* Other */],
            [/*start*/ 0x10D00, 11 /* ALetter */],
            [/*start*/ 0x10D24, 14 /* Extend */],
            [/*start*/ 0x10D28, 0 /* Other */],
            [/*start*/ 0x10D30, 9 /* Numeric */],
            [/*start*/ 0x10D3A, 0 /* Other */],
            [/*start*/ 0x10E80, 11 /* ALetter */],
            [/*start*/ 0x10EAA, 0 /* Other */],
            [/*start*/ 0x10EAB, 14 /* Extend */],
            [/*start*/ 0x10EAD, 0 /* Other */],
            [/*start*/ 0x10EB0, 11 /* ALetter */],
            [/*start*/ 0x10EB2, 0 /* Other */],
            [/*start*/ 0x10F00, 11 /* ALetter */],
            [/*start*/ 0x10F1D, 0 /* Other */],
            [/*start*/ 0x10F27, 11 /* ALetter */],
            [/*start*/ 0x10F28, 0 /* Other */],
            [/*start*/ 0x10F30, 11 /* ALetter */],
            [/*start*/ 0x10F46, 14 /* Extend */],
            [/*start*/ 0x10F51, 0 /* Other */],
            [/*start*/ 0x10FB0, 11 /* ALetter */],
            [/*start*/ 0x10FC5, 0 /* Other */],
            [/*start*/ 0x10FE0, 11 /* ALetter */],
            [/*start*/ 0x10FF7, 0 /* Other */],
            [/*start*/ 0x11000, 14 /* Extend */],
            [/*start*/ 0x11003, 11 /* ALetter */],
            [/*start*/ 0x11038, 14 /* Extend */],
            [/*start*/ 0x11047, 0 /* Other */],
            [/*start*/ 0x11066, 9 /* Numeric */],
            [/*start*/ 0x11070, 0 /* Other */],
            [/*start*/ 0x1107F, 14 /* Extend */],
            [/*start*/ 0x11083, 11 /* ALetter */],
            [/*start*/ 0x110B0, 14 /* Extend */],
            [/*start*/ 0x110BB, 0 /* Other */],
            [/*start*/ 0x110BD, 13 /* Format */],
            [/*start*/ 0x110BE, 0 /* Other */],
            [/*start*/ 0x110CD, 13 /* Format */],
            [/*start*/ 0x110CE, 0 /* Other */],
            [/*start*/ 0x110D0, 11 /* ALetter */],
            [/*start*/ 0x110E9, 0 /* Other */],
            [/*start*/ 0x110F0, 9 /* Numeric */],
            [/*start*/ 0x110FA, 0 /* Other */],
            [/*start*/ 0x11100, 14 /* Extend */],
            [/*start*/ 0x11103, 11 /* ALetter */],
            [/*start*/ 0x11127, 14 /* Extend */],
            [/*start*/ 0x11135, 0 /* Other */],
            [/*start*/ 0x11136, 9 /* Numeric */],
            [/*start*/ 0x11140, 0 /* Other */],
            [/*start*/ 0x11144, 11 /* ALetter */],
            [/*start*/ 0x11145, 14 /* Extend */],
            [/*start*/ 0x11147, 11 /* ALetter */],
            [/*start*/ 0x11148, 0 /* Other */],
            [/*start*/ 0x11150, 11 /* ALetter */],
            [/*start*/ 0x11173, 14 /* Extend */],
            [/*start*/ 0x11174, 0 /* Other */],
            [/*start*/ 0x11176, 11 /* ALetter */],
            [/*start*/ 0x11177, 0 /* Other */],
            [/*start*/ 0x11180, 14 /* Extend */],
            [/*start*/ 0x11183, 11 /* ALetter */],
            [/*start*/ 0x111B3, 14 /* Extend */],
            [/*start*/ 0x111C1, 11 /* ALetter */],
            [/*start*/ 0x111C5, 0 /* Other */],
            [/*start*/ 0x111C9, 14 /* Extend */],
            [/*start*/ 0x111CD, 0 /* Other */],
            [/*start*/ 0x111CE, 14 /* Extend */],
            [/*start*/ 0x111D0, 9 /* Numeric */],
            [/*start*/ 0x111DA, 11 /* ALetter */],
            [/*start*/ 0x111DB, 0 /* Other */],
            [/*start*/ 0x111DC, 11 /* ALetter */],
            [/*start*/ 0x111DD, 0 /* Other */],
            [/*start*/ 0x11200, 11 /* ALetter */],
            [/*start*/ 0x11212, 0 /* Other */],
            [/*start*/ 0x11213, 11 /* ALetter */],
            [/*start*/ 0x1122C, 14 /* Extend */],
            [/*start*/ 0x11238, 0 /* Other */],
            [/*start*/ 0x1123E, 14 /* Extend */],
            [/*start*/ 0x1123F, 0 /* Other */],
            [/*start*/ 0x11280, 11 /* ALetter */],
            [/*start*/ 0x11287, 0 /* Other */],
            [/*start*/ 0x11288, 11 /* ALetter */],
            [/*start*/ 0x11289, 0 /* Other */],
            [/*start*/ 0x1128A, 11 /* ALetter */],
            [/*start*/ 0x1128E, 0 /* Other */],
            [/*start*/ 0x1128F, 11 /* ALetter */],
            [/*start*/ 0x1129E, 0 /* Other */],
            [/*start*/ 0x1129F, 11 /* ALetter */],
            [/*start*/ 0x112A9, 0 /* Other */],
            [/*start*/ 0x112B0, 11 /* ALetter */],
            [/*start*/ 0x112DF, 14 /* Extend */],
            [/*start*/ 0x112EB, 0 /* Other */],
            [/*start*/ 0x112F0, 9 /* Numeric */],
            [/*start*/ 0x112FA, 0 /* Other */],
            [/*start*/ 0x11300, 14 /* Extend */],
            [/*start*/ 0x11304, 0 /* Other */],
            [/*start*/ 0x11305, 11 /* ALetter */],
            [/*start*/ 0x1130D, 0 /* Other */],
            [/*start*/ 0x1130F, 11 /* ALetter */],
            [/*start*/ 0x11311, 0 /* Other */],
            [/*start*/ 0x11313, 11 /* ALetter */],
            [/*start*/ 0x11329, 0 /* Other */],
            [/*start*/ 0x1132A, 11 /* ALetter */],
            [/*start*/ 0x11331, 0 /* Other */],
            [/*start*/ 0x11332, 11 /* ALetter */],
            [/*start*/ 0x11334, 0 /* Other */],
            [/*start*/ 0x11335, 11 /* ALetter */],
            [/*start*/ 0x1133A, 0 /* Other */],
            [/*start*/ 0x1133B, 14 /* Extend */],
            [/*start*/ 0x1133D, 11 /* ALetter */],
            [/*start*/ 0x1133E, 14 /* Extend */],
            [/*start*/ 0x11345, 0 /* Other */],
            [/*start*/ 0x11347, 14 /* Extend */],
            [/*start*/ 0x11349, 0 /* Other */],
            [/*start*/ 0x1134B, 14 /* Extend */],
            [/*start*/ 0x1134E, 0 /* Other */],
            [/*start*/ 0x11350, 11 /* ALetter */],
            [/*start*/ 0x11351, 0 /* Other */],
            [/*start*/ 0x11357, 14 /* Extend */],
            [/*start*/ 0x11358, 0 /* Other */],
            [/*start*/ 0x1135D, 11 /* ALetter */],
            [/*start*/ 0x11362, 14 /* Extend */],
            [/*start*/ 0x11364, 0 /* Other */],
            [/*start*/ 0x11366, 14 /* Extend */],
            [/*start*/ 0x1136D, 0 /* Other */],
            [/*start*/ 0x11370, 14 /* Extend */],
            [/*start*/ 0x11375, 0 /* Other */],
            [/*start*/ 0x11400, 11 /* ALetter */],
            [/*start*/ 0x11435, 14 /* Extend */],
            [/*start*/ 0x11447, 11 /* ALetter */],
            [/*start*/ 0x1144B, 0 /* Other */],
            [/*start*/ 0x11450, 9 /* Numeric */],
            [/*start*/ 0x1145A, 0 /* Other */],
            [/*start*/ 0x1145E, 14 /* Extend */],
            [/*start*/ 0x1145F, 11 /* ALetter */],
            [/*start*/ 0x11462, 0 /* Other */],
            [/*start*/ 0x11480, 11 /* ALetter */],
            [/*start*/ 0x114B0, 14 /* Extend */],
            [/*start*/ 0x114C4, 11 /* ALetter */],
            [/*start*/ 0x114C6, 0 /* Other */],
            [/*start*/ 0x114C7, 11 /* ALetter */],
            [/*start*/ 0x114C8, 0 /* Other */],
            [/*start*/ 0x114D0, 9 /* Numeric */],
            [/*start*/ 0x114DA, 0 /* Other */],
            [/*start*/ 0x11580, 11 /* ALetter */],
            [/*start*/ 0x115AF, 14 /* Extend */],
            [/*start*/ 0x115B6, 0 /* Other */],
            [/*start*/ 0x115B8, 14 /* Extend */],
            [/*start*/ 0x115C1, 0 /* Other */],
            [/*start*/ 0x115D8, 11 /* ALetter */],
            [/*start*/ 0x115DC, 14 /* Extend */],
            [/*start*/ 0x115DE, 0 /* Other */],
            [/*start*/ 0x11600, 11 /* ALetter */],
            [/*start*/ 0x11630, 14 /* Extend */],
            [/*start*/ 0x11641, 0 /* Other */],
            [/*start*/ 0x11644, 11 /* ALetter */],
            [/*start*/ 0x11645, 0 /* Other */],
            [/*start*/ 0x11650, 9 /* Numeric */],
            [/*start*/ 0x1165A, 0 /* Other */],
            [/*start*/ 0x11680, 11 /* ALetter */],
            [/*start*/ 0x116AB, 14 /* Extend */],
            [/*start*/ 0x116B8, 11 /* ALetter */],
            [/*start*/ 0x116B9, 0 /* Other */],
            [/*start*/ 0x116C0, 9 /* Numeric */],
            [/*start*/ 0x116CA, 0 /* Other */],
            [/*start*/ 0x1171D, 14 /* Extend */],
            [/*start*/ 0x1172C, 0 /* Other */],
            [/*start*/ 0x11730, 9 /* Numeric */],
            [/*start*/ 0x1173A, 0 /* Other */],
            [/*start*/ 0x11800, 11 /* ALetter */],
            [/*start*/ 0x1182C, 14 /* Extend */],
            [/*start*/ 0x1183B, 0 /* Other */],
            [/*start*/ 0x118A0, 11 /* ALetter */],
            [/*start*/ 0x118E0, 9 /* Numeric */],
            [/*start*/ 0x118EA, 0 /* Other */],
            [/*start*/ 0x118FF, 11 /* ALetter */],
            [/*start*/ 0x11907, 0 /* Other */],
            [/*start*/ 0x11909, 11 /* ALetter */],
            [/*start*/ 0x1190A, 0 /* Other */],
            [/*start*/ 0x1190C, 11 /* ALetter */],
            [/*start*/ 0x11914, 0 /* Other */],
            [/*start*/ 0x11915, 11 /* ALetter */],
            [/*start*/ 0x11917, 0 /* Other */],
            [/*start*/ 0x11918, 11 /* ALetter */],
            [/*start*/ 0x11930, 14 /* Extend */],
            [/*start*/ 0x11936, 0 /* Other */],
            [/*start*/ 0x11937, 14 /* Extend */],
            [/*start*/ 0x11939, 0 /* Other */],
            [/*start*/ 0x1193B, 14 /* Extend */],
            [/*start*/ 0x1193F, 11 /* ALetter */],
            [/*start*/ 0x11940, 14 /* Extend */],
            [/*start*/ 0x11941, 11 /* ALetter */],
            [/*start*/ 0x11942, 14 /* Extend */],
            [/*start*/ 0x11944, 0 /* Other */],
            [/*start*/ 0x11950, 9 /* Numeric */],
            [/*start*/ 0x1195A, 0 /* Other */],
            [/*start*/ 0x119A0, 11 /* ALetter */],
            [/*start*/ 0x119A8, 0 /* Other */],
            [/*start*/ 0x119AA, 11 /* ALetter */],
            [/*start*/ 0x119D1, 14 /* Extend */],
            [/*start*/ 0x119D8, 0 /* Other */],
            [/*start*/ 0x119DA, 14 /* Extend */],
            [/*start*/ 0x119E1, 11 /* ALetter */],
            [/*start*/ 0x119E2, 0 /* Other */],
            [/*start*/ 0x119E3, 11 /* ALetter */],
            [/*start*/ 0x119E4, 14 /* Extend */],
            [/*start*/ 0x119E5, 0 /* Other */],
            [/*start*/ 0x11A00, 11 /* ALetter */],
            [/*start*/ 0x11A01, 14 /* Extend */],
            [/*start*/ 0x11A0B, 11 /* ALetter */],
            [/*start*/ 0x11A33, 14 /* Extend */],
            [/*start*/ 0x11A3A, 11 /* ALetter */],
            [/*start*/ 0x11A3B, 14 /* Extend */],
            [/*start*/ 0x11A3F, 0 /* Other */],
            [/*start*/ 0x11A47, 14 /* Extend */],
            [/*start*/ 0x11A48, 0 /* Other */],
            [/*start*/ 0x11A50, 11 /* ALetter */],
            [/*start*/ 0x11A51, 14 /* Extend */],
            [/*start*/ 0x11A5C, 11 /* ALetter */],
            [/*start*/ 0x11A8A, 14 /* Extend */],
            [/*start*/ 0x11A9A, 0 /* Other */],
            [/*start*/ 0x11A9D, 11 /* ALetter */],
            [/*start*/ 0x11A9E, 0 /* Other */],
            [/*start*/ 0x11AC0, 11 /* ALetter */],
            [/*start*/ 0x11AF9, 0 /* Other */],
            [/*start*/ 0x11C00, 11 /* ALetter */],
            [/*start*/ 0x11C09, 0 /* Other */],
            [/*start*/ 0x11C0A, 11 /* ALetter */],
            [/*start*/ 0x11C2F, 14 /* Extend */],
            [/*start*/ 0x11C37, 0 /* Other */],
            [/*start*/ 0x11C38, 14 /* Extend */],
            [/*start*/ 0x11C40, 11 /* ALetter */],
            [/*start*/ 0x11C41, 0 /* Other */],
            [/*start*/ 0x11C50, 9 /* Numeric */],
            [/*start*/ 0x11C5A, 0 /* Other */],
            [/*start*/ 0x11C72, 11 /* ALetter */],
            [/*start*/ 0x11C90, 0 /* Other */],
            [/*start*/ 0x11C92, 14 /* Extend */],
            [/*start*/ 0x11CA8, 0 /* Other */],
            [/*start*/ 0x11CA9, 14 /* Extend */],
            [/*start*/ 0x11CB7, 0 /* Other */],
            [/*start*/ 0x11D00, 11 /* ALetter */],
            [/*start*/ 0x11D07, 0 /* Other */],
            [/*start*/ 0x11D08, 11 /* ALetter */],
            [/*start*/ 0x11D0A, 0 /* Other */],
            [/*start*/ 0x11D0B, 11 /* ALetter */],
            [/*start*/ 0x11D31, 14 /* Extend */],
            [/*start*/ 0x11D37, 0 /* Other */],
            [/*start*/ 0x11D3A, 14 /* Extend */],
            [/*start*/ 0x11D3B, 0 /* Other */],
            [/*start*/ 0x11D3C, 14 /* Extend */],
            [/*start*/ 0x11D3E, 0 /* Other */],
            [/*start*/ 0x11D3F, 14 /* Extend */],
            [/*start*/ 0x11D46, 11 /* ALetter */],
            [/*start*/ 0x11D47, 14 /* Extend */],
            [/*start*/ 0x11D48, 0 /* Other */],
            [/*start*/ 0x11D50, 9 /* Numeric */],
            [/*start*/ 0x11D5A, 0 /* Other */],
            [/*start*/ 0x11D60, 11 /* ALetter */],
            [/*start*/ 0x11D66, 0 /* Other */],
            [/*start*/ 0x11D67, 11 /* ALetter */],
            [/*start*/ 0x11D69, 0 /* Other */],
            [/*start*/ 0x11D6A, 11 /* ALetter */],
            [/*start*/ 0x11D8A, 14 /* Extend */],
            [/*start*/ 0x11D8F, 0 /* Other */],
            [/*start*/ 0x11D90, 14 /* Extend */],
            [/*start*/ 0x11D92, 0 /* Other */],
            [/*start*/ 0x11D93, 14 /* Extend */],
            [/*start*/ 0x11D98, 11 /* ALetter */],
            [/*start*/ 0x11D99, 0 /* Other */],
            [/*start*/ 0x11DA0, 9 /* Numeric */],
            [/*start*/ 0x11DAA, 0 /* Other */],
            [/*start*/ 0x11EE0, 11 /* ALetter */],
            [/*start*/ 0x11EF3, 14 /* Extend */],
            [/*start*/ 0x11EF7, 0 /* Other */],
            [/*start*/ 0x11FB0, 11 /* ALetter */],
            [/*start*/ 0x11FB1, 0 /* Other */],
            [/*start*/ 0x12000, 11 /* ALetter */],
            [/*start*/ 0x1239A, 0 /* Other */],
            [/*start*/ 0x12400, 11 /* ALetter */],
            [/*start*/ 0x1246F, 0 /* Other */],
            [/*start*/ 0x12480, 11 /* ALetter */],
            [/*start*/ 0x12544, 0 /* Other */],
            [/*start*/ 0x13000, 11 /* ALetter */],
            [/*start*/ 0x1342F, 0 /* Other */],
            [/*start*/ 0x13430, 13 /* Format */],
            [/*start*/ 0x13439, 0 /* Other */],
            [/*start*/ 0x14400, 11 /* ALetter */],
            [/*start*/ 0x14647, 0 /* Other */],
            [/*start*/ 0x16800, 11 /* ALetter */],
            [/*start*/ 0x16A39, 0 /* Other */],
            [/*start*/ 0x16A40, 11 /* ALetter */],
            [/*start*/ 0x16A5F, 0 /* Other */],
            [/*start*/ 0x16A60, 9 /* Numeric */],
            [/*start*/ 0x16A6A, 0 /* Other */],
            [/*start*/ 0x16AD0, 11 /* ALetter */],
            [/*start*/ 0x16AEE, 0 /* Other */],
            [/*start*/ 0x16AF0, 14 /* Extend */],
            [/*start*/ 0x16AF5, 0 /* Other */],
            [/*start*/ 0x16B00, 11 /* ALetter */],
            [/*start*/ 0x16B30, 14 /* Extend */],
            [/*start*/ 0x16B37, 0 /* Other */],
            [/*start*/ 0x16B40, 11 /* ALetter */],
            [/*start*/ 0x16B44, 0 /* Other */],
            [/*start*/ 0x16B50, 9 /* Numeric */],
            [/*start*/ 0x16B5A, 0 /* Other */],
            [/*start*/ 0x16B63, 11 /* ALetter */],
            [/*start*/ 0x16B78, 0 /* Other */],
            [/*start*/ 0x16B7D, 11 /* ALetter */],
            [/*start*/ 0x16B90, 0 /* Other */],
            [/*start*/ 0x16E40, 11 /* ALetter */],
            [/*start*/ 0x16E80, 0 /* Other */],
            [/*start*/ 0x16F00, 11 /* ALetter */],
            [/*start*/ 0x16F4B, 0 /* Other */],
            [/*start*/ 0x16F4F, 14 /* Extend */],
            [/*start*/ 0x16F50, 11 /* ALetter */],
            [/*start*/ 0x16F51, 14 /* Extend */],
            [/*start*/ 0x16F88, 0 /* Other */],
            [/*start*/ 0x16F8F, 14 /* Extend */],
            [/*start*/ 0x16F93, 11 /* ALetter */],
            [/*start*/ 0x16FA0, 0 /* Other */],
            [/*start*/ 0x16FE0, 11 /* ALetter */],
            [/*start*/ 0x16FE2, 0 /* Other */],
            [/*start*/ 0x16FE3, 11 /* ALetter */],
            [/*start*/ 0x16FE4, 14 /* Extend */],
            [/*start*/ 0x16FE5, 0 /* Other */],
            [/*start*/ 0x16FF0, 14 /* Extend */],
            [/*start*/ 0x16FF2, 0 /* Other */],
            [/*start*/ 0x1B000, 17 /* Katakana */],
            [/*start*/ 0x1B001, 0 /* Other */],
            [/*start*/ 0x1B164, 17 /* Katakana */],
            [/*start*/ 0x1B168, 0 /* Other */],
            [/*start*/ 0x1BC00, 11 /* ALetter */],
            [/*start*/ 0x1BC6B, 0 /* Other */],
            [/*start*/ 0x1BC70, 11 /* ALetter */],
            [/*start*/ 0x1BC7D, 0 /* Other */],
            [/*start*/ 0x1BC80, 11 /* ALetter */],
            [/*start*/ 0x1BC89, 0 /* Other */],
            [/*start*/ 0x1BC90, 11 /* ALetter */],
            [/*start*/ 0x1BC9A, 0 /* Other */],
            [/*start*/ 0x1BC9D, 14 /* Extend */],
            [/*start*/ 0x1BC9F, 0 /* Other */],
            [/*start*/ 0x1BCA0, 13 /* Format */],
            [/*start*/ 0x1BCA4, 0 /* Other */],
            [/*start*/ 0x1D165, 14 /* Extend */],
            [/*start*/ 0x1D16A, 0 /* Other */],
            [/*start*/ 0x1D16D, 14 /* Extend */],
            [/*start*/ 0x1D173, 13 /* Format */],
            [/*start*/ 0x1D17B, 14 /* Extend */],
            [/*start*/ 0x1D183, 0 /* Other */],
            [/*start*/ 0x1D185, 14 /* Extend */],
            [/*start*/ 0x1D18C, 0 /* Other */],
            [/*start*/ 0x1D1AA, 14 /* Extend */],
            [/*start*/ 0x1D1AE, 0 /* Other */],
            [/*start*/ 0x1D242, 14 /* Extend */],
            [/*start*/ 0x1D245, 0 /* Other */],
            [/*start*/ 0x1D400, 11 /* ALetter */],
            [/*start*/ 0x1D455, 0 /* Other */],
            [/*start*/ 0x1D456, 11 /* ALetter */],
            [/*start*/ 0x1D49D, 0 /* Other */],
            [/*start*/ 0x1D49E, 11 /* ALetter */],
            [/*start*/ 0x1D4A0, 0 /* Other */],
            [/*start*/ 0x1D4A2, 11 /* ALetter */],
            [/*start*/ 0x1D4A3, 0 /* Other */],
            [/*start*/ 0x1D4A5, 11 /* ALetter */],
            [/*start*/ 0x1D4A7, 0 /* Other */],
            [/*start*/ 0x1D4A9, 11 /* ALetter */],
            [/*start*/ 0x1D4AD, 0 /* Other */],
            [/*start*/ 0x1D4AE, 11 /* ALetter */],
            [/*start*/ 0x1D4BA, 0 /* Other */],
            [/*start*/ 0x1D4BB, 11 /* ALetter */],
            [/*start*/ 0x1D4BC, 0 /* Other */],
            [/*start*/ 0x1D4BD, 11 /* ALetter */],
            [/*start*/ 0x1D4C4, 0 /* Other */],
            [/*start*/ 0x1D4C5, 11 /* ALetter */],
            [/*start*/ 0x1D506, 0 /* Other */],
            [/*start*/ 0x1D507, 11 /* ALetter */],
            [/*start*/ 0x1D50B, 0 /* Other */],
            [/*start*/ 0x1D50D, 11 /* ALetter */],
            [/*start*/ 0x1D515, 0 /* Other */],
            [/*start*/ 0x1D516, 11 /* ALetter */],
            [/*start*/ 0x1D51D, 0 /* Other */],
            [/*start*/ 0x1D51E, 11 /* ALetter */],
            [/*start*/ 0x1D53A, 0 /* Other */],
            [/*start*/ 0x1D53B, 11 /* ALetter */],
            [/*start*/ 0x1D53F, 0 /* Other */],
            [/*start*/ 0x1D540, 11 /* ALetter */],
            [/*start*/ 0x1D545, 0 /* Other */],
            [/*start*/ 0x1D546, 11 /* ALetter */],
            [/*start*/ 0x1D547, 0 /* Other */],
            [/*start*/ 0x1D54A, 11 /* ALetter */],
            [/*start*/ 0x1D551, 0 /* Other */],
            [/*start*/ 0x1D552, 11 /* ALetter */],
            [/*start*/ 0x1D6A6, 0 /* Other */],
            [/*start*/ 0x1D6A8, 11 /* ALetter */],
            [/*start*/ 0x1D6C1, 0 /* Other */],
            [/*start*/ 0x1D6C2, 11 /* ALetter */],
            [/*start*/ 0x1D6DB, 0 /* Other */],
            [/*start*/ 0x1D6DC, 11 /* ALetter */],
            [/*start*/ 0x1D6FB, 0 /* Other */],
            [/*start*/ 0x1D6FC, 11 /* ALetter */],
            [/*start*/ 0x1D715, 0 /* Other */],
            [/*start*/ 0x1D716, 11 /* ALetter */],
            [/*start*/ 0x1D735, 0 /* Other */],
            [/*start*/ 0x1D736, 11 /* ALetter */],
            [/*start*/ 0x1D74F, 0 /* Other */],
            [/*start*/ 0x1D750, 11 /* ALetter */],
            [/*start*/ 0x1D76F, 0 /* Other */],
            [/*start*/ 0x1D770, 11 /* ALetter */],
            [/*start*/ 0x1D789, 0 /* Other */],
            [/*start*/ 0x1D78A, 11 /* ALetter */],
            [/*start*/ 0x1D7A9, 0 /* Other */],
            [/*start*/ 0x1D7AA, 11 /* ALetter */],
            [/*start*/ 0x1D7C3, 0 /* Other */],
            [/*start*/ 0x1D7C4, 11 /* ALetter */],
            [/*start*/ 0x1D7CC, 0 /* Other */],
            [/*start*/ 0x1D7CE, 9 /* Numeric */],
            [/*start*/ 0x1D800, 0 /* Other */],
            [/*start*/ 0x1DA00, 14 /* Extend */],
            [/*start*/ 0x1DA37, 0 /* Other */],
            [/*start*/ 0x1DA3B, 14 /* Extend */],
            [/*start*/ 0x1DA6D, 0 /* Other */],
            [/*start*/ 0x1DA75, 14 /* Extend */],
            [/*start*/ 0x1DA76, 0 /* Other */],
            [/*start*/ 0x1DA84, 14 /* Extend */],
            [/*start*/ 0x1DA85, 0 /* Other */],
            [/*start*/ 0x1DA9B, 14 /* Extend */],
            [/*start*/ 0x1DAA0, 0 /* Other */],
            [/*start*/ 0x1DAA1, 14 /* Extend */],
            [/*start*/ 0x1DAB0, 0 /* Other */],
            [/*start*/ 0x1E000, 14 /* Extend */],
            [/*start*/ 0x1E007, 0 /* Other */],
            [/*start*/ 0x1E008, 14 /* Extend */],
            [/*start*/ 0x1E019, 0 /* Other */],
            [/*start*/ 0x1E01B, 14 /* Extend */],
            [/*start*/ 0x1E022, 0 /* Other */],
            [/*start*/ 0x1E023, 14 /* Extend */],
            [/*start*/ 0x1E025, 0 /* Other */],
            [/*start*/ 0x1E026, 14 /* Extend */],
            [/*start*/ 0x1E02B, 0 /* Other */],
            [/*start*/ 0x1E100, 11 /* ALetter */],
            [/*start*/ 0x1E12D, 0 /* Other */],
            [/*start*/ 0x1E130, 14 /* Extend */],
            [/*start*/ 0x1E137, 11 /* ALetter */],
            [/*start*/ 0x1E13E, 0 /* Other */],
            [/*start*/ 0x1E140, 9 /* Numeric */],
            [/*start*/ 0x1E14A, 0 /* Other */],
            [/*start*/ 0x1E14E, 11 /* ALetter */],
            [/*start*/ 0x1E14F, 0 /* Other */],
            [/*start*/ 0x1E2C0, 11 /* ALetter */],
            [/*start*/ 0x1E2EC, 14 /* Extend */],
            [/*start*/ 0x1E2F0, 9 /* Numeric */],
            [/*start*/ 0x1E2FA, 0 /* Other */],
            [/*start*/ 0x1E800, 11 /* ALetter */],
            [/*start*/ 0x1E8C5, 0 /* Other */],
            [/*start*/ 0x1E8D0, 14 /* Extend */],
            [/*start*/ 0x1E8D7, 0 /* Other */],
            [/*start*/ 0x1E900, 11 /* ALetter */],
            [/*start*/ 0x1E944, 14 /* Extend */],
            [/*start*/ 0x1E94B, 11 /* ALetter */],
            [/*start*/ 0x1E94C, 0 /* Other */],
            [/*start*/ 0x1E950, 9 /* Numeric */],
            [/*start*/ 0x1E95A, 0 /* Other */],
            [/*start*/ 0x1EE00, 11 /* ALetter */],
            [/*start*/ 0x1EE04, 0 /* Other */],
            [/*start*/ 0x1EE05, 11 /* ALetter */],
            [/*start*/ 0x1EE20, 0 /* Other */],
            [/*start*/ 0x1EE21, 11 /* ALetter */],
            [/*start*/ 0x1EE23, 0 /* Other */],
            [/*start*/ 0x1EE24, 11 /* ALetter */],
            [/*start*/ 0x1EE25, 0 /* Other */],
            [/*start*/ 0x1EE27, 11 /* ALetter */],
            [/*start*/ 0x1EE28, 0 /* Other */],
            [/*start*/ 0x1EE29, 11 /* ALetter */],
            [/*start*/ 0x1EE33, 0 /* Other */],
            [/*start*/ 0x1EE34, 11 /* ALetter */],
            [/*start*/ 0x1EE38, 0 /* Other */],
            [/*start*/ 0x1EE39, 11 /* ALetter */],
            [/*start*/ 0x1EE3A, 0 /* Other */],
            [/*start*/ 0x1EE3B, 11 /* ALetter */],
            [/*start*/ 0x1EE3C, 0 /* Other */],
            [/*start*/ 0x1EE42, 11 /* ALetter */],
            [/*start*/ 0x1EE43, 0 /* Other */],
            [/*start*/ 0x1EE47, 11 /* ALetter */],
            [/*start*/ 0x1EE48, 0 /* Other */],
            [/*start*/ 0x1EE49, 11 /* ALetter */],
            [/*start*/ 0x1EE4A, 0 /* Other */],
            [/*start*/ 0x1EE4B, 11 /* ALetter */],
            [/*start*/ 0x1EE4C, 0 /* Other */],
            [/*start*/ 0x1EE4D, 11 /* ALetter */],
            [/*start*/ 0x1EE50, 0 /* Other */],
            [/*start*/ 0x1EE51, 11 /* ALetter */],
            [/*start*/ 0x1EE53, 0 /* Other */],
            [/*start*/ 0x1EE54, 11 /* ALetter */],
            [/*start*/ 0x1EE55, 0 /* Other */],
            [/*start*/ 0x1EE57, 11 /* ALetter */],
            [/*start*/ 0x1EE58, 0 /* Other */],
            [/*start*/ 0x1EE59, 11 /* ALetter */],
            [/*start*/ 0x1EE5A, 0 /* Other */],
            [/*start*/ 0x1EE5B, 11 /* ALetter */],
            [/*start*/ 0x1EE5C, 0 /* Other */],
            [/*start*/ 0x1EE5D, 11 /* ALetter */],
            [/*start*/ 0x1EE5E, 0 /* Other */],
            [/*start*/ 0x1EE5F, 11 /* ALetter */],
            [/*start*/ 0x1EE60, 0 /* Other */],
            [/*start*/ 0x1EE61, 11 /* ALetter */],
            [/*start*/ 0x1EE63, 0 /* Other */],
            [/*start*/ 0x1EE64, 11 /* ALetter */],
            [/*start*/ 0x1EE65, 0 /* Other */],
            [/*start*/ 0x1EE67, 11 /* ALetter */],
            [/*start*/ 0x1EE6B, 0 /* Other */],
            [/*start*/ 0x1EE6C, 11 /* ALetter */],
            [/*start*/ 0x1EE73, 0 /* Other */],
            [/*start*/ 0x1EE74, 11 /* ALetter */],
            [/*start*/ 0x1EE78, 0 /* Other */],
            [/*start*/ 0x1EE79, 11 /* ALetter */],
            [/*start*/ 0x1EE7D, 0 /* Other */],
            [/*start*/ 0x1EE7E, 11 /* ALetter */],
            [/*start*/ 0x1EE7F, 0 /* Other */],
            [/*start*/ 0x1EE80, 11 /* ALetter */],
            [/*start*/ 0x1EE8A, 0 /* Other */],
            [/*start*/ 0x1EE8B, 11 /* ALetter */],
            [/*start*/ 0x1EE9C, 0 /* Other */],
            [/*start*/ 0x1EEA1, 11 /* ALetter */],
            [/*start*/ 0x1EEA4, 0 /* Other */],
            [/*start*/ 0x1EEA5, 11 /* ALetter */],
            [/*start*/ 0x1EEAA, 0 /* Other */],
            [/*start*/ 0x1EEAB, 11 /* ALetter */],
            [/*start*/ 0x1EEBC, 0 /* Other */],
            [/*start*/ 0x1F130, 11 /* ALetter */],
            [/*start*/ 0x1F14A, 0 /* Other */],
            [/*start*/ 0x1F150, 11 /* ALetter */],
            [/*start*/ 0x1F16A, 0 /* Other */],
            [/*start*/ 0x1F170, 11 /* ALetter */],
            [/*start*/ 0x1F18A, 0 /* Other */],
            [/*start*/ 0x1F1E6, 18 /* Regional_Indicator */],
            [/*start*/ 0x1F200, 0 /* Other */],
            [/*start*/ 0x1F3FB, 14 /* Extend */],
            [/*start*/ 0x1F400, 0 /* Other */],
            [/*start*/ 0x1FBF0, 9 /* Numeric */],
            [/*start*/ 0x1FBFA, 0 /* Other */],
            [/*start*/ 0xE0001, 13 /* Format */],
            [/*start*/ 0xE0002, 0 /* Other */],
            [/*start*/ 0xE0020, 14 /* Extend */],
            [/*start*/ 0xE0080, 0 /* Other */],
            [/*start*/ 0xE0100, 14 /* Extend */],
            [/*start*/ 0xE01F0, 0 /* Other */],
        ];
    })(data = wordBreakers.data || (wordBreakers.data = {}));
})(wordBreakers || (wordBreakers = {}));
// Include the word-breaking data here:
/// <reference path="./data.ts" />
var wordBreakers;
(function (wordBreakers) {
    /**
     * Word breaker based on Unicode Standard Annex #29, Section 4.1:
     * Default Word Boundary Specification.
     *
     * @see http://unicode.org/reports/tr29/#Word_Boundaries
     * @see https://github.com/eddieantonio/unicode-default-word-boundary/tree/v12.0.0
     */
    function default_(text) {
        var boundaries = findBoundaries(text);
        if (boundaries.length == 0) {
            return [];
        }
        // All non-empty strings have at least TWO boundaries at the start and end of
        // the string.
        var spans = [];
        for (var i = 0; i < boundaries.length - 1; i++) {
            var start = boundaries[i];
            var end = boundaries[i + 1];
            var span = new LazySpan(text, start, end);
            if (isNonSpace(span.text)) {
                spans.push(span);
                // Preserve a sequence-final space if it exists.  Needed to signal "end of word".
            }
            else if (i == boundaries.length - 2) { // if "we just checked the final boundary"...
                // We don't want to return the whitespace itself; the correct token is simply ''.
                span = new LazySpan(text, end, end);
                spans.push(span);
            }
        }
        return spans;
    }
    wordBreakers.default_ = default_;
    var WORD_BREAK_PROPERTY = wordBreakers.data.WORD_BREAK_PROPERTY;
    /**
     * A span that does not cut out the substring until it absolutely has to!
     */
    var LazySpan = /** @class */ (function () {
        function LazySpan(source, start, end) {
            this._source = source;
            this.start = start;
            this.end = end;
        }
        Object.defineProperty(LazySpan.prototype, "text", {
            get: function () {
                return this._source.substring(this.start, this.end);
            },
            enumerable: true,
            configurable: true
        });
        Object.defineProperty(LazySpan.prototype, "length", {
            get: function () {
                return this.end - this.start;
            },
            enumerable: true,
            configurable: true
        });
        return LazySpan;
    }());
    /**
     * Returns true when the chunk does not solely consist of whitespace.
     *
     * @param chunk a chunk of text. Starts and ends at word boundaries.
     */
    function isNonSpace(chunk) {
        return !Array.from(chunk).map(property).every(function (wb) { return (wb === 3 /* CR */ ||
            wb === 1 /* LF */ ||
            wb === 2 /* Newline */ ||
            wb === 4 /* WSegSpace */); });
    }
    /**
     * Yields a series of string indices where a word break should
     * occur. That is, there should be a break BEFORE each string
     * index yielded by this generator.
     *
     * @param text Text to find word boundaries in.
     */
    function findBoundaries(text) {
        var _a, _b, _c;
        // WB1 and WB2: no boundaries if given an empty string.
        if (text.length === 0) {
            // There are no boundaries in an empty string!
            return [];
        }
        // This algorithm works by maintaining a sliding window of four SCALAR VALUES.
        //
        //  - Scalar values? JavaScript strings are NOT actually a string of
        //    Unicode code points; some characters are made up of TWO
        //    JavaScript indices. e.g.,
        //        "💩".length === 2;
        //        "💩"[0] === '\uD83D';
        //        "💩"[1] === '\uDCA9';
        //
        //    These characters that are represented by TWO indices are
        //    called "surrogate pairs". Since we don't want to be in the
        //    "middle" of a character, make sure we're always advancing
        //    by scalar values, and NOT indices. That means, we sometimes
        //    need to advance by TWO indices, not just one.
        //  - Four values? Some rules look at what's to the left of
        //    left, and some look at what's to the right of right. So
        //    keep track of this!
        var boundaries = [];
        var rightPos;
        var lookaheadPos = 0; // lookahead, one scalar value to the right of right.
        // Before the start of the string is also the start of the string.
        var lookbehind;
        var left = 19 /* sot */;
        var right = 19 /* sot */;
        var lookahead = wordbreakPropertyAt(0);
        // Count RIs to make sure we're not splitting emoji flags:
        var nConsecutiveRegionalIndicators = 0;
        do {
            // Shift all positions, one scalar value to the right.
            rightPos = lookaheadPos;
            lookaheadPos = positionAfter(lookaheadPos);
            // Shift all properties, one scalar value to the right.
            _a = [left, right, lookahead, wordbreakPropertyAt(lookaheadPos)], lookbehind = _a[0], left = _a[1], right = _a[2], lookahead = _a[3];
            // Break at the start and end of text, unless the text is empty.
            // WB1: Break at start of text...
            if (left === 19 /* sot */) {
                boundaries.push(rightPos);
                continue;
            }
            // WB2: Break at the end of text...
            if (right === 20 /* eot */) {
                boundaries.push(rightPos);
                break; // Reached the end of the string. We're done!
            }
            // WB3: Do not break within CRLF:
            if (left === 3 /* CR */ && right === 1 /* LF */)
                continue;
            // WB3b: Otherwise, break after...
            if (left === 2 /* Newline */ ||
                left === 3 /* CR */ ||
                left === 1 /* LF */) {
                boundaries.push(rightPos);
                continue;
            }
            // WB3a: ...and before newlines
            if (right === 2 /* Newline */ ||
                right === 3 /* CR */ ||
                right === 1 /* LF */) {
                boundaries.push(rightPos);
                continue;
            }
            // TODO: WB3c is not implemented, due to its complex, error-prone
            // implementation, requiring a ginormous regexp, and the fact that
            // the only thing it does is prevent big emoji sequences from being
            // split up, like 🧚🏼‍♂️
            // https://www.unicode.org/Public/emoji/12.0/emoji-zwj-sequences.txt
            // WB3d: Keep horizontal whitespace together
            if (left === 4 /* WSegSpace */ && right == 4 /* WSegSpace */)
                continue;
            // WB4: Ignore format and extend characters
            // This is to keep grapheme clusters together!
            // See: Section 6.2: https://unicode.org/reports/tr29/#Grapheme_Cluster_and_Format_Rules
            // N.B.: The rule about "except after sot, CR, LF, and
            // Newline" already been by WB1, WB2, WB3a, and WB3b above.
            while (right === 13 /* Format */ ||
                right === 14 /* Extend */ ||
                right === 16 /* ZWJ */) {
                // Continue advancing in the string, as if these
                // characters do not exist. DO NOT update left and
                // lookbehind however!
                _b = [lookaheadPos, positionAfter(lookaheadPos)], rightPos = _b[0], lookaheadPos = _b[1];
                _c = [lookahead, wordbreakPropertyAt(lookaheadPos)], right = _c[0], lookahead = _c[1];
            }
            // In ignoring the characters in the previous loop, we could
            // have fallen off the end of the string, so end the loop
            // prematurely if that happens!
            if (right === 20 /* eot */) {
                boundaries.push(rightPos);
                break;
            }
            // WB4 (continued): Lookahead must ALSO ignore these format,
            // extend, ZWJ characters!
            while (lookahead === 13 /* Format */ ||
                lookahead === 14 /* Extend */ ||
                lookahead === 16 /* ZWJ */) {
                // Continue advancing in the string, as if these
                // characters do not exist. DO NOT update left and right,
                // however!
                lookaheadPos = positionAfter(lookaheadPos);
                lookahead = wordbreakPropertyAt(lookaheadPos);
            }
            // WB5: Do not break between most letters.
            if (isAHLetter(left) && isAHLetter(right))
                continue;
            // Do not break across certain punctuation
            // WB6: (Don't break before apostrophes in contractions)
            if (isAHLetter(left) && isAHLetter(lookahead) &&
                (right === 10 /* MidLetter */ || isMidNumLetQ(right)))
                continue;
            // WB7: (Don't break after apostrophes in contractions)
            if (isAHLetter(lookbehind) && isAHLetter(right) &&
                (left === 10 /* MidLetter */ || isMidNumLetQ(left)))
                continue;
            // WB7a
            if (left === 15 /* Hebrew_Letter */ && right === 6 /* Single_Quote */)
                continue;
            // WB7b
            if (left === 15 /* Hebrew_Letter */ && right === 5 /* Double_Quote */ &&
                lookahead === 15 /* Hebrew_Letter */)
                continue;
            // WB7c
            if (lookbehind === 15 /* Hebrew_Letter */ && left === 5 /* Double_Quote */ &&
                right === 15 /* Hebrew_Letter */)
                continue;
            // Do not break within sequences of digits, or digits adjacent to letters.
            // e.g., "3a" or "A3"
            // WB8
            if (left === 9 /* Numeric */ && right === 9 /* Numeric */)
                continue;
            // WB9
            if (isAHLetter(left) && right === 9 /* Numeric */)
                continue;
            // WB10
            if (left === 9 /* Numeric */ && isAHLetter(right))
                continue;
            // Do not break within sequences, such as 3.2, 3,456.789
            // WB11
            if (lookbehind === 9 /* Numeric */ && right === 9 /* Numeric */ &&
                (left === 7 /* MidNum */ || isMidNumLetQ(left)))
                continue;
            // WB12
            if (left === 9 /* Numeric */ && lookahead === 9 /* Numeric */ &&
                (right === 7 /* MidNum */ || isMidNumLetQ(right)))
                continue;
            // WB13: Do not break between Katakana
            if (left === 17 /* Katakana */ && right === 17 /* Katakana */)
                continue;
            // Do not break from extenders (e.g., U+202F NARROW NO-BREAK SPACE)
            // WB13a
            if ((isAHLetter(left) ||
                left === 9 /* Numeric */ ||
                left === 17 /* Katakana */ ||
                left === 12 /* ExtendNumLet */) &&
                right === 12 /* ExtendNumLet */)
                continue;
            // WB13b
            if ((isAHLetter(right) ||
                right === 9 /* Numeric */ ||
                right === 17 /* Katakana */) && left === 12 /* ExtendNumLet */)
                continue;
            // WB15 & WB16:
            // Do not break within emoji flag sequences. That is, do not break between
            // regional indicator (RI) symbols if there is an odd number of RI
            // characters before the break point.
            if (right === 18 /* Regional_Indicator */) {
                // Emoji flags are actually composed of TWO scalar values, each being a
                // "regional indicator". These indicators correspond to Latin letters. Put
                // two of them together, and they spell out an ISO 3166-1-alpha-2 country
                // code. Since these always come in pairs, NEVER split the pairs! So, if
                // we happen to be inside the middle of an odd numbered of
                // Regional_Indicators, DON'T SPLIT IT!
                nConsecutiveRegionalIndicators += 1;
                if ((nConsecutiveRegionalIndicators % 2) == 1) {
                    continue;
                }
            }
            else {
                nConsecutiveRegionalIndicators = 0;
            }
            // WB999: Otherwise, break EVERYWHERE (including around ideographs)
            boundaries.push(rightPos);
        } while (rightPos < text.length);
        return boundaries;
        ///// Internal utility functions /////
        /**
         * Returns the position of the start of the next scalar value. This jumps
         * over surrogate pairs.
         *
         * If asked for the character AFTER the end of the string, this always
         * returns the length of the string.
         */
        function positionAfter(pos) {
            if (pos >= text.length) {
                return text.length;
            }
            else if (isStartOfSurrogatePair(text[pos])) {
                return pos + 2;
            }
            return pos + 1;
        }
        /**
         * Return the value of the Word_Break property at the given string index.
         * @param pos position in the text.
         */
        function wordbreakPropertyAt(pos) {
            if (pos < 0) {
                return 19 /* sot */; // Always "start of string" before the string starts!
            }
            else if (pos >= text.length) {
                return 20 /* eot */; // Always "end of string" after the string ends!
            }
            else if (isStartOfSurrogatePair(text[pos])) {
                // Surrogate pairs the next TWO items from the string!
                return property(text[pos] + text[pos + 1]);
            }
            return property(text[pos]);
        }
        // Word_Break rule macros
        // See: https://unicode.org/reports/tr29/#WB_Rule_Macros
        function isAHLetter(prop) {
            return prop === 11 /* ALetter */ ||
                prop === 15 /* Hebrew_Letter */;
        }
        function isMidNumLetQ(prop) {
            return prop === 8 /* MidNumLet */ ||
                prop === 6 /* Single_Quote */;
        }
    }
    function isStartOfSurrogatePair(character) {
        var codeUnit = character.charCodeAt(0);
        return codeUnit >= 0xD800 && codeUnit <= 0xDBFF;
    }
    /**
     * Return the Word_Break property value for a character.
     * Note that
     * @param character a scalar value
     */
    function property(character) {
        // This MUST be a scalar value.
        // TODO: remove dependence on character.codepointAt()?
        var codepoint = character.codePointAt(0);
        return searchForProperty(codepoint, 0, WORD_BREAK_PROPERTY.length - 1);
    }
    /**
     * Binary search for the word break property of a given CODE POINT.
     */
    function searchForProperty(codePoint, left, right) {
        // All items that are not found in the array are assigned the 'Other' property.
        if (right < left) {
            return 0 /* Other */;
        }
        var midpoint = left + ~~((right - left) / 2);
        var candidate = WORD_BREAK_PROPERTY[midpoint];
        var nextRange = WORD_BREAK_PROPERTY[midpoint + 1];
        var startOfNextRange = nextRange ? nextRange[0 /* Start */] : Infinity;
        if (codePoint < candidate[0 /* Start */]) {
            return searchForProperty(codePoint, left, midpoint - 1);
        }
        else if (codePoint >= startOfNextRange) {
            return searchForProperty(codePoint, midpoint + 1, right);
        }
        // We found it!
        return candidate[1 /* Value */];
    }
})(wordBreakers || (wordBreakers = {}));
// We cannot export a member whose name is a reserved word when
// implementing a namespace, BUT we can manually make the
// assignment and **declare** it as part of the namespace.
wordBreakers['default'] = wordBreakers.default_;
var wordBreakers;
(function (wordBreakers) {
    /**
     * A **VERY** dumb word breaker that simply splits at words. Do not use this
     * word breaker!
     *
     * @param phrase The phrase in which to break words.
     * @deprecated Use a word breaker tailored to your language instead!
     */
    function placeholder(phrase) {
        var nextStart = 0;
        return phrase.split(/\s+/).map(function (utterance) {
            // XXX: The indices are NOT accurate to the original phrase!
            var span = {
                start: nextStart,
                end: nextStart + utterance.length,
                text: utterance,
                length: utterance.length
            };
            nextStart = span.end;
            return span;
        });
    }
    wordBreakers.placeholder = placeholder;
})(wordBreakers || (wordBreakers = {}));
/// <reference path="./ascii.ts" />
/// <reference path="./default/index.ts" />
/// <reference path="./placeholder.ts" />
// Let the word breakers be available both in the browser and in Node.
if (typeof module !== "undefined" && module.exports) {
    module.exports['wordBreakers'] = wordBreakers;
}
//# sourceMappingURL=index.js.map